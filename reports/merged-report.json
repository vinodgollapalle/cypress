{
  "stats": {
    "suites": 324,
    "tests": 438,
    "passes": 400,
    "pending": 27,
    "failures": 7,
    "testsRegistered": 438,
    "passPercent": 91.32420091324201,
    "pendingPercent": 6.164383561643835,
    "other": 0,
    "hasOther": false,
    "skipped": 4,
    "hasSkipped": true,
    "start": "2025-08-14T15:05:02.867Z",
    "end": "2025-08-14T15:56:05.731Z",
    "duration": 3062864
  },
  "results": [
    {
      "uuid": "36ef07cf-7627-42d5-a8ca-e479d7c04737",
      "title": "",
      "fullFile": "cypress\\e2e\\arrowFunction.cy.js",
      "file": "cypress\\e2e\\arrowFunction.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "50f6fdde-b32f-445d-bba2-7413c840e7b6",
          "title": "Multiply three Numbers Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Multiplies three numbers",
              "fullTitle": "Multiply three Numbers Example Multiplies three numbers",
              "timedOut": null,
              "duration": 54,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const multiplyThreeNumbers = (a, b, c) => a * b * c;\nconst result = multiplyThreeNumbers(4, 6, 8);\ncy.log(`The multiplication of three numbers: ${result}`);",
              "err": {},
              "uuid": "180df821-2680-4f49-ab04-24eec92a408f",
              "parentUUID": "50f6fdde-b32f-445d-bba2-7413c840e7b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "180df821-2680-4f49-ab04-24eec92a408f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 54,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2c166e54-d4ec-40c6-8167-cfd14d1441db",
      "title": "",
      "fullFile": "cypress\\e2e\\assertionsExamples.cy.js",
      "file": "cypress\\e2e\\assertionsExamples.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bffd3ef3-0e49-493a-9486-59408556f000",
          "title": "Assertions Page - Cypress Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should assert element existence, visibility, and text content",
              "fullTitle": "Assertions Page - Cypress Tests should assert element existence, visibility, and text content",
              "timedOut": null,
              "duration": 10648,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/#assertions');\n//Assert: Element exists\ncy.get('.btn-warning').should('exist');\n//cy.get('#exist-element') .should('exist');\n// Assert: Element has specific text\ncy.get('.btn-primary').should('have.text', 'Test Cases');\n// Assert: Element is visible\ncy.get('.btn-success').should('be.visible');",
              "err": {},
              "uuid": "9920a9b7-b5ea-46f5-9565-b70f30acce47",
              "parentUUID": "bffd3ef3-0e49-493a-9486-59408556f000",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9920a9b7-b5ea-46f5-9565-b70f30acce47"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10648,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5875e4a0-a274-48e9-94f4-43b0911f567c",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "file": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89c4bc24-d719-4811-a641-219d5f7c21e9",
          "title": "Checkboxes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check and uncheck each checkbox",
              "fullTitle": "Checkboxes check and uncheck each checkbox",
              "timedOut": null,
              "duration": 9154,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/checkboxes');\n// Step 2: Locate all checkboxes (assume input[type=\"checkbox\"] is used)\ncy.get('input[type=\"checkbox\"]').each($checkbox => {\n  // Step 3: Check the checkbox\n  cy.wrap($checkbox).check().should('be.checked');\n  // Step 4: Uncheck the checkbox\n  cy.wrap($checkbox).uncheck().should('not.be.checked');\n});",
              "err": {},
              "uuid": "278fd3ff-991e-41c0-a455-d6bb77a3c99c",
              "parentUUID": "89c4bc24-d719-4811-a641-219d5f7c21e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "278fd3ff-991e-41c0-a455-d6bb77a3c99c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9154,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "28375819-efbb-4331-b903-81b07da1a846",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxPOM.cy.js",
      "file": "cypress\\e2e\\checkboxPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7de96a77-be2f-4299-9b94-de0f30cdd579",
          "title": "Checkboxes Test with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should check the first checkbox and uncheck the second",
              "fullTitle": "Checkboxes Test with POM Should check the first checkbox and uncheck the second",
              "timedOut": null,
              "duration": 4143,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "checkboxPage.checkFirstBox();\ncheckboxPage.uncheckSecondBox();\ncheckboxPage.validateCheckboxState([true, false]); // Validate both checkboxes",
              "err": {},
              "uuid": "7bdba9c4-435d-4972-a84a-81d2f480d53c",
              "parentUUID": "7de96a77-be2f-4299-9b94-de0f30cdd579",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7bdba9c4-435d-4972-a84a-81d2f480d53c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4143,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "abf5a7e7-7eb4-49ed-b2d6-b285c8bb5f19",
      "title": "",
      "fullFile": "cypress\\e2e\\contextmenuPOM.cy.js",
      "file": "cypress\\e2e\\contextmenuPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6d30da63-6677-4a38-aca5-7927beb11043",
          "title": "Context Menu Interaction Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should right click the box and validate the alert message",
              "fullTitle": "Context Menu Interaction Test Should right click the box and validate the alert message",
              "timedOut": null,
              "duration": 3025,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contextMenuPage.rightClickBox();\n//cy.get('a[target=\"_blank\"]').invoke('removeAttr', 'target').click();\ncontextMenuPage.handleAlert('You selected a context menu');",
              "err": {},
              "uuid": "4f1d7148-d281-4288-b8be-1cb2dd33c93b",
              "parentUUID": "6d30da63-6677-4a38-aca5-7927beb11043",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f1d7148-d281-4288-b8be-1cb2dd33c93b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3025,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7bcab895-3b39-4d2b-98ad-2b48b82c0996",
      "title": "",
      "fullFile": "cypress\\e2e\\dataTypes.cy.js",
      "file": "cypress\\e2e\\dataTypes.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "878b4799-bf4a-4473-818e-393d24fe1696",
          "title": "datatypes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "arraydatatype",
              "fullTitle": "datatypes arraydatatype",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let numbers = [1, 2, 3, 4, 5];\nlet sum = 0;\nfor (let i = 0; i < numbers.length; i++) {\n  sum += numbers[i];\n  cy.log(\"Sum of the numbers is:\", sum);\n}",
              "err": {},
              "uuid": "1ba46434-0704-4cfe-a976-6479fcb59857",
              "parentUUID": "878b4799-bf4a-4473-818e-393d24fe1696",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ba46434-0704-4cfe-a976-6479fcb59857"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 71,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e6718093-79b1-412d-b028-5b9cc95b6040",
      "title": "",
      "fullFile": "cypress\\e2e\\declareVariables.cy.js",
      "file": "cypress\\e2e\\declareVariables.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "083077b2-338f-494f-8d77-294223c63d15",
          "title": "variabledeclaration",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "variablelet",
              "fullTitle": "variabledeclaration variablelet",
              "timedOut": null,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let b = 2;\nb = 3;\ncy.log(b);",
              "err": {},
              "uuid": "2c26c7e1-7d89-4667-b33f-ed5d4b2c66f8",
              "parentUUID": "083077b2-338f-494f-8d77-294223c63d15",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "variableconst",
              "fullTitle": "variabledeclaration variableconst",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const c = 3;\nc = 4; //throws Error",
              "err": {},
              "uuid": "26161279-639d-4e7e-8e55-8c641bbd4d9f",
              "parentUUID": "083077b2-338f-494f-8d77-294223c63d15",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c26c7e1-7d89-4667-b33f-ed5d4b2c66f8"
          ],
          "failures": [],
          "pending": [
            "26161279-639d-4e7e-8e55-8c641bbd4d9f"
          ],
          "skipped": [],
          "duration": 27,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c7408c2d-4aca-4843-9ee5-27860392e27b",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "file": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "06b090d2-de39-4718-a0a6-5f75ed63c8b2",
          "title": "Delete a test note and validate cleanup",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deletes a note and confirms deletion",
              "fullTitle": "Delete a test note and validate cleanup Deletes a note and confirms deletion",
              "timedOut": null,
              "duration": 1365,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1: DELETE /notes/{id}\ncy.request({\n  method: 'DELETE',\n  url: `${baseUrl}/${noteId}`,\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Step 2: Confirm status 204\n  expect(response.status).to.eq(200);\n});\n// Step 3: GET /notes and confirm note is gone\ncy.request({\n  method: 'GET',\n  url: baseUrl,\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  //  //Validate the noteId no longer exists in the list\n  // const notes = response.body\n  // const found = notes.find(note => note.id === noteId)\n  // expect(found).to.be.undefined\n});",
              "err": {},
              "uuid": "c2c7380c-1143-4a43-aa84-246b5f1bb57d",
              "parentUUID": "06b090d2-de39-4718-a0a6-5f75ed63c8b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2c7380c-1143-4a43-aa84-246b5f1bb57d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1365,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3fdb2c99-d1ad-4207-aa68-b51101d8d5ba",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "file": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Delete NotesAPI",
          "fullTitle": "Delete NotesAPI",
          "timedOut": null,
          "duration": 0,
          "state": "pending",
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": true,
          "context": null,
          "code": "cy.get('@token').then(token => {\n  cy.get('@noteId').then(noteId => {\n    cy.request({\n      method: 'DELETE',\n      url: `https://practice.expandtesting.com/notes/api/notes/${noteId}`,\n      headers: {\n        'x-auth-token': token\n      },\n      body: noteData\n    }).then(res => {\n      cy.log(res);\n      expect(res.status).to.eq(200);\n      expect(res.body.message).to.eq('Note successfully deleted');\n    });\n  });\n});",
          "err": {},
          "uuid": "0c95f475-66b3-41ac-9418-0a6bc65492b3",
          "parentUUID": "3fdb2c99-d1ad-4207-aa68-b51101d8d5ba",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [],
      "pending": [
        "0c95f475-66b3-41ac-9418-0a6bc65492b3"
      ],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "529a97b5-0e8f-4ed1-ab03-48c63a9489a0",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdownPOM.cy.js",
      "file": "cypress\\e2e\\dropdownPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "667514aa-eb05-453d-8ddb-78cd817e32ac",
          "title": "Dropdown Handling Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should select Option 1 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 1 and validate",
              "timedOut": null,
              "duration": 4202,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 1');\ndropdownPage.getSelectedOption().should('have.text', 'Option 1');",
              "err": {},
              "uuid": "cea2502f-049f-4c33-a3f8-8259ea6f7381",
              "parentUUID": "667514aa-eb05-453d-8ddb-78cd817e32ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should select Option 2 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 2 and validate",
              "timedOut": null,
              "duration": 3405,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 2');\ndropdownPage.getSelectedOption().should('have.text', 'Option 2');",
              "err": {},
              "uuid": "0f65a336-0754-4125-a6c2-939e0c694a9c",
              "parentUUID": "667514aa-eb05-453d-8ddb-78cd817e32ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cea2502f-049f-4c33-a3f8-8259ea6f7381",
            "0f65a336-0754-4125-a6c2-939e0c694a9c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7607,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0f13c8b3-4d89-4162-84e3-48e3d81d0cfe",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdown_2b.cy.js",
      "file": "cypress\\e2e\\dropdown_2b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "78f65c4e-dc36-4620-a0a8-0c98c7b62b99",
          "title": "Select \"India\" from the dropdown",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "select India from the country dropdown",
              "fullTitle": "Select \"India\" from the dropdown select India from the country dropdown",
              "timedOut": null,
              "duration": 3104,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit the dropdown page\ncy.visit('https://practice.expandtesting.com/dropdown');\n// Select \"India\" from the dropdown by visible text\ncy.get('#country').select('India').should('have.value', 'IN');",
              "err": {},
              "uuid": "ad290606-814f-4218-8243-0ed0b0fb6d3f",
              "parentUUID": "78f65c4e-dc36-4620-a0a8-0c98c7b62b99",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad290606-814f-4218-8243-0ed0b0fb6d3f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3104,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "102efed8-2ca9-4597-a19a-230161faef2d",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "file": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9f3621c3-8f20-4136-8564-cca2b3ceba1b",
          "title": "Log browser name and CPU usage on dynamic-table",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs browser and CPU usage",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Logs browser and CPU usage",
              "timedOut": null,
              "duration": 3673,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get('table.table-striped tbody tr').each(($row, index) => {\n  const browserName = $row.find('td').eq(0).text();\n  const cpuUsage = $row.find('td').eq(2).text();\n  cy.get('table.table-striped tbody tr').should('have.length.at.least', 1);\n  cy.log(`Row ${index + 1}: Browser = ${browserName}, CPU Usage = ${cpuUsage}`);\n  expect(browserName).to.not.be.empty;\n  expect(cpuUsage).to.not.be.empty;\n});",
              "err": {},
              "uuid": "1e690418-82b0-4165-8295-2114725e3803",
              "parentUUID": "9f3621c3-8f20-4136-8564-cca2b3ceba1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "timedOut": null,
              "duration": 2710,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\nlet cpuAbove15Found = false;\ncy.get(\"table.table-striped tbody tr\").each(($row, rowIndex, $rows) => {\n  const $cells = $row.find('td');\n  const browserName = $cells.eq(0).text().trim(); // 1. Assert browser name is not empty\n  expect(browserName).to.not.be.empty;\n  $cells.each((i, td) => {\n    const cellText = td.innerText;\n    expect(cellText).to.not.be.empty; // 2. Assert no cell is empty\n  });\n  const cpuCell = [...$cells].find(td => td.innerText.includes('%')); // 3. Check if any CPU usage > 15%\n  if (cpuCell) {\n    const cpuValue = parseFloat(cpuCell.innerText.replace('%', ''));\n    if (cpuValue > 15) {\n      cpuAbove15Found = true;\n    }\n  }\n}).then(() => {\n  expect(cpuAbove15Found, \"CPU Usage above 15 not found\").to.be.false; // Final assertion after looping all rows\n});",
              "err": {},
              "uuid": "48bc9aae-9e5f-4135-9899-575dca5c193b",
              "parentUUID": "9f3621c3-8f20-4136-8564-cca2b3ceba1b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e690418-82b0-4165-8295-2114725e3803",
            "48bc9aae-9e5f-4135-9899-575dca5c193b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6383,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8c63daec-c73a-4d9c-92ec-df2f346ecdac",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "file": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3ca42b3b-cf9d-43c6-87a5-cc307b35ac50",
          "title": "Dynamic Content Validation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should detect dynamic content change after refresh",
              "fullTitle": "Dynamic Content Validation should detect dynamic content change after refresh",
              "timedOut": null,
              "duration": 5694,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dynamic-content');\n// Step 1: Get initial content\nlet firstLoadContent = [];\n_dynamicpage.default.getTextBlocks().then($blocks => {\n  $blocks.each((index, el) => {\n    firstLoadContent.push(el.innerText.trim());\n  });\n  // Step 2: Refresh the page\n  cy.reload();\n  // Step 3: Get new content\n  let secondLoadContent = [];\n  _dynamicpage.default.getTextBlocks().then($newBlocks => {\n    $newBlocks.each((index, el) => {\n      secondLoadContent.push(el.innerText.trim());\n    });\n    // Step 4: Compare the content\n    _dynamicpage.default.compareContent(firstLoadContent, secondLoadContent);\n  });\n});",
              "err": {},
              "uuid": "2b7f26fb-0523-43bd-a92e-3c93b78f844a",
              "parentUUID": "3ca42b3b-cf9d-43c6-87a5-cc307b35ac50",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b7f26fb-0523-43bd-a92e-3c93b78f844a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5694,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0669a8d7-3172-44e5-b237-8ce1a8bc0759",
      "title": "",
      "fullFile": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "file": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "45aa4eb3-97de-4cc6-92dc-8de9b7cd4482",
          "title": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Find the column index for \"Memory\"",
              "fullTitle": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage Find the column index for \"Memory\"",
              "timedOut": null,
              "duration": 2779,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table.table-striped thead tr th\").then($tr => {\n  let memoryColumnIndex = -1;\n  $tr.each((index, th) => {\n    const tr = th.innerText;\n    if (tr == 'Memory') {\n      memoryColumnIndex = index;\n    }\n  });\n  cy.log('Memory column index: ', memoryColumnIndex);\n  cy.get(\"table.table-striped tbody tr\").each($trow => {\n    const $cells = $trow.find('td');\n    const browserName = $cells.eq(0).text().trim();\n    const memory = $cells.eq(memoryColumnIndex).text();\n    cy.log(browserName, ' Memory:', memory);\n  });\n});",
              "err": {},
              "uuid": "bbebab7e-ac41-4c81-957d-6f0b0ab00f74",
              "parentUUID": "45aa4eb3-97de-4cc6-92dc-8de9b7cd4482",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbebab7e-ac41-4c81-957d-6f0b0ab00f74"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2779,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b981547f-df70-4d59-9472-335e3e54993d",
      "title": "",
      "fullFile": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "file": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dc22b74a-892d-45bf-b060-c9fa84697a2b",
          "title": "Fetch All Notes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new note",
              "fullTitle": "Fetch All Notes create a new note",
              "timedOut": null,
              "duration": 1191,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 2: Create a note\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: noteTitle,\n    description: noteDescription,\n    category: 'Personal'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  createdNoteId = response.body.data.id;\n  expect(createdNoteId).to.exist;\n});",
              "err": {},
              "uuid": "3b42d23e-39e3-44f1-8ea1-18457266278d",
              "parentUUID": "dc22b74a-892d-45bf-b060-c9fa84697a2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch all notes and contain the newly created note",
              "fullTitle": "Fetch All Notes should fetch all notes and contain the newly created note",
              "timedOut": null,
              "duration": 537,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 3: Fetch all notes\ncy.request({\n  method: 'GET',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.be.an('array');\n  // Step 4: Assert the created note exists in the array\n  const found = response.body.data.find(note =>\n  //note.id === createdNoteId && note.title === noteTitle\n  note.title === noteTitle && note.description === noteDescription);\n  expect(found, 'Newly created note should be in the list').to.exist;\n});",
              "err": {},
              "uuid": "2983173b-aefa-4b23-a403-4983cd28afb6",
              "parentUUID": "dc22b74a-892d-45bf-b060-c9fa84697a2b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b42d23e-39e3-44f1-8ea1-18457266278d",
            "2983173b-aefa-4b23-a403-4983cd28afb6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1728,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7ce4661f-295c-4af8-8588-9a1627bab860",
      "title": "",
      "fullFile": "cypress\\e2e\\functionDeclaration.cy.js",
      "file": "cypress\\e2e\\functionDeclaration.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b991a107-6374-457b-a6c8-43297d429087",
          "title": "Logging Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs the welcome message",
              "fullTitle": "Logging Example Logs the welcome message",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "logWelcome();",
              "err": {},
              "uuid": "a6929e9a-1609-46e6-afc5-27301a7934a6",
              "parentUUID": "b991a107-6374-457b-a6c8-43297d429087",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6929e9a-1609-46e6-afc5-27301a7934a6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d497c2ec-1c41-4354-957d-ab72426e587b",
      "title": "",
      "fullFile": "cypress\\e2e\\functionExpression.cy.js",
      "file": "cypress\\e2e\\functionExpression.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "68b11a94-9439-4155-afe7-c22ed71e3b08",
          "title": "function expression",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs user email",
              "fullTitle": "function expression Logs user email",
              "timedOut": null,
              "duration": 35,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const printUserEmail = function (email) {\n  cy.log(` User email: ${email}`);\n};\nprintUserEmail('cypresstesting@com');",
              "err": {},
              "uuid": "01da1e24-2524-4e85-b4b9-640a625ebf5b",
              "parentUUID": "68b11a94-9439-4155-afe7-c22ed71e3b08",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "01da1e24-2524-4e85-b4b9-640a625ebf5b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5a0bf040-b5df-445b-aa3b-af115ea54ec3",
      "title": "",
      "fullFile": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "file": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "59c16e70-f734-4302-ba1f-7169f01fad65",
          "title": "OddorEven",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "OddorEven",
              "fullTitle": "OddorEven OddorEven",
              "timedOut": null,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "function evenorodd(number) {\n  if (number % 2 === 0) {\n    cy.log(\"Even\");\n  } else {\n    cy.log(\"Odd\");\n  }\n}\nlet s = evenorodd(6);\ncy.log(s);",
              "err": {},
              "uuid": "89562c1e-c775-4438-9fdc-0f5926154249",
              "parentUUID": "59c16e70-f734-4302-ba1f-7169f01fad65",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "89562c1e-c775-4438-9fdc-0f5926154249"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "18eb501d-8308-4073-be54-214f03559261",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "67c9a337-337f-4bb0-97ff-5225a6871639",
          "title": "Login Functinality with Negative scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "invalid username",
              "fullTitle": "Login Functinality with Negative scenarios invalid username",
              "timedOut": null,
              "duration": 7576,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('testAbcd');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid username\ncy.get('#flash').should('be.visible').and('contain.text', 'Your username is invalid!');",
              "err": {},
              "uuid": "0f4db85f-cd66-4d3e-8642-90f16ae98c72",
              "parentUUID": "67c9a337-337f-4bb0-97ff-5225a6871639",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "invalid password",
              "fullTitle": "Login Functinality with Negative scenarios invalid password",
              "timedOut": null,
              "duration": 5793,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('practice');\ncy.get('#password').type('cdeef!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid password\ncy.get('#flash').should('be.visible').and('contain.text', 'Your password is invalid!');",
              "err": {},
              "uuid": "1e3bb58a-fbdd-4c91-a2f0-3c14a2568f8a",
              "parentUUID": "67c9a337-337f-4bb0-97ff-5225a6871639",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f4db85f-cd66-4d3e-8642-90f16ae98c72",
            "1e3bb58a-fbdd-4c91-a2f0-3c14a2568f8a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13369,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f8b29e9d-84a0-4cdd-84f7-fb666508991d",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89ef3262-2987-429e-b04a-29f2deb2dc70",
          "title": "Login Functionality Positive scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login in to application with valid credentials",
              "fullTitle": "Login Functionality Positive scenarios Login in to application with valid credentials",
              "timedOut": null,
              "duration": 6039,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n//Assert URL\ncy.url().should('include', '/secure');\n//Assert Success Message\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n//Assert Logout Button\ncy.get('a.button.secondary.radius').should('be.visible').and('contain.text', 'Logout');",
              "err": {},
              "uuid": "4c45e1c8-b7f8-4517-b49e-78abc1bb8b6b",
              "parentUUID": "89ef3262-2987-429e-b04a-29f2deb2dc70",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c45e1c8-b7f8-4517-b49e-78abc1bb8b6b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6039,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8e864e27-e35b-423c-bdba-041bbab9b6ea",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandExtractToken.cy.js",
      "file": "cypress\\e2e\\loginandExtractToken.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3e5187b8-b531-48f8-ad25-9c25f50823ab",
          "title": "User Login API and Extract Token",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "log in and extract the token",
              "fullTitle": "User Login API and Extract Token log in and extract the token",
              "timedOut": null,
              "duration": 634,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/login',\n  body: apidata,\n  failOnStatusCode: false\n}).then(res => {\n  cy.log(res);\n  // Step 3: Assert response status\n  expect(res.status).to.eq(200);\n  // Step 2: Extract and validate token\n  //expect(response.body).to.have.property('token');\n  cy.log(res.body.message);\n  expect(res.body.message).to.eq(\"Login successful\");\n  const token = res.body.data.token;\n  expect(res.body.data.token).to.not.be.null;\n  //cy.log(authToken)\n  // Save token to alias for reuse\n  cy.wrap(token).as('authToken');\n});",
              "err": {},
              "uuid": "558ca819-53d5-4dbc-9a87-1370f26a03e0",
              "parentUUID": "3e5187b8-b531-48f8-ad25-9c25f50823ab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "558ca819-53d5-4dbc-9a87-1370f26a03e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 634,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9e9895d1-3758-4bf2-a79f-fdc24655d773",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "file": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7507df9e-7e7a-4ac5-ac89-ba92d697ecbd",
          "title": "loginApp",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login to an application with valid credentials",
              "fullTitle": "loginApp login to an application with valid credentials",
              "timedOut": null,
              "duration": 5745,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\n//cy.get('Username: ').contains('practice')\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();",
              "err": {},
              "uuid": "05be625e-eded-49d7-b701-1f8c739cecff",
              "parentUUID": "7507df9e-7e7a-4ac5-ac89-ba92d697ecbd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "logout to an application",
              "fullTitle": "loginApp logout to an application",
              "timedOut": null,
              "duration": 10188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\ncy.get('i[class=\"icon-2x icon-signout\"]').click();",
              "err": {},
              "uuid": "4d43ffc8-c158-4e01-b4b1-399b534d7530",
              "parentUUID": "7507df9e-7e7a-4ac5-ac89-ba92d697ecbd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "05be625e-eded-49d7-b701-1f8c739cecff",
            "4d43ffc8-c158-4e01-b4b1-399b534d7530"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15933,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8bb07029-4c72-4022-82fe-c86d1d19d2c6",
      "title": "",
      "fullFile": "cypress\\e2e\\loginpagePOM.cy.js",
      "file": "cypress\\e2e\\loginpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a7e2c386-6d3e-4ad7-b973-3e7e518d01ed",
          "title": "Login Page Testcase with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user should login and redirect to secure area",
              "fullTitle": "Login Page Testcase with POM user should login and redirect to secure area",
              "timedOut": null,
              "duration": 226,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\loginpagePOM.cy.js\\\\Login Page Testcase with POM -- user should login and redirect to secure area -- before each hook (failed).png\"\n    ]\n  ]\n}",
              "code": "_loginpage.default.enterUsername('practice');\n_loginpage.default.enterPassword('SuperSecretPassword!');\n_loginpage.default.clickLogin();\ncy.url().should('include', '/secure');\n//cy.url().should('include', '/login');\ncy.contains('You logged into a secure area!').should('be.visible');",
              "err": {
                "message": "TypeError: _loginpage.default.visit is not a function\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Login Page Testcase with POM`",
                "estack": "TypeError: _loginpage.default.visit is not a function\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Login Page Testcase with POM`\n    at Context.eval (webpack://cypress/./cypress/e2e/loginpagePOM.cy.js:8:14)\n    at runnable.fn (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:141791:19)\n    at callFn (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:160869:21)\n    at Runnable.run (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:160856:7)\n    at <unknown> (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:166946:30)\n    at PassThroughHandlerContext.finallyHandler (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:4042:23)\n    at PassThroughHandlerContext.tryCatcher (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1546:18)",
                "diff": null
              },
              "uuid": "fb7e24bb-4313-4afb-ae1c-0549bad5f76c",
              "parentUUID": "a7e2c386-6d3e-4ad7-b973-3e7e518d01ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid user login should show error message",
              "fullTitle": "Login Page Testcase with POM Invalid user login should show error message",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_loginpage.default.enterUsername('abdcdef');\n_loginpage.default.enterPassword('dfdfdfd');\n_loginpage.default.clickLogin();\ncy.contains('Your username is invalid!').should('be.visible');\ncy.url().should('include', '/login');",
              "err": {},
              "uuid": "86f539f7-6bd7-4732-bd8b-356ef45b5ec3",
              "parentUUID": "a7e2c386-6d3e-4ad7-b973-3e7e518d01ed",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fb7e24bb-4313-4afb-ae1c-0549bad5f76c"
          ],
          "pending": [],
          "skipped": [
            "86f539f7-6bd7-4732-bd8b-356ef45b5ec3"
          ],
          "duration": 226,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "67ae8dd0-0abd-4b23-8fde-830f443653f5",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "file": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c85ac689-228f-464c-bc03-c45182c9a1f2",
          "title": "Login Application",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Log in with valid credentials",
              "fullTitle": "Login Application Log in with valid credentials",
              "timedOut": null,
              "duration": 6918,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login('practice', 'SuperSecretPassword!');\ncy.url().should('include', '/secure');",
              "err": {},
              "uuid": "446c5ae4-400d-42e4-85cf-5bdd79367bee",
              "parentUUID": "c85ac689-228f-464c-bc03-c45182c9a1f2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "446c5ae4-400d-42e4-85cf-5bdd79367bee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6918,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4da75459-25c6-46f3-a31a-a718c08cc40a",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "file": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4d4edc69-5652-42c4-a64c-747ff342e346",
          "title": "Login with fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs in using data from user.json",
              "fullTitle": "Login with fixture data Logs in using data from user.json",
              "timedOut": null,
              "duration": 6850,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\n// Use fixture data to fill in login form\ncy.get('#username').type(this.userData.username);\ncy.get('#password').type(this.userData.password);\ncy.get('button[type=\"submit\"]').click();\n// Assertion \ncy.url().should('include', '/secure');\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "d426aef9-a2aa-4c40-ae1a-83f7fb33df45",
              "parentUUID": "4d4edc69-5652-42c4-a64c-747ff342e346",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d426aef9-a2aa-4c40-ae1a-83f7fb33df45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6850,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a279c55a-9e8b-4524-9961-3b73db4610c2",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "file": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "38d7d37e-4da8-4ee4-a10e-0c3c75bca9f5",
          "title": "Login using fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login with form data from JSON file",
              "fullTitle": "Login using fixture data Login with form data from JSON file",
              "timedOut": null,
              "duration": 6471,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Load fixture\ncy.fixture('formData').then(data => {\n  cy.visit('https://practice.expandtesting.com/login');\n  // Fill in the form\n  cy.get('#username').type(data.username);\n  cy.get('#password').type(data.password);\n  cy.get('button[type=\"submit\"]').click();\n  // Validate login success\n  cy.url().should('include', '/secure');\n  cy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n});",
              "err": {},
              "uuid": "73feddd2-c10b-4287-b157-6ab61e49b99d",
              "parentUUID": "38d7d37e-4da8-4ee4-a10e-0c3c75bca9f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73feddd2-c10b-4287-b157-6ab61e49b99d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6471,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a97a8c63-04f9-4f15-bab4-1ca629dedfff",
      "title": "",
      "fullFile": "cypress\\e2e\\radiobutton_2c.cy.js",
      "file": "cypress\\e2e\\radiobutton_2c.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "71517eaa-dbe7-4beb-abbf-f2e0afe06a07",
          "title": "Select Blue radio button",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select the Blue radio button",
              "fullTitle": "Select Blue radio button Select the Blue radio button",
              "timedOut": null,
              "duration": 2916,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/radio-buttons');\n//blue radio button\ncy.get('input#blue').check().should('be.checked');",
              "err": {},
              "uuid": "91663168-e7c6-45ca-881c-6cc7818be04d",
              "parentUUID": "71517eaa-dbe7-4beb-abbf-f2e0afe06a07",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "91663168-e7c6-45ca-881c-6cc7818be04d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2916,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7f679c1f-3998-4c30-8a8e-e8b96e15845c",
      "title": "",
      "fullFile": "cypress\\e2e\\registernewuserAPI.cy.js",
      "file": "cypress\\e2e\\registernewuserAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d111e81f-e427-44db-8230-d5831cacc58b",
          "title": "Register New User using API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new user",
              "fullTitle": "Register New User using API create a new user",
              "timedOut": null,
              "duration": 696,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//const timestamp = Date.now()\nconst apidata = {\n  name: \"QAtester27\",\n  email: \"sssf27@abcd.com\",\n  password: \"QAPassword27\"\n};\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/register',\n  body: apidata,\n  failOnStatusCode: false // allows manual status check\n}).then(res => {\n  cy.log(res);\n  // Step 2: Assert response status\n  expect(res.status).to.eq(201);\n  // Step 3: Validate success message\n  expect(res.body.message).to.eq('User account created successfully');\n});",
              "err": {},
              "uuid": "fb443667-6a47-4550-8676-a6816672bcfd",
              "parentUUID": "d111e81f-e427-44db-8230-d5831cacc58b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb443667-6a47-4550-8676-a6816672bcfd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 696,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "75891d81-854d-410f-83bb-14a453338ff1",
      "title": "",
      "fullFile": "cypress\\e2e\\registrationForm.cy.js",
      "file": "cypress\\e2e\\registrationForm.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
          "title": "Registration Form Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": " Registration Page",
              "fullTitle": "Registration Form Tests  Registration Page",
              "timedOut": null,
              "duration": 8799,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('QATest24');\ncy.get('#password').type('QATest23');\n//cy.get('input#confirmPassword', { timeout: 10000 }).should('be.visible').type('test1234');\ncy.get('#confirmPassword', {\n  timeout: 10000\n}).should('be.visible').type('QATest23');\ncy.get('button[type=submit]').click();\n// Redirect to login and show success message\ncy.url().should('include', '/login');\ncy.get('#flash').should('be.visible').and('contain.text', 'Successfully registered, you can log in now.');",
              "err": {},
              "uuid": "c00209e9-ded4-450c-ac66-f852d6691eae",
              "parentUUID": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "username validation",
              "fullTitle": "Registration Form Tests username validation",
              "timedOut": null,
              "duration": 5721,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#password').type('ValidPass');\ncy.get('#confirmPassword').type('ValidPass');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "2720d24b-1501-426b-b316-8305b24794b8",
              "parentUUID": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Password validation",
              "fullTitle": "Registration Form Tests Missing Password validation",
              "timedOut": null,
              "duration": 9553,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#confirmPassword').type('test123');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "ac2d189e-dd6a-4bec-8867-493761c90dc5",
              "parentUUID": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Non-matching passwords",
              "fullTitle": "Registration Form Tests Non-matching passwords",
              "timedOut": null,
              "duration": 6865,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#password').type('test123');\ncy.get('#confirmPassword').type('Mismatch123!');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'Passwords do not match.');",
              "err": {},
              "uuid": "371be7ac-3083-45fd-88f8-b3a6900446d2",
              "parentUUID": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c00209e9-ded4-450c-ac66-f852d6691eae",
            "2720d24b-1501-426b-b316-8305b24794b8",
            "ac2d189e-dd6a-4bec-8867-493761c90dc5",
            "371be7ac-3083-45fd-88f8-b3a6900446d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 30938,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2d9b6f4e-a2ba-4e14-87b8-64755a92a1b1",
      "title": "",
      "fullFile": "cypress\\e2e\\screateNoteAPI.cy.js",
      "file": "cypress\\e2e\\screateNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "686af31f-de3f-41a8-a42c-9ed8c7a8842f",
          "title": "Create a Note",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a note and return an ID",
              "fullTitle": "Create a Note create a note and return an ID",
              "timedOut": null,
              "duration": 1207,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: 'Test Note',\n    description: 'This is a test note created through API testing.',\n    category: 'Work'\n  }\n}).then(response => {\n  console.log('Response Body:', response.body);\n  cy.log(JSON.stringify(response.body));\n  // Basic response check\n  expect(response.status).to.eq(200);\n  // Adjust according to the actual structure\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.have.property('id');\n  expect(response.body.data.title).to.eq('Test Note');\n});",
              "err": {},
              "uuid": "54d3003f-d9ef-4f1d-9b2d-905e04194322",
              "parentUUID": "686af31f-de3f-41a8-a42c-9ed8c7a8842f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54d3003f-d9ef-4f1d-9b2d-905e04194322"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1207,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1f79a8f0-349e-4d8a-8525-0a788e82e9d0",
      "title": "",
      "fullFile": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "file": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "scroll in an element",
          "fullTitle": "scroll in an element",
          "timedOut": null,
          "duration": 3951,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/scrollbars\");\n//scroll in to an element\n//cy.get(\"[id='search-input']\").type(\"scrollbars\")  \ncy.get('[style=\"height:150px;overflow-y: scroll;width:300px;overflow-x:scroll\"]').click();\ncy.get('#hidingButton').scrollIntoView().click();",
          "err": {},
          "uuid": "1397d485-0e59-42ab-8d3f-599f4b773e35",
          "parentUUID": "1f79a8f0-349e-4d8a-8525-0a788e82e9d0",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Drag and drop",
          "fullTitle": "Drag and drop",
          "timedOut": null,
          "duration": 2477,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/drag-and-drop\");\n// Drag Box A and drop it on Box B\ncy.get('#column-a').drag('#column-b');\n// Optional: assert that they’ve swapped\ncy.get('#column-a header').should('have.text', 'B');\ncy.get('#column-b header').should('have.text', 'A');",
          "err": {},
          "uuid": "8970d60e-1b5c-4345-8b61-db9a59c58b35",
          "parentUUID": "1f79a8f0-349e-4d8a-8525-0a788e82e9d0",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "1397d485-0e59-42ab-8d3f-599f4b773e35",
        "8970d60e-1b5c-4345-8b61-db9a59c58b35"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 6428,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "81d30ccb-58e5-4a0c-b965-f1f84c8e37fb",
      "title": "",
      "fullFile": "cypress\\e2e\\securePageTestPom.cy.js",
      "file": "cypress\\e2e\\securePageTestPom.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dd4fefc4-59d2-4986-aba8-a2665091b3ea",
          "title": "Login Page Testcase with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user should login and redirect to secure area",
              "fullTitle": "Login Page Testcase with POM user should login and redirect to secure area",
              "timedOut": null,
              "duration": 64606,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('practice');\nloginPage.enterPassword('SuperSecretPassword!');\nloginPage.clickLogin();\nsecurePage.isAtSecurePage();\nsecurePage.getSuccessAlert().should('contain.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "8ed15771-0f6c-460a-aabd-1f60ff80b77c",
              "parentUUID": "dd4fefc4-59d2-4986-aba8-a2665091b3ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User should be able to logout successfully",
              "fullTitle": "Login Page Testcase with POM User should be able to logout successfully",
              "timedOut": null,
              "duration": 49407,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('practice');\nloginPage.enterPassword('SuperSecretPassword!');\nloginPage.clickLogin();\nsecurePage.logout();\ncy.url().should('include', '/login');\ncy.get('#flash, .flash.info').should('contain.text', 'You logged out of the secure area!'); // Adjust based on actual message",
              "err": {},
              "uuid": "3a450878-aad6-4059-af62-0291a08a0ba4",
              "parentUUID": "dd4fefc4-59d2-4986-aba8-a2665091b3ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ed15771-0f6c-460a-aabd-1f60ff80b77c",
            "3a450878-aad6-4059-af62-0291a08a0ba4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 114013,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fce6606a-6c25-40fd-ba4f-d53e585a4f0f",
      "title": "",
      "fullFile": "cypress\\e2e\\usePrevSubject.cy.js",
      "file": "cypress\\e2e\\usePrevSubject.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "67242d47-2184-482e-95af-dee35b098c62",
          "title": "usePrevSubject",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login using Fillinput",
              "fullTitle": "usePrevSubject Login using Fillinput",
              "timedOut": null,
              "duration": 8406,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Use previous subject\ncy.get('#username').fillinput('practice');\ncy.get('#password').fillinput('SuperSecretPassword!');\ncy.get('#login > .btn').click();\ncy.get('b').should('have.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "3e957e26-1fb8-4531-ab4f-d33f52bfa286",
              "parentUUID": "67242d47-2184-482e-95af-dee35b098c62",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e957e26-1fb8-4531-ab4f-d33f52bfa286"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8406,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8fa49d05-94f7-4c96-8ee8-fa408fd6497a",
      "title": "",
      "fullFile": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "file": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b2f0dbd5-dda5-4e31-9e49-fbfcbfd52888",
          "title": "Validate Chrome CPU usage matches the label",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "fullTitle": "Validate Chrome CPU usage matches the label Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "timedOut": null,
              "duration": 2713,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\n// Wait until Chrome row appears\ncy.get(\"table.table-striped tbody tr\").each($tr => {\n  const $td = $tr.find('td');\n  const browserName = $td.eq(0).text().trim();\n  if (browserName == 'Chrome') {\n    var _find;\n    const cpuUsageFromTable = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText.trim();\n    cy.get('#chrome-cpu').invoke('text').then(fullText => {\n      const match = fullText.match(/(\\d+(\\.\\d+)?%)/);\n      const cpuUsageFromCard = match ? match[0] : null;\n      expect(cpuUsageFromCard).to.eq(cpuUsageFromTable);\n    });\n  }\n});",
              "err": {},
              "uuid": "72b8b791-05fe-4483-8f7f-942d529e7ee6",
              "parentUUID": "b2f0dbd5-dda5-4e31-9e49-fbfcbfd52888",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "72b8b791-05fe-4483-8f7f-942d529e7ee6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2713,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1e3a8ae8-6b8a-4043-b32c-6f3bdd3d827c",
      "title": "",
      "fullFile": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "file": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b1687753-2f7f-41b3-b3d1-8d86b540b981",
          "title": "Log Each Browsername and its cpu usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "use .each() to log each browser name and its CPU usage.",
              "fullTitle": "Log Each Browsername and its cpu usage use .each() to log each browser name and its CPU usage.",
              "timedOut": null,
              "duration": 3458,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsage = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText;\n  cy.log('Browser Name is ', browsername, 'cpu usage', cpuUsage);\n});",
              "err": {},
              "uuid": "a046bb90-be0c-49c6-a262-08dd3b2d6c88",
              "parentUUID": "b1687753-2f7f-41b3-b3d1-8d86b540b981",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Count how many browsers have CPU usage over 20%.",
              "fullTitle": "Log Each Browsername and its cpu usage Count how many browsers have CPU usage over 20%.",
              "timedOut": null,
              "duration": 5027,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let count = 0;\ncy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find2;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsageText = (_find2 = [...$td].find(td => td.innerText.includes('%'))) === null || _find2 === void 0 ? void 0 : _find2.innerText;\n  if (cpuUsageText) {\n    const cpuValue = parseFloat(cpuUsageText.replace('%', ''));\n    if (cpuValue > 20) {\n      count++;\n    }\n  }\n}).then(() => {\n  cy.log('Total browser count with>20 % is', count);\n});",
              "err": {},
              "uuid": "3253ef1d-f931-43c5-bf7e-d3e24b5e8658",
              "parentUUID": "b1687753-2f7f-41b3-b3d1-8d86b540b981",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a046bb90-be0c-49c6-a262-08dd3b2d6c88",
            "3253ef1d-f931-43c5-bf7e-d3e24b5e8658"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8485,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a1deab7f-06b1-4601-935e-cc1f22e9b5b9",
      "title": "",
      "fullFile": "cypress\\e2e\\LoopNumbers.cy.js",
      "file": "cypress\\e2e\\LoopNumbers.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b3971182-12ef-4556-abcf-230dbec042b1",
          "title": "loop Numbers",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "loop",
              "fullTitle": "loop Numbers loop",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "for (let i = 1; i <= 10; i++) {\n  if (i % 2 === 0) {\n    cy.log(i);\n  }\n}",
              "err": {},
              "uuid": "c51ab8e8-e024-4c5c-b0a1-e63b6126d13b",
              "parentUUID": "b3971182-12ef-4556-abcf-230dbec042b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "c51ab8e8-e024-4c5c-b0a1-e63b6126d13b"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "36ef07cf-7627-42d5-a8ca-e479d7c04737",
      "title": "",
      "fullFile": "cypress\\e2e\\arrowFunction.cy.js",
      "file": "cypress\\e2e\\arrowFunction.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "50f6fdde-b32f-445d-bba2-7413c840e7b6",
          "title": "Multiply three Numbers Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Multiplies three numbers",
              "fullTitle": "Multiply three Numbers Example Multiplies three numbers",
              "timedOut": null,
              "duration": 54,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const multiplyThreeNumbers = (a, b, c) => a * b * c;\nconst result = multiplyThreeNumbers(4, 6, 8);\ncy.log(`The multiplication of three numbers: ${result}`);",
              "err": {},
              "uuid": "180df821-2680-4f49-ab04-24eec92a408f",
              "parentUUID": "50f6fdde-b32f-445d-bba2-7413c840e7b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "180df821-2680-4f49-ab04-24eec92a408f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 54,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2c166e54-d4ec-40c6-8167-cfd14d1441db",
      "title": "",
      "fullFile": "cypress\\e2e\\assertionsExamples.cy.js",
      "file": "cypress\\e2e\\assertionsExamples.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bffd3ef3-0e49-493a-9486-59408556f000",
          "title": "Assertions Page - Cypress Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should assert element existence, visibility, and text content",
              "fullTitle": "Assertions Page - Cypress Tests should assert element existence, visibility, and text content",
              "timedOut": null,
              "duration": 10648,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/#assertions');\n//Assert: Element exists\ncy.get('.btn-warning').should('exist');\n//cy.get('#exist-element') .should('exist');\n// Assert: Element has specific text\ncy.get('.btn-primary').should('have.text', 'Test Cases');\n// Assert: Element is visible\ncy.get('.btn-success').should('be.visible');",
              "err": {},
              "uuid": "9920a9b7-b5ea-46f5-9565-b70f30acce47",
              "parentUUID": "bffd3ef3-0e49-493a-9486-59408556f000",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9920a9b7-b5ea-46f5-9565-b70f30acce47"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10648,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5875e4a0-a274-48e9-94f4-43b0911f567c",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "file": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89c4bc24-d719-4811-a641-219d5f7c21e9",
          "title": "Checkboxes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check and uncheck each checkbox",
              "fullTitle": "Checkboxes check and uncheck each checkbox",
              "timedOut": null,
              "duration": 9154,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/checkboxes');\n// Step 2: Locate all checkboxes (assume input[type=\"checkbox\"] is used)\ncy.get('input[type=\"checkbox\"]').each($checkbox => {\n  // Step 3: Check the checkbox\n  cy.wrap($checkbox).check().should('be.checked');\n  // Step 4: Uncheck the checkbox\n  cy.wrap($checkbox).uncheck().should('not.be.checked');\n});",
              "err": {},
              "uuid": "278fd3ff-991e-41c0-a455-d6bb77a3c99c",
              "parentUUID": "89c4bc24-d719-4811-a641-219d5f7c21e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "278fd3ff-991e-41c0-a455-d6bb77a3c99c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9154,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "28375819-efbb-4331-b903-81b07da1a846",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxPOM.cy.js",
      "file": "cypress\\e2e\\checkboxPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7de96a77-be2f-4299-9b94-de0f30cdd579",
          "title": "Checkboxes Test with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should check the first checkbox and uncheck the second",
              "fullTitle": "Checkboxes Test with POM Should check the first checkbox and uncheck the second",
              "timedOut": null,
              "duration": 4143,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "checkboxPage.checkFirstBox();\ncheckboxPage.uncheckSecondBox();\ncheckboxPage.validateCheckboxState([true, false]); // Validate both checkboxes",
              "err": {},
              "uuid": "7bdba9c4-435d-4972-a84a-81d2f480d53c",
              "parentUUID": "7de96a77-be2f-4299-9b94-de0f30cdd579",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7bdba9c4-435d-4972-a84a-81d2f480d53c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4143,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "abf5a7e7-7eb4-49ed-b2d6-b285c8bb5f19",
      "title": "",
      "fullFile": "cypress\\e2e\\contextmenuPOM.cy.js",
      "file": "cypress\\e2e\\contextmenuPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6d30da63-6677-4a38-aca5-7927beb11043",
          "title": "Context Menu Interaction Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should right click the box and validate the alert message",
              "fullTitle": "Context Menu Interaction Test Should right click the box and validate the alert message",
              "timedOut": null,
              "duration": 3025,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contextMenuPage.rightClickBox();\n//cy.get('a[target=\"_blank\"]').invoke('removeAttr', 'target').click();\ncontextMenuPage.handleAlert('You selected a context menu');",
              "err": {},
              "uuid": "4f1d7148-d281-4288-b8be-1cb2dd33c93b",
              "parentUUID": "6d30da63-6677-4a38-aca5-7927beb11043",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f1d7148-d281-4288-b8be-1cb2dd33c93b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3025,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7bcab895-3b39-4d2b-98ad-2b48b82c0996",
      "title": "",
      "fullFile": "cypress\\e2e\\dataTypes.cy.js",
      "file": "cypress\\e2e\\dataTypes.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "878b4799-bf4a-4473-818e-393d24fe1696",
          "title": "datatypes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "arraydatatype",
              "fullTitle": "datatypes arraydatatype",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let numbers = [1, 2, 3, 4, 5];\nlet sum = 0;\nfor (let i = 0; i < numbers.length; i++) {\n  sum += numbers[i];\n  cy.log(\"Sum of the numbers is:\", sum);\n}",
              "err": {},
              "uuid": "1ba46434-0704-4cfe-a976-6479fcb59857",
              "parentUUID": "878b4799-bf4a-4473-818e-393d24fe1696",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ba46434-0704-4cfe-a976-6479fcb59857"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 71,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e6718093-79b1-412d-b028-5b9cc95b6040",
      "title": "",
      "fullFile": "cypress\\e2e\\declareVariables.cy.js",
      "file": "cypress\\e2e\\declareVariables.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "083077b2-338f-494f-8d77-294223c63d15",
          "title": "variabledeclaration",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "variablelet",
              "fullTitle": "variabledeclaration variablelet",
              "timedOut": null,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let b = 2;\nb = 3;\ncy.log(b);",
              "err": {},
              "uuid": "2c26c7e1-7d89-4667-b33f-ed5d4b2c66f8",
              "parentUUID": "083077b2-338f-494f-8d77-294223c63d15",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "variableconst",
              "fullTitle": "variabledeclaration variableconst",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const c = 3;\nc = 4; //throws Error",
              "err": {},
              "uuid": "26161279-639d-4e7e-8e55-8c641bbd4d9f",
              "parentUUID": "083077b2-338f-494f-8d77-294223c63d15",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c26c7e1-7d89-4667-b33f-ed5d4b2c66f8"
          ],
          "failures": [],
          "pending": [
            "26161279-639d-4e7e-8e55-8c641bbd4d9f"
          ],
          "skipped": [],
          "duration": 27,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c7408c2d-4aca-4843-9ee5-27860392e27b",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "file": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "06b090d2-de39-4718-a0a6-5f75ed63c8b2",
          "title": "Delete a test note and validate cleanup",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deletes a note and confirms deletion",
              "fullTitle": "Delete a test note and validate cleanup Deletes a note and confirms deletion",
              "timedOut": null,
              "duration": 1365,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1: DELETE /notes/{id}\ncy.request({\n  method: 'DELETE',\n  url: `${baseUrl}/${noteId}`,\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Step 2: Confirm status 204\n  expect(response.status).to.eq(200);\n});\n// Step 3: GET /notes and confirm note is gone\ncy.request({\n  method: 'GET',\n  url: baseUrl,\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  //  //Validate the noteId no longer exists in the list\n  // const notes = response.body\n  // const found = notes.find(note => note.id === noteId)\n  // expect(found).to.be.undefined\n});",
              "err": {},
              "uuid": "c2c7380c-1143-4a43-aa84-246b5f1bb57d",
              "parentUUID": "06b090d2-de39-4718-a0a6-5f75ed63c8b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2c7380c-1143-4a43-aa84-246b5f1bb57d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1365,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3fdb2c99-d1ad-4207-aa68-b51101d8d5ba",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "file": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Delete NotesAPI",
          "fullTitle": "Delete NotesAPI",
          "timedOut": null,
          "duration": 0,
          "state": "pending",
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": true,
          "context": null,
          "code": "cy.get('@token').then(token => {\n  cy.get('@noteId').then(noteId => {\n    cy.request({\n      method: 'DELETE',\n      url: `https://practice.expandtesting.com/notes/api/notes/${noteId}`,\n      headers: {\n        'x-auth-token': token\n      },\n      body: noteData\n    }).then(res => {\n      cy.log(res);\n      expect(res.status).to.eq(200);\n      expect(res.body.message).to.eq('Note successfully deleted');\n    });\n  });\n});",
          "err": {},
          "uuid": "0c95f475-66b3-41ac-9418-0a6bc65492b3",
          "parentUUID": "3fdb2c99-d1ad-4207-aa68-b51101d8d5ba",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [],
      "pending": [
        "0c95f475-66b3-41ac-9418-0a6bc65492b3"
      ],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "529a97b5-0e8f-4ed1-ab03-48c63a9489a0",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdownPOM.cy.js",
      "file": "cypress\\e2e\\dropdownPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "667514aa-eb05-453d-8ddb-78cd817e32ac",
          "title": "Dropdown Handling Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should select Option 1 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 1 and validate",
              "timedOut": null,
              "duration": 4202,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 1');\ndropdownPage.getSelectedOption().should('have.text', 'Option 1');",
              "err": {},
              "uuid": "cea2502f-049f-4c33-a3f8-8259ea6f7381",
              "parentUUID": "667514aa-eb05-453d-8ddb-78cd817e32ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should select Option 2 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 2 and validate",
              "timedOut": null,
              "duration": 3405,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 2');\ndropdownPage.getSelectedOption().should('have.text', 'Option 2');",
              "err": {},
              "uuid": "0f65a336-0754-4125-a6c2-939e0c694a9c",
              "parentUUID": "667514aa-eb05-453d-8ddb-78cd817e32ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cea2502f-049f-4c33-a3f8-8259ea6f7381",
            "0f65a336-0754-4125-a6c2-939e0c694a9c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7607,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0f13c8b3-4d89-4162-84e3-48e3d81d0cfe",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdown_2b.cy.js",
      "file": "cypress\\e2e\\dropdown_2b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "78f65c4e-dc36-4620-a0a8-0c98c7b62b99",
          "title": "Select \"India\" from the dropdown",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "select India from the country dropdown",
              "fullTitle": "Select \"India\" from the dropdown select India from the country dropdown",
              "timedOut": null,
              "duration": 3104,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit the dropdown page\ncy.visit('https://practice.expandtesting.com/dropdown');\n// Select \"India\" from the dropdown by visible text\ncy.get('#country').select('India').should('have.value', 'IN');",
              "err": {},
              "uuid": "ad290606-814f-4218-8243-0ed0b0fb6d3f",
              "parentUUID": "78f65c4e-dc36-4620-a0a8-0c98c7b62b99",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad290606-814f-4218-8243-0ed0b0fb6d3f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3104,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "102efed8-2ca9-4597-a19a-230161faef2d",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "file": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9f3621c3-8f20-4136-8564-cca2b3ceba1b",
          "title": "Log browser name and CPU usage on dynamic-table",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs browser and CPU usage",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Logs browser and CPU usage",
              "timedOut": null,
              "duration": 3673,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get('table.table-striped tbody tr').each(($row, index) => {\n  const browserName = $row.find('td').eq(0).text();\n  const cpuUsage = $row.find('td').eq(2).text();\n  cy.get('table.table-striped tbody tr').should('have.length.at.least', 1);\n  cy.log(`Row ${index + 1}: Browser = ${browserName}, CPU Usage = ${cpuUsage}`);\n  expect(browserName).to.not.be.empty;\n  expect(cpuUsage).to.not.be.empty;\n});",
              "err": {},
              "uuid": "1e690418-82b0-4165-8295-2114725e3803",
              "parentUUID": "9f3621c3-8f20-4136-8564-cca2b3ceba1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "timedOut": null,
              "duration": 2710,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\nlet cpuAbove15Found = false;\ncy.get(\"table.table-striped tbody tr\").each(($row, rowIndex, $rows) => {\n  const $cells = $row.find('td');\n  const browserName = $cells.eq(0).text().trim(); // 1. Assert browser name is not empty\n  expect(browserName).to.not.be.empty;\n  $cells.each((i, td) => {\n    const cellText = td.innerText;\n    expect(cellText).to.not.be.empty; // 2. Assert no cell is empty\n  });\n  const cpuCell = [...$cells].find(td => td.innerText.includes('%')); // 3. Check if any CPU usage > 15%\n  if (cpuCell) {\n    const cpuValue = parseFloat(cpuCell.innerText.replace('%', ''));\n    if (cpuValue > 15) {\n      cpuAbove15Found = true;\n    }\n  }\n}).then(() => {\n  expect(cpuAbove15Found, \"CPU Usage above 15 not found\").to.be.false; // Final assertion after looping all rows\n});",
              "err": {},
              "uuid": "48bc9aae-9e5f-4135-9899-575dca5c193b",
              "parentUUID": "9f3621c3-8f20-4136-8564-cca2b3ceba1b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e690418-82b0-4165-8295-2114725e3803",
            "48bc9aae-9e5f-4135-9899-575dca5c193b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6383,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8c63daec-c73a-4d9c-92ec-df2f346ecdac",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "file": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3ca42b3b-cf9d-43c6-87a5-cc307b35ac50",
          "title": "Dynamic Content Validation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should detect dynamic content change after refresh",
              "fullTitle": "Dynamic Content Validation should detect dynamic content change after refresh",
              "timedOut": null,
              "duration": 5694,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dynamic-content');\n// Step 1: Get initial content\nlet firstLoadContent = [];\n_dynamicpage.default.getTextBlocks().then($blocks => {\n  $blocks.each((index, el) => {\n    firstLoadContent.push(el.innerText.trim());\n  });\n  // Step 2: Refresh the page\n  cy.reload();\n  // Step 3: Get new content\n  let secondLoadContent = [];\n  _dynamicpage.default.getTextBlocks().then($newBlocks => {\n    $newBlocks.each((index, el) => {\n      secondLoadContent.push(el.innerText.trim());\n    });\n    // Step 4: Compare the content\n    _dynamicpage.default.compareContent(firstLoadContent, secondLoadContent);\n  });\n});",
              "err": {},
              "uuid": "2b7f26fb-0523-43bd-a92e-3c93b78f844a",
              "parentUUID": "3ca42b3b-cf9d-43c6-87a5-cc307b35ac50",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b7f26fb-0523-43bd-a92e-3c93b78f844a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5694,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0669a8d7-3172-44e5-b237-8ce1a8bc0759",
      "title": "",
      "fullFile": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "file": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "45aa4eb3-97de-4cc6-92dc-8de9b7cd4482",
          "title": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Find the column index for \"Memory\"",
              "fullTitle": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage Find the column index for \"Memory\"",
              "timedOut": null,
              "duration": 2779,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table.table-striped thead tr th\").then($tr => {\n  let memoryColumnIndex = -1;\n  $tr.each((index, th) => {\n    const tr = th.innerText;\n    if (tr == 'Memory') {\n      memoryColumnIndex = index;\n    }\n  });\n  cy.log('Memory column index: ', memoryColumnIndex);\n  cy.get(\"table.table-striped tbody tr\").each($trow => {\n    const $cells = $trow.find('td');\n    const browserName = $cells.eq(0).text().trim();\n    const memory = $cells.eq(memoryColumnIndex).text();\n    cy.log(browserName, ' Memory:', memory);\n  });\n});",
              "err": {},
              "uuid": "bbebab7e-ac41-4c81-957d-6f0b0ab00f74",
              "parentUUID": "45aa4eb3-97de-4cc6-92dc-8de9b7cd4482",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbebab7e-ac41-4c81-957d-6f0b0ab00f74"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2779,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b981547f-df70-4d59-9472-335e3e54993d",
      "title": "",
      "fullFile": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "file": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dc22b74a-892d-45bf-b060-c9fa84697a2b",
          "title": "Fetch All Notes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new note",
              "fullTitle": "Fetch All Notes create a new note",
              "timedOut": null,
              "duration": 1191,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 2: Create a note\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: noteTitle,\n    description: noteDescription,\n    category: 'Personal'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  createdNoteId = response.body.data.id;\n  expect(createdNoteId).to.exist;\n});",
              "err": {},
              "uuid": "3b42d23e-39e3-44f1-8ea1-18457266278d",
              "parentUUID": "dc22b74a-892d-45bf-b060-c9fa84697a2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch all notes and contain the newly created note",
              "fullTitle": "Fetch All Notes should fetch all notes and contain the newly created note",
              "timedOut": null,
              "duration": 537,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 3: Fetch all notes\ncy.request({\n  method: 'GET',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.be.an('array');\n  // Step 4: Assert the created note exists in the array\n  const found = response.body.data.find(note =>\n  //note.id === createdNoteId && note.title === noteTitle\n  note.title === noteTitle && note.description === noteDescription);\n  expect(found, 'Newly created note should be in the list').to.exist;\n});",
              "err": {},
              "uuid": "2983173b-aefa-4b23-a403-4983cd28afb6",
              "parentUUID": "dc22b74a-892d-45bf-b060-c9fa84697a2b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b42d23e-39e3-44f1-8ea1-18457266278d",
            "2983173b-aefa-4b23-a403-4983cd28afb6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1728,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7ce4661f-295c-4af8-8588-9a1627bab860",
      "title": "",
      "fullFile": "cypress\\e2e\\functionDeclaration.cy.js",
      "file": "cypress\\e2e\\functionDeclaration.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b991a107-6374-457b-a6c8-43297d429087",
          "title": "Logging Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs the welcome message",
              "fullTitle": "Logging Example Logs the welcome message",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "logWelcome();",
              "err": {},
              "uuid": "a6929e9a-1609-46e6-afc5-27301a7934a6",
              "parentUUID": "b991a107-6374-457b-a6c8-43297d429087",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6929e9a-1609-46e6-afc5-27301a7934a6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d497c2ec-1c41-4354-957d-ab72426e587b",
      "title": "",
      "fullFile": "cypress\\e2e\\functionExpression.cy.js",
      "file": "cypress\\e2e\\functionExpression.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "68b11a94-9439-4155-afe7-c22ed71e3b08",
          "title": "function expression",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs user email",
              "fullTitle": "function expression Logs user email",
              "timedOut": null,
              "duration": 35,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const printUserEmail = function (email) {\n  cy.log(` User email: ${email}`);\n};\nprintUserEmail('cypresstesting@com');",
              "err": {},
              "uuid": "01da1e24-2524-4e85-b4b9-640a625ebf5b",
              "parentUUID": "68b11a94-9439-4155-afe7-c22ed71e3b08",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "01da1e24-2524-4e85-b4b9-640a625ebf5b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5a0bf040-b5df-445b-aa3b-af115ea54ec3",
      "title": "",
      "fullFile": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "file": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "59c16e70-f734-4302-ba1f-7169f01fad65",
          "title": "OddorEven",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "OddorEven",
              "fullTitle": "OddorEven OddorEven",
              "timedOut": null,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "function evenorodd(number) {\n  if (number % 2 === 0) {\n    cy.log(\"Even\");\n  } else {\n    cy.log(\"Odd\");\n  }\n}\nlet s = evenorodd(6);\ncy.log(s);",
              "err": {},
              "uuid": "89562c1e-c775-4438-9fdc-0f5926154249",
              "parentUUID": "59c16e70-f734-4302-ba1f-7169f01fad65",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "89562c1e-c775-4438-9fdc-0f5926154249"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "18eb501d-8308-4073-be54-214f03559261",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "67c9a337-337f-4bb0-97ff-5225a6871639",
          "title": "Login Functinality with Negative scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "invalid username",
              "fullTitle": "Login Functinality with Negative scenarios invalid username",
              "timedOut": null,
              "duration": 7576,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('testAbcd');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid username\ncy.get('#flash').should('be.visible').and('contain.text', 'Your username is invalid!');",
              "err": {},
              "uuid": "0f4db85f-cd66-4d3e-8642-90f16ae98c72",
              "parentUUID": "67c9a337-337f-4bb0-97ff-5225a6871639",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "invalid password",
              "fullTitle": "Login Functinality with Negative scenarios invalid password",
              "timedOut": null,
              "duration": 5793,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('practice');\ncy.get('#password').type('cdeef!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid password\ncy.get('#flash').should('be.visible').and('contain.text', 'Your password is invalid!');",
              "err": {},
              "uuid": "1e3bb58a-fbdd-4c91-a2f0-3c14a2568f8a",
              "parentUUID": "67c9a337-337f-4bb0-97ff-5225a6871639",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f4db85f-cd66-4d3e-8642-90f16ae98c72",
            "1e3bb58a-fbdd-4c91-a2f0-3c14a2568f8a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13369,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f8b29e9d-84a0-4cdd-84f7-fb666508991d",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89ef3262-2987-429e-b04a-29f2deb2dc70",
          "title": "Login Functionality Positive scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login in to application with valid credentials",
              "fullTitle": "Login Functionality Positive scenarios Login in to application with valid credentials",
              "timedOut": null,
              "duration": 6039,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n//Assert URL\ncy.url().should('include', '/secure');\n//Assert Success Message\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n//Assert Logout Button\ncy.get('a.button.secondary.radius').should('be.visible').and('contain.text', 'Logout');",
              "err": {},
              "uuid": "4c45e1c8-b7f8-4517-b49e-78abc1bb8b6b",
              "parentUUID": "89ef3262-2987-429e-b04a-29f2deb2dc70",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c45e1c8-b7f8-4517-b49e-78abc1bb8b6b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6039,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8e864e27-e35b-423c-bdba-041bbab9b6ea",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandExtractToken.cy.js",
      "file": "cypress\\e2e\\loginandExtractToken.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3e5187b8-b531-48f8-ad25-9c25f50823ab",
          "title": "User Login API and Extract Token",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "log in and extract the token",
              "fullTitle": "User Login API and Extract Token log in and extract the token",
              "timedOut": null,
              "duration": 634,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/login',\n  body: apidata,\n  failOnStatusCode: false\n}).then(res => {\n  cy.log(res);\n  // Step 3: Assert response status\n  expect(res.status).to.eq(200);\n  // Step 2: Extract and validate token\n  //expect(response.body).to.have.property('token');\n  cy.log(res.body.message);\n  expect(res.body.message).to.eq(\"Login successful\");\n  const token = res.body.data.token;\n  expect(res.body.data.token).to.not.be.null;\n  //cy.log(authToken)\n  // Save token to alias for reuse\n  cy.wrap(token).as('authToken');\n});",
              "err": {},
              "uuid": "558ca819-53d5-4dbc-9a87-1370f26a03e0",
              "parentUUID": "3e5187b8-b531-48f8-ad25-9c25f50823ab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "558ca819-53d5-4dbc-9a87-1370f26a03e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 634,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9e9895d1-3758-4bf2-a79f-fdc24655d773",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "file": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7507df9e-7e7a-4ac5-ac89-ba92d697ecbd",
          "title": "loginApp",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login to an application with valid credentials",
              "fullTitle": "loginApp login to an application with valid credentials",
              "timedOut": null,
              "duration": 5745,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\n//cy.get('Username: ').contains('practice')\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();",
              "err": {},
              "uuid": "05be625e-eded-49d7-b701-1f8c739cecff",
              "parentUUID": "7507df9e-7e7a-4ac5-ac89-ba92d697ecbd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "logout to an application",
              "fullTitle": "loginApp logout to an application",
              "timedOut": null,
              "duration": 10188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\ncy.get('i[class=\"icon-2x icon-signout\"]').click();",
              "err": {},
              "uuid": "4d43ffc8-c158-4e01-b4b1-399b534d7530",
              "parentUUID": "7507df9e-7e7a-4ac5-ac89-ba92d697ecbd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "05be625e-eded-49d7-b701-1f8c739cecff",
            "4d43ffc8-c158-4e01-b4b1-399b534d7530"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15933,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8bb07029-4c72-4022-82fe-c86d1d19d2c6",
      "title": "",
      "fullFile": "cypress\\e2e\\loginpagePOM.cy.js",
      "file": "cypress\\e2e\\loginpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a7e2c386-6d3e-4ad7-b973-3e7e518d01ed",
          "title": "Login Page Testcase with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user should login and redirect to secure area",
              "fullTitle": "Login Page Testcase with POM user should login and redirect to secure area",
              "timedOut": null,
              "duration": 226,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\loginpagePOM.cy.js\\\\Login Page Testcase with POM -- user should login and redirect to secure area -- before each hook (failed).png\"\n    ]\n  ]\n}",
              "code": "_loginpage.default.enterUsername('practice');\n_loginpage.default.enterPassword('SuperSecretPassword!');\n_loginpage.default.clickLogin();\ncy.url().should('include', '/secure');\n//cy.url().should('include', '/login');\ncy.contains('You logged into a secure area!').should('be.visible');",
              "err": {
                "message": "TypeError: _loginpage.default.visit is not a function\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Login Page Testcase with POM`",
                "estack": "TypeError: _loginpage.default.visit is not a function\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Login Page Testcase with POM`\n    at Context.eval (webpack://cypress/./cypress/e2e/loginpagePOM.cy.js:8:14)\n    at runnable.fn (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:141791:19)\n    at callFn (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:160869:21)\n    at Runnable.run (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:160856:7)\n    at <unknown> (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:166946:30)\n    at PassThroughHandlerContext.finallyHandler (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:4042:23)\n    at PassThroughHandlerContext.tryCatcher (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1546:18)",
                "diff": null
              },
              "uuid": "fb7e24bb-4313-4afb-ae1c-0549bad5f76c",
              "parentUUID": "a7e2c386-6d3e-4ad7-b973-3e7e518d01ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid user login should show error message",
              "fullTitle": "Login Page Testcase with POM Invalid user login should show error message",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_loginpage.default.enterUsername('abdcdef');\n_loginpage.default.enterPassword('dfdfdfd');\n_loginpage.default.clickLogin();\ncy.contains('Your username is invalid!').should('be.visible');\ncy.url().should('include', '/login');",
              "err": {},
              "uuid": "86f539f7-6bd7-4732-bd8b-356ef45b5ec3",
              "parentUUID": "a7e2c386-6d3e-4ad7-b973-3e7e518d01ed",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fb7e24bb-4313-4afb-ae1c-0549bad5f76c"
          ],
          "pending": [],
          "skipped": [
            "86f539f7-6bd7-4732-bd8b-356ef45b5ec3"
          ],
          "duration": 226,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "67ae8dd0-0abd-4b23-8fde-830f443653f5",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "file": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c85ac689-228f-464c-bc03-c45182c9a1f2",
          "title": "Login Application",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Log in with valid credentials",
              "fullTitle": "Login Application Log in with valid credentials",
              "timedOut": null,
              "duration": 6918,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login('practice', 'SuperSecretPassword!');\ncy.url().should('include', '/secure');",
              "err": {},
              "uuid": "446c5ae4-400d-42e4-85cf-5bdd79367bee",
              "parentUUID": "c85ac689-228f-464c-bc03-c45182c9a1f2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "446c5ae4-400d-42e4-85cf-5bdd79367bee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6918,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4da75459-25c6-46f3-a31a-a718c08cc40a",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "file": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4d4edc69-5652-42c4-a64c-747ff342e346",
          "title": "Login with fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs in using data from user.json",
              "fullTitle": "Login with fixture data Logs in using data from user.json",
              "timedOut": null,
              "duration": 6850,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\n// Use fixture data to fill in login form\ncy.get('#username').type(this.userData.username);\ncy.get('#password').type(this.userData.password);\ncy.get('button[type=\"submit\"]').click();\n// Assertion \ncy.url().should('include', '/secure');\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "d426aef9-a2aa-4c40-ae1a-83f7fb33df45",
              "parentUUID": "4d4edc69-5652-42c4-a64c-747ff342e346",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d426aef9-a2aa-4c40-ae1a-83f7fb33df45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6850,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a279c55a-9e8b-4524-9961-3b73db4610c2",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "file": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "38d7d37e-4da8-4ee4-a10e-0c3c75bca9f5",
          "title": "Login using fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login with form data from JSON file",
              "fullTitle": "Login using fixture data Login with form data from JSON file",
              "timedOut": null,
              "duration": 6471,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Load fixture\ncy.fixture('formData').then(data => {\n  cy.visit('https://practice.expandtesting.com/login');\n  // Fill in the form\n  cy.get('#username').type(data.username);\n  cy.get('#password').type(data.password);\n  cy.get('button[type=\"submit\"]').click();\n  // Validate login success\n  cy.url().should('include', '/secure');\n  cy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n});",
              "err": {},
              "uuid": "73feddd2-c10b-4287-b157-6ab61e49b99d",
              "parentUUID": "38d7d37e-4da8-4ee4-a10e-0c3c75bca9f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73feddd2-c10b-4287-b157-6ab61e49b99d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6471,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a97a8c63-04f9-4f15-bab4-1ca629dedfff",
      "title": "",
      "fullFile": "cypress\\e2e\\radiobutton_2c.cy.js",
      "file": "cypress\\e2e\\radiobutton_2c.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "71517eaa-dbe7-4beb-abbf-f2e0afe06a07",
          "title": "Select Blue radio button",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select the Blue radio button",
              "fullTitle": "Select Blue radio button Select the Blue radio button",
              "timedOut": null,
              "duration": 2916,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/radio-buttons');\n//blue radio button\ncy.get('input#blue').check().should('be.checked');",
              "err": {},
              "uuid": "91663168-e7c6-45ca-881c-6cc7818be04d",
              "parentUUID": "71517eaa-dbe7-4beb-abbf-f2e0afe06a07",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "91663168-e7c6-45ca-881c-6cc7818be04d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2916,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7f679c1f-3998-4c30-8a8e-e8b96e15845c",
      "title": "",
      "fullFile": "cypress\\e2e\\registernewuserAPI.cy.js",
      "file": "cypress\\e2e\\registernewuserAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d111e81f-e427-44db-8230-d5831cacc58b",
          "title": "Register New User using API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new user",
              "fullTitle": "Register New User using API create a new user",
              "timedOut": null,
              "duration": 696,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//const timestamp = Date.now()\nconst apidata = {\n  name: \"QAtester27\",\n  email: \"sssf27@abcd.com\",\n  password: \"QAPassword27\"\n};\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/register',\n  body: apidata,\n  failOnStatusCode: false // allows manual status check\n}).then(res => {\n  cy.log(res);\n  // Step 2: Assert response status\n  expect(res.status).to.eq(201);\n  // Step 3: Validate success message\n  expect(res.body.message).to.eq('User account created successfully');\n});",
              "err": {},
              "uuid": "fb443667-6a47-4550-8676-a6816672bcfd",
              "parentUUID": "d111e81f-e427-44db-8230-d5831cacc58b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb443667-6a47-4550-8676-a6816672bcfd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 696,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "75891d81-854d-410f-83bb-14a453338ff1",
      "title": "",
      "fullFile": "cypress\\e2e\\registrationForm.cy.js",
      "file": "cypress\\e2e\\registrationForm.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
          "title": "Registration Form Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": " Registration Page",
              "fullTitle": "Registration Form Tests  Registration Page",
              "timedOut": null,
              "duration": 8799,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('QATest24');\ncy.get('#password').type('QATest23');\n//cy.get('input#confirmPassword', { timeout: 10000 }).should('be.visible').type('test1234');\ncy.get('#confirmPassword', {\n  timeout: 10000\n}).should('be.visible').type('QATest23');\ncy.get('button[type=submit]').click();\n// Redirect to login and show success message\ncy.url().should('include', '/login');\ncy.get('#flash').should('be.visible').and('contain.text', 'Successfully registered, you can log in now.');",
              "err": {},
              "uuid": "c00209e9-ded4-450c-ac66-f852d6691eae",
              "parentUUID": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "username validation",
              "fullTitle": "Registration Form Tests username validation",
              "timedOut": null,
              "duration": 5721,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#password').type('ValidPass');\ncy.get('#confirmPassword').type('ValidPass');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "2720d24b-1501-426b-b316-8305b24794b8",
              "parentUUID": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Password validation",
              "fullTitle": "Registration Form Tests Missing Password validation",
              "timedOut": null,
              "duration": 9553,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#confirmPassword').type('test123');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "ac2d189e-dd6a-4bec-8867-493761c90dc5",
              "parentUUID": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Non-matching passwords",
              "fullTitle": "Registration Form Tests Non-matching passwords",
              "timedOut": null,
              "duration": 6865,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#password').type('test123');\ncy.get('#confirmPassword').type('Mismatch123!');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'Passwords do not match.');",
              "err": {},
              "uuid": "371be7ac-3083-45fd-88f8-b3a6900446d2",
              "parentUUID": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c00209e9-ded4-450c-ac66-f852d6691eae",
            "2720d24b-1501-426b-b316-8305b24794b8",
            "ac2d189e-dd6a-4bec-8867-493761c90dc5",
            "371be7ac-3083-45fd-88f8-b3a6900446d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 30938,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2d9b6f4e-a2ba-4e14-87b8-64755a92a1b1",
      "title": "",
      "fullFile": "cypress\\e2e\\screateNoteAPI.cy.js",
      "file": "cypress\\e2e\\screateNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "686af31f-de3f-41a8-a42c-9ed8c7a8842f",
          "title": "Create a Note",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a note and return an ID",
              "fullTitle": "Create a Note create a note and return an ID",
              "timedOut": null,
              "duration": 1207,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: 'Test Note',\n    description: 'This is a test note created through API testing.',\n    category: 'Work'\n  }\n}).then(response => {\n  console.log('Response Body:', response.body);\n  cy.log(JSON.stringify(response.body));\n  // Basic response check\n  expect(response.status).to.eq(200);\n  // Adjust according to the actual structure\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.have.property('id');\n  expect(response.body.data.title).to.eq('Test Note');\n});",
              "err": {},
              "uuid": "54d3003f-d9ef-4f1d-9b2d-905e04194322",
              "parentUUID": "686af31f-de3f-41a8-a42c-9ed8c7a8842f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54d3003f-d9ef-4f1d-9b2d-905e04194322"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1207,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1f79a8f0-349e-4d8a-8525-0a788e82e9d0",
      "title": "",
      "fullFile": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "file": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "scroll in an element",
          "fullTitle": "scroll in an element",
          "timedOut": null,
          "duration": 3951,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/scrollbars\");\n//scroll in to an element\n//cy.get(\"[id='search-input']\").type(\"scrollbars\")  \ncy.get('[style=\"height:150px;overflow-y: scroll;width:300px;overflow-x:scroll\"]').click();\ncy.get('#hidingButton').scrollIntoView().click();",
          "err": {},
          "uuid": "1397d485-0e59-42ab-8d3f-599f4b773e35",
          "parentUUID": "1f79a8f0-349e-4d8a-8525-0a788e82e9d0",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Drag and drop",
          "fullTitle": "Drag and drop",
          "timedOut": null,
          "duration": 2477,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/drag-and-drop\");\n// Drag Box A and drop it on Box B\ncy.get('#column-a').drag('#column-b');\n// Optional: assert that they’ve swapped\ncy.get('#column-a header').should('have.text', 'B');\ncy.get('#column-b header').should('have.text', 'A');",
          "err": {},
          "uuid": "8970d60e-1b5c-4345-8b61-db9a59c58b35",
          "parentUUID": "1f79a8f0-349e-4d8a-8525-0a788e82e9d0",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "1397d485-0e59-42ab-8d3f-599f4b773e35",
        "8970d60e-1b5c-4345-8b61-db9a59c58b35"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 6428,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "81d30ccb-58e5-4a0c-b965-f1f84c8e37fb",
      "title": "",
      "fullFile": "cypress\\e2e\\securePageTestPom.cy.js",
      "file": "cypress\\e2e\\securePageTestPom.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dd4fefc4-59d2-4986-aba8-a2665091b3ea",
          "title": "Login Page Testcase with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user should login and redirect to secure area",
              "fullTitle": "Login Page Testcase with POM user should login and redirect to secure area",
              "timedOut": null,
              "duration": 64606,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('practice');\nloginPage.enterPassword('SuperSecretPassword!');\nloginPage.clickLogin();\nsecurePage.isAtSecurePage();\nsecurePage.getSuccessAlert().should('contain.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "8ed15771-0f6c-460a-aabd-1f60ff80b77c",
              "parentUUID": "dd4fefc4-59d2-4986-aba8-a2665091b3ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User should be able to logout successfully",
              "fullTitle": "Login Page Testcase with POM User should be able to logout successfully",
              "timedOut": null,
              "duration": 49407,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('practice');\nloginPage.enterPassword('SuperSecretPassword!');\nloginPage.clickLogin();\nsecurePage.logout();\ncy.url().should('include', '/login');\ncy.get('#flash, .flash.info').should('contain.text', 'You logged out of the secure area!'); // Adjust based on actual message",
              "err": {},
              "uuid": "3a450878-aad6-4059-af62-0291a08a0ba4",
              "parentUUID": "dd4fefc4-59d2-4986-aba8-a2665091b3ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ed15771-0f6c-460a-aabd-1f60ff80b77c",
            "3a450878-aad6-4059-af62-0291a08a0ba4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 114013,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fce6606a-6c25-40fd-ba4f-d53e585a4f0f",
      "title": "",
      "fullFile": "cypress\\e2e\\usePrevSubject.cy.js",
      "file": "cypress\\e2e\\usePrevSubject.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "67242d47-2184-482e-95af-dee35b098c62",
          "title": "usePrevSubject",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login using Fillinput",
              "fullTitle": "usePrevSubject Login using Fillinput",
              "timedOut": null,
              "duration": 8406,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Use previous subject\ncy.get('#username').fillinput('practice');\ncy.get('#password').fillinput('SuperSecretPassword!');\ncy.get('#login > .btn').click();\ncy.get('b').should('have.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "3e957e26-1fb8-4531-ab4f-d33f52bfa286",
              "parentUUID": "67242d47-2184-482e-95af-dee35b098c62",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e957e26-1fb8-4531-ab4f-d33f52bfa286"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8406,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8fa49d05-94f7-4c96-8ee8-fa408fd6497a",
      "title": "",
      "fullFile": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "file": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b2f0dbd5-dda5-4e31-9e49-fbfcbfd52888",
          "title": "Validate Chrome CPU usage matches the label",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "fullTitle": "Validate Chrome CPU usage matches the label Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "timedOut": null,
              "duration": 2713,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\n// Wait until Chrome row appears\ncy.get(\"table.table-striped tbody tr\").each($tr => {\n  const $td = $tr.find('td');\n  const browserName = $td.eq(0).text().trim();\n  if (browserName == 'Chrome') {\n    var _find;\n    const cpuUsageFromTable = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText.trim();\n    cy.get('#chrome-cpu').invoke('text').then(fullText => {\n      const match = fullText.match(/(\\d+(\\.\\d+)?%)/);\n      const cpuUsageFromCard = match ? match[0] : null;\n      expect(cpuUsageFromCard).to.eq(cpuUsageFromTable);\n    });\n  }\n});",
              "err": {},
              "uuid": "72b8b791-05fe-4483-8f7f-942d529e7ee6",
              "parentUUID": "b2f0dbd5-dda5-4e31-9e49-fbfcbfd52888",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "72b8b791-05fe-4483-8f7f-942d529e7ee6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2713,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1e3a8ae8-6b8a-4043-b32c-6f3bdd3d827c",
      "title": "",
      "fullFile": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "file": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b1687753-2f7f-41b3-b3d1-8d86b540b981",
          "title": "Log Each Browsername and its cpu usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "use .each() to log each browser name and its CPU usage.",
              "fullTitle": "Log Each Browsername and its cpu usage use .each() to log each browser name and its CPU usage.",
              "timedOut": null,
              "duration": 3458,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsage = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText;\n  cy.log('Browser Name is ', browsername, 'cpu usage', cpuUsage);\n});",
              "err": {},
              "uuid": "a046bb90-be0c-49c6-a262-08dd3b2d6c88",
              "parentUUID": "b1687753-2f7f-41b3-b3d1-8d86b540b981",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Count how many browsers have CPU usage over 20%.",
              "fullTitle": "Log Each Browsername and its cpu usage Count how many browsers have CPU usage over 20%.",
              "timedOut": null,
              "duration": 5027,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let count = 0;\ncy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find2;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsageText = (_find2 = [...$td].find(td => td.innerText.includes('%'))) === null || _find2 === void 0 ? void 0 : _find2.innerText;\n  if (cpuUsageText) {\n    const cpuValue = parseFloat(cpuUsageText.replace('%', ''));\n    if (cpuValue > 20) {\n      count++;\n    }\n  }\n}).then(() => {\n  cy.log('Total browser count with>20 % is', count);\n});",
              "err": {},
              "uuid": "3253ef1d-f931-43c5-bf7e-d3e24b5e8658",
              "parentUUID": "b1687753-2f7f-41b3-b3d1-8d86b540b981",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a046bb90-be0c-49c6-a262-08dd3b2d6c88",
            "3253ef1d-f931-43c5-bf7e-d3e24b5e8658"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8485,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a2200a3d-2250-4fd3-b980-f21fff7100f4",
      "title": "",
      "fullFile": "cypress\\e2e\\LoopNumbers.cy.js",
      "file": "cypress\\e2e\\LoopNumbers.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "80e1aaf4-6cf2-4282-93b5-1fbf91d44eb7",
          "title": "loop Numbers",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "loop",
              "fullTitle": "loop Numbers loop",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "for (let i = 1; i <= 10; i++) {\n  if (i % 2 === 0) {\n    cy.log(i);\n  }\n}",
              "err": {},
              "uuid": "e800bab7-b1b2-47fd-ae08-118b140aa456",
              "parentUUID": "80e1aaf4-6cf2-4282-93b5-1fbf91d44eb7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "e800bab7-b1b2-47fd-ae08-118b140aa456"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4272331d-821a-4a05-8ec6-96686162b3db",
      "title": "",
      "fullFile": "cypress\\e2e\\arrowFunction.cy.js",
      "file": "cypress\\e2e\\arrowFunction.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c777279b-5848-43fa-9def-c24a990816cd",
          "title": "Multiply three Numbers Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Multiplies three numbers",
              "fullTitle": "Multiply three Numbers Example Multiplies three numbers",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const multiplyThreeNumbers = (a, b, c) => a * b * c;\nconst result = multiplyThreeNumbers(4, 6, 8);\ncy.log(`The multiplication of three numbers: ${result}`);",
              "err": {},
              "uuid": "b7008d99-8c48-4018-9e2f-1b931f4f8798",
              "parentUUID": "c777279b-5848-43fa-9def-c24a990816cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7008d99-8c48-4018-9e2f-1b931f4f8798"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dfd3cd4b-8c1c-4f2b-80e7-537486535c4f",
      "title": "",
      "fullFile": "cypress\\e2e\\assertionsExamples.cy.js",
      "file": "cypress\\e2e\\assertionsExamples.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5a853d6f-b414-4329-b260-25db42459830",
          "title": "Assertions Page - Cypress Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should assert element existence, visibility, and text content",
              "fullTitle": "Assertions Page - Cypress Tests should assert element existence, visibility, and text content",
              "timedOut": null,
              "duration": 10428,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/#assertions');\n//Assert: Element exists\ncy.get('.btn-warning').should('exist');\n//cy.get('#exist-element') .should('exist');\n// Assert: Element has specific text\ncy.get('.btn-primary').should('have.text', 'Test Cases');\n// Assert: Element is visible\ncy.get('.btn-success').should('be.visible');",
              "err": {},
              "uuid": "11876149-1b17-43c4-bcd8-cfa8c5a53388",
              "parentUUID": "5a853d6f-b414-4329-b260-25db42459830",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11876149-1b17-43c4-bcd8-cfa8c5a53388"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10428,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a07e1be8-e71c-4bf8-bd27-f1d8b0e5817c",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "file": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "196fc358-abca-48de-b5da-98510c44e40d",
          "title": "Checkboxes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check and uncheck each checkbox",
              "fullTitle": "Checkboxes check and uncheck each checkbox",
              "timedOut": null,
              "duration": 4405,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/checkboxes');\n// Step 2: Locate all checkboxes (assume input[type=\"checkbox\"] is used)\ncy.get('input[type=\"checkbox\"]').each($checkbox => {\n  // Step 3: Check the checkbox\n  cy.wrap($checkbox).check().should('be.checked');\n  // Step 4: Uncheck the checkbox\n  cy.wrap($checkbox).uncheck().should('not.be.checked');\n});",
              "err": {},
              "uuid": "0b8add92-0c81-41bd-82fc-fb72dc1510c5",
              "parentUUID": "196fc358-abca-48de-b5da-98510c44e40d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b8add92-0c81-41bd-82fc-fb72dc1510c5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4405,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ddcb8239-17a0-46e9-ba4a-8b912fc9f6e2",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxPOM.cy.js",
      "file": "cypress\\e2e\\checkboxPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "55594c3f-3d92-4234-abcc-0126d212bc6d",
          "title": "Checkboxes Test with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should check the first checkbox and uncheck the second",
              "fullTitle": "Checkboxes Test with POM Should check the first checkbox and uncheck the second",
              "timedOut": null,
              "duration": 3550,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "checkboxPage.checkFirstBox();\ncheckboxPage.uncheckSecondBox();\ncheckboxPage.validateCheckboxState([true, false]); // Validate both checkboxes",
              "err": {},
              "uuid": "d3b7f4d1-d562-40cc-81ae-a1d1ce14575a",
              "parentUUID": "55594c3f-3d92-4234-abcc-0126d212bc6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3b7f4d1-d562-40cc-81ae-a1d1ce14575a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3550,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "da75eb00-ef73-46bd-b0ce-840755c479fd",
      "title": "",
      "fullFile": "cypress\\e2e\\contextmenuPOM.cy.js",
      "file": "cypress\\e2e\\contextmenuPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "63534943-aca2-45f3-b1a9-4874dc7354de",
          "title": "Context Menu Interaction Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should right click the box and validate the alert message",
              "fullTitle": "Context Menu Interaction Test Should right click the box and validate the alert message",
              "timedOut": null,
              "duration": 3507,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contextMenuPage.rightClickBox();\n//cy.get('a[target=\"_blank\"]').invoke('removeAttr', 'target').click();\ncontextMenuPage.handleAlert('You selected a context menu');",
              "err": {},
              "uuid": "1c8523f0-6ac8-4f6c-b91f-9587d108254d",
              "parentUUID": "63534943-aca2-45f3-b1a9-4874dc7354de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c8523f0-6ac8-4f6c-b91f-9587d108254d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3507,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8c8d7505-dc18-4faf-92ea-8d6799aa93f1",
      "title": "",
      "fullFile": "cypress\\e2e\\dataTypes.cy.js",
      "file": "cypress\\e2e\\dataTypes.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "14736a4a-be85-41a7-92f4-dc637d769d09",
          "title": "datatypes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "arraydatatype",
              "fullTitle": "datatypes arraydatatype",
              "timedOut": null,
              "duration": 52,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let numbers = [1, 2, 3, 4, 5];\nlet sum = 0;\nfor (let i = 0; i < numbers.length; i++) {\n  sum += numbers[i];\n  cy.log(\"Sum of the numbers is:\", sum);\n}",
              "err": {},
              "uuid": "a88af84a-ded9-433d-b8cb-1a188d03ddf2",
              "parentUUID": "14736a4a-be85-41a7-92f4-dc637d769d09",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a88af84a-ded9-433d-b8cb-1a188d03ddf2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 52,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "51992b79-3f31-4e8e-912d-62a890a55afe",
      "title": "",
      "fullFile": "cypress\\e2e\\declareVariables.cy.js",
      "file": "cypress\\e2e\\declareVariables.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c3a5b75f-244f-475a-90d8-f39908bb3b2e",
          "title": "variabledeclaration",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "variablelet",
              "fullTitle": "variabledeclaration variablelet",
              "timedOut": null,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let b = 2;\nb = 3;\ncy.log(b);",
              "err": {},
              "uuid": "48a7e507-35e0-4873-988d-a81fef635ec6",
              "parentUUID": "c3a5b75f-244f-475a-90d8-f39908bb3b2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "variableconst",
              "fullTitle": "variabledeclaration variableconst",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const c = 3;\nc = 4; //throws Error",
              "err": {},
              "uuid": "eb0bf334-0ca0-4d66-85f9-2df5ce094c31",
              "parentUUID": "c3a5b75f-244f-475a-90d8-f39908bb3b2e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "48a7e507-35e0-4873-988d-a81fef635ec6"
          ],
          "failures": [],
          "pending": [
            "eb0bf334-0ca0-4d66-85f9-2df5ce094c31"
          ],
          "skipped": [],
          "duration": 25,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dacc694f-193d-4bec-bbb4-a70f1dd8bab3",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "file": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "19631dbc-667b-4a94-aad6-5fd615615378",
          "title": "Delete a test note and validate cleanup",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deletes a note and confirms deletion",
              "fullTitle": "Delete a test note and validate cleanup Deletes a note and confirms deletion",
              "timedOut": null,
              "duration": 1651,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1: DELETE /notes/{id}\ncy.request({\n  method: 'DELETE',\n  url: `${baseUrl}/${noteId}`,\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Step 2: Confirm status 204\n  expect(response.status).to.eq(200);\n});\n// Step 3: GET /notes and confirm note is gone\ncy.request({\n  method: 'GET',\n  url: baseUrl,\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  //  //Validate the noteId no longer exists in the list\n  // const notes = response.body\n  // const found = notes.find(note => note.id === noteId)\n  // expect(found).to.be.undefined\n});",
              "err": {},
              "uuid": "fa39ab68-6e71-41d4-b9a1-8618412ac34c",
              "parentUUID": "19631dbc-667b-4a94-aad6-5fd615615378",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fa39ab68-6e71-41d4-b9a1-8618412ac34c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1651,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "15144287-7e8e-4d43-a400-eba5219c921c",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "file": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Delete NotesAPI",
          "fullTitle": "Delete NotesAPI",
          "timedOut": null,
          "duration": 0,
          "state": "pending",
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": true,
          "context": null,
          "code": "cy.get('@token').then(token => {\n  cy.get('@noteId').then(noteId => {\n    cy.request({\n      method: 'DELETE',\n      url: `https://practice.expandtesting.com/notes/api/notes/${noteId}`,\n      headers: {\n        'x-auth-token': token\n      },\n      body: noteData\n    }).then(res => {\n      cy.log(res);\n      expect(res.status).to.eq(200);\n      expect(res.body.message).to.eq('Note successfully deleted');\n    });\n  });\n});",
          "err": {},
          "uuid": "0918c692-9e18-48ec-a434-80a7a364c246",
          "parentUUID": "15144287-7e8e-4d43-a400-eba5219c921c",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [],
      "pending": [
        "0918c692-9e18-48ec-a434-80a7a364c246"
      ],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "30e441c6-8519-45bd-aa68-fd102dea3f82",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdownPOM.cy.js",
      "file": "cypress\\e2e\\dropdownPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89bbbf3c-fb52-4e0e-81af-5e313473ec31",
          "title": "Dropdown Handling Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should select Option 1 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 1 and validate",
              "timedOut": null,
              "duration": 4389,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 1');\ndropdownPage.getSelectedOption().should('have.text', 'Option 1');",
              "err": {},
              "uuid": "02989b7d-d9c5-4242-b7dc-cb8014ff03f5",
              "parentUUID": "89bbbf3c-fb52-4e0e-81af-5e313473ec31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should select Option 2 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 2 and validate",
              "timedOut": null,
              "duration": 2264,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 2');\ndropdownPage.getSelectedOption().should('have.text', 'Option 2');",
              "err": {},
              "uuid": "412368df-31ca-47a5-9e53-c3e7f1f5b28b",
              "parentUUID": "89bbbf3c-fb52-4e0e-81af-5e313473ec31",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "02989b7d-d9c5-4242-b7dc-cb8014ff03f5",
            "412368df-31ca-47a5-9e53-c3e7f1f5b28b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6653,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "797b3474-5d59-40b3-9d98-0ecc0c0ae8c5",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdown_2b.cy.js",
      "file": "cypress\\e2e\\dropdown_2b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5c8d8ca4-dfa7-493a-90cd-5a6ffb71dcb1",
          "title": "Select \"India\" from the dropdown",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "select India from the country dropdown",
              "fullTitle": "Select \"India\" from the dropdown select India from the country dropdown",
              "timedOut": null,
              "duration": 3046,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit the dropdown page\ncy.visit('https://practice.expandtesting.com/dropdown');\n// Select \"India\" from the dropdown by visible text\ncy.get('#country').select('India').should('have.value', 'IN');",
              "err": {},
              "uuid": "dff3d849-78dc-42e2-9603-c04b5f0efca1",
              "parentUUID": "5c8d8ca4-dfa7-493a-90cd-5a6ffb71dcb1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dff3d849-78dc-42e2-9603-c04b5f0efca1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3046,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f842fc73-7da8-4d99-b64b-0d8db3a4fc56",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "file": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d7899dbf-555a-4fe3-abe8-944bfbcdda21",
          "title": "Log browser name and CPU usage on dynamic-table",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs browser and CPU usage",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Logs browser and CPU usage",
              "timedOut": null,
              "duration": 2308,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get('table.table-striped tbody tr').each(($row, index) => {\n  const browserName = $row.find('td').eq(0).text();\n  const cpuUsage = $row.find('td').eq(2).text();\n  cy.get('table.table-striped tbody tr').should('have.length.at.least', 1);\n  cy.log(`Row ${index + 1}: Browser = ${browserName}, CPU Usage = ${cpuUsage}`);\n  expect(browserName).to.not.be.empty;\n  expect(cpuUsage).to.not.be.empty;\n});",
              "err": {},
              "uuid": "16811254-d1b1-4af3-90cf-6a1a4f4dd022",
              "parentUUID": "d7899dbf-555a-4fe3-abe8-944bfbcdda21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "timedOut": null,
              "duration": 1531,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\nlet cpuAbove15Found = false;\ncy.get(\"table.table-striped tbody tr\").each(($row, rowIndex, $rows) => {\n  const $cells = $row.find('td');\n  const browserName = $cells.eq(0).text().trim(); // 1. Assert browser name is not empty\n  expect(browserName).to.not.be.empty;\n  $cells.each((i, td) => {\n    const cellText = td.innerText;\n    expect(cellText).to.not.be.empty; // 2. Assert no cell is empty\n  });\n  const cpuCell = [...$cells].find(td => td.innerText.includes('%')); // 3. Check if any CPU usage > 15%\n  if (cpuCell) {\n    const cpuValue = parseFloat(cpuCell.innerText.replace('%', ''));\n    if (cpuValue > 15) {\n      cpuAbove15Found = true;\n    }\n  }\n}).then(() => {\n  expect(cpuAbove15Found, \"CPU Usage above 15 not found\").to.be.false; // Final assertion after looping all rows\n});",
              "err": {},
              "uuid": "ee4bfc2f-45b8-4ccd-8a61-ece6753ca828",
              "parentUUID": "d7899dbf-555a-4fe3-abe8-944bfbcdda21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16811254-d1b1-4af3-90cf-6a1a4f4dd022",
            "ee4bfc2f-45b8-4ccd-8a61-ece6753ca828"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3839,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e141f9a6-229a-48a2-9da8-9bf3fba5729a",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "file": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "12e6e512-cc38-4861-b774-936eb12196d9",
          "title": "Dynamic Content Validation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should detect dynamic content change after refresh",
              "fullTitle": "Dynamic Content Validation should detect dynamic content change after refresh",
              "timedOut": null,
              "duration": 4463,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dynamic-content');\n// Step 1: Get initial content\nlet firstLoadContent = [];\n_dynamicpage.default.getTextBlocks().then($blocks => {\n  $blocks.each((index, el) => {\n    firstLoadContent.push(el.innerText.trim());\n  });\n  // Step 2: Refresh the page\n  cy.reload();\n  // Step 3: Get new content\n  let secondLoadContent = [];\n  _dynamicpage.default.getTextBlocks().then($newBlocks => {\n    $newBlocks.each((index, el) => {\n      secondLoadContent.push(el.innerText.trim());\n    });\n    // Step 4: Compare the content\n    _dynamicpage.default.compareContent(firstLoadContent, secondLoadContent);\n  });\n});",
              "err": {},
              "uuid": "16b4f7ba-0499-4fc9-9dcc-f6a66b8e2edc",
              "parentUUID": "12e6e512-cc38-4861-b774-936eb12196d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16b4f7ba-0499-4fc9-9dcc-f6a66b8e2edc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4463,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "858f29a5-25c7-40bb-a03c-9f519b46d2c2",
      "title": "",
      "fullFile": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "file": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "646d07b4-00dc-4800-b943-341a1248047d",
          "title": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Find the column index for \"Memory\"",
              "fullTitle": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage Find the column index for \"Memory\"",
              "timedOut": null,
              "duration": 2720,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table.table-striped thead tr th\").then($tr => {\n  let memoryColumnIndex = -1;\n  $tr.each((index, th) => {\n    const tr = th.innerText;\n    if (tr == 'Memory') {\n      memoryColumnIndex = index;\n    }\n  });\n  cy.log('Memory column index: ', memoryColumnIndex);\n  cy.get(\"table.table-striped tbody tr\").each($trow => {\n    const $cells = $trow.find('td');\n    const browserName = $cells.eq(0).text().trim();\n    const memory = $cells.eq(memoryColumnIndex).text();\n    cy.log(browserName, ' Memory:', memory);\n  });\n});",
              "err": {},
              "uuid": "4e9ac7fc-5d72-408b-90e7-6ed093bd0bfb",
              "parentUUID": "646d07b4-00dc-4800-b943-341a1248047d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e9ac7fc-5d72-408b-90e7-6ed093bd0bfb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2720,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e343ffdf-138b-4b1e-b227-0faefc149b55",
      "title": "",
      "fullFile": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "file": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "29a46579-ebad-4fb0-ac64-a6a09f7ce589",
          "title": "Fetch All Notes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new note",
              "fullTitle": "Fetch All Notes create a new note",
              "timedOut": null,
              "duration": 1218,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 2: Create a note\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: noteTitle,\n    description: noteDescription,\n    category: 'Personal'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  createdNoteId = response.body.data.id;\n  expect(createdNoteId).to.exist;\n});",
              "err": {},
              "uuid": "9ce355b1-daa3-471b-b8ce-2d70aa1652ce",
              "parentUUID": "29a46579-ebad-4fb0-ac64-a6a09f7ce589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch all notes and contain the newly created note",
              "fullTitle": "Fetch All Notes should fetch all notes and contain the newly created note",
              "timedOut": null,
              "duration": 1066,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 3: Fetch all notes\ncy.request({\n  method: 'GET',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.be.an('array');\n  // Step 4: Assert the created note exists in the array\n  const found = response.body.data.find(note =>\n  //note.id === createdNoteId && note.title === noteTitle\n  note.title === noteTitle && note.description === noteDescription);\n  expect(found, 'Newly created note should be in the list').to.exist;\n});",
              "err": {},
              "uuid": "12706b9b-bf89-4c35-a6e9-1d67e7cf7d68",
              "parentUUID": "29a46579-ebad-4fb0-ac64-a6a09f7ce589",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9ce355b1-daa3-471b-b8ce-2d70aa1652ce",
            "12706b9b-bf89-4c35-a6e9-1d67e7cf7d68"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2284,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8b1ba3b1-64bf-4ec0-a735-380653ad01f5",
      "title": "",
      "fullFile": "cypress\\e2e\\functionDeclaration.cy.js",
      "file": "cypress\\e2e\\functionDeclaration.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "16a9f515-c71f-4d9c-ac80-eeaac9849c32",
          "title": "Logging Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs the welcome message",
              "fullTitle": "Logging Example Logs the welcome message",
              "timedOut": null,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "logWelcome();",
              "err": {},
              "uuid": "fb1f0c89-0515-4383-bdca-5df03c5cb424",
              "parentUUID": "16a9f515-c71f-4d9c-ac80-eeaac9849c32",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb1f0c89-0515-4383-bdca-5df03c5cb424"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ddadc5c5-d10e-4494-aa75-b566ef5499d9",
      "title": "",
      "fullFile": "cypress\\e2e\\functionExpression.cy.js",
      "file": "cypress\\e2e\\functionExpression.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a5d533be-a820-49fe-8ad6-4dc3e59c3354",
          "title": "function expression",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs user email",
              "fullTitle": "function expression Logs user email",
              "timedOut": null,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const printUserEmail = function (email) {\n  cy.log(` User email: ${email}`);\n};\nprintUserEmail('cypresstesting@com');",
              "err": {},
              "uuid": "6f16a535-aea9-4926-b98d-895561daed75",
              "parentUUID": "a5d533be-a820-49fe-8ad6-4dc3e59c3354",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f16a535-aea9-4926-b98d-895561daed75"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5bf71c76-aaf7-40fd-a7ae-af51bfdf44e0",
      "title": "",
      "fullFile": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "file": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b8569878-85b4-4e4f-b125-90e3b8812ce5",
          "title": "OddorEven",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "OddorEven",
              "fullTitle": "OddorEven OddorEven",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "function evenorodd(number) {\n  if (number % 2 === 0) {\n    cy.log(\"Even\");\n  } else {\n    cy.log(\"Odd\");\n  }\n}\nlet s = evenorodd(6);\ncy.log(s);",
              "err": {},
              "uuid": "fd89789c-122f-427c-89e7-462309e4a4b6",
              "parentUUID": "b8569878-85b4-4e4f-b125-90e3b8812ce5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd89789c-122f-427c-89e7-462309e4a4b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "67ac356c-eb23-4ffd-b2f6-ac80bbd6b2db",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "42c7f538-aaea-4977-be70-11b02f7b99ae",
          "title": "Login Functinality with Negative scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "invalid username",
              "fullTitle": "Login Functinality with Negative scenarios invalid username",
              "timedOut": null,
              "duration": 9638,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('testAbcd');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid username\ncy.get('#flash').should('be.visible').and('contain.text', 'Your username is invalid!');",
              "err": {},
              "uuid": "848cb45f-7f20-4ef2-90e5-32c9c5dee188",
              "parentUUID": "42c7f538-aaea-4977-be70-11b02f7b99ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "invalid password",
              "fullTitle": "Login Functinality with Negative scenarios invalid password",
              "timedOut": null,
              "duration": 5660,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('practice');\ncy.get('#password').type('cdeef!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid password\ncy.get('#flash').should('be.visible').and('contain.text', 'Your password is invalid!');",
              "err": {},
              "uuid": "359aff4b-5718-47b3-9fc5-d045c966702b",
              "parentUUID": "42c7f538-aaea-4977-be70-11b02f7b99ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "848cb45f-7f20-4ef2-90e5-32c9c5dee188",
            "359aff4b-5718-47b3-9fc5-d045c966702b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15298,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e8de7809-58c5-4828-addc-c5b13552abdd",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c4f2d54e-4568-4f7d-ae15-85642df9a4d5",
          "title": "Login Functionality Positive scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login in to application with valid credentials",
              "fullTitle": "Login Functionality Positive scenarios Login in to application with valid credentials",
              "timedOut": null,
              "duration": 9572,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n//Assert URL\ncy.url().should('include', '/secure');\n//Assert Success Message\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n//Assert Logout Button\ncy.get('a.button.secondary.radius').should('be.visible').and('contain.text', 'Logout');",
              "err": {},
              "uuid": "e17d1a88-49b3-46b6-b6fc-36769812a2d9",
              "parentUUID": "c4f2d54e-4568-4f7d-ae15-85642df9a4d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e17d1a88-49b3-46b6-b6fc-36769812a2d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9572,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4b27eaf7-375f-4a01-a4c7-52636e98ee7b",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandExtractToken.cy.js",
      "file": "cypress\\e2e\\loginandExtractToken.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e342284e-5b64-45e3-a6a1-35d4ba569258",
          "title": "User Login API and Extract Token",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "log in and extract the token",
              "fullTitle": "User Login API and Extract Token log in and extract the token",
              "timedOut": null,
              "duration": 662,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/login',\n  body: apidata,\n  failOnStatusCode: false\n}).then(res => {\n  cy.log(res);\n  // Step 3: Assert response status\n  expect(res.status).to.eq(200);\n  // Step 2: Extract and validate token\n  //expect(response.body).to.have.property('token');\n  cy.log(res.body.message);\n  expect(res.body.message).to.eq(\"Login successful\");\n  const token = res.body.data.token;\n  expect(res.body.data.token).to.not.be.null;\n  //cy.log(authToken)\n  // Save token to alias for reuse\n  cy.wrap(token).as('authToken');\n});",
              "err": {},
              "uuid": "898d34ba-cbec-43d0-8927-5230fd77e317",
              "parentUUID": "e342284e-5b64-45e3-a6a1-35d4ba569258",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "898d34ba-cbec-43d0-8927-5230fd77e317"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 662,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "daae86cb-67c0-471c-96f7-86394d83b4fe",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "file": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b62db2c1-e316-4c64-a6b9-f5f82ba59d11",
          "title": "loginApp",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login to an application with valid credentials",
              "fullTitle": "loginApp login to an application with valid credentials",
              "timedOut": null,
              "duration": 8827,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\n//cy.get('Username: ').contains('practice')\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();",
              "err": {},
              "uuid": "9c8fcef1-48ff-42c5-a686-9b6496d76057",
              "parentUUID": "b62db2c1-e316-4c64-a6b9-f5f82ba59d11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "logout to an application",
              "fullTitle": "loginApp logout to an application",
              "timedOut": null,
              "duration": 8405,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\ncy.get('i[class=\"icon-2x icon-signout\"]').click();",
              "err": {},
              "uuid": "164f19e4-5253-424f-907d-cdfe42b4ff8d",
              "parentUUID": "b62db2c1-e316-4c64-a6b9-f5f82ba59d11",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c8fcef1-48ff-42c5-a686-9b6496d76057",
            "164f19e4-5253-424f-907d-cdfe42b4ff8d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17232,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "92b731b7-aeb5-406e-b04b-7b1dd5fb7267",
      "title": "",
      "fullFile": "cypress\\e2e\\loginpagePOM.cy.js",
      "file": "cypress\\e2e\\loginpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "00e22de5-9a00-493f-98c9-0add6f53ec43",
          "title": "Login Page Testcase with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user should login and redirect to secure area",
              "fullTitle": "Login Page Testcase with POM user should login and redirect to secure area",
              "timedOut": null,
              "duration": 6983,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_loginpage.default.enterUsername('practice');\n_loginpage.default.enterPassword('SuperSecretPassword!');\n_loginpage.default.clickLogin();\ncy.url().should('include', '/secure');\n//cy.url().should('include', '/login');\ncy.contains('You logged into a secure area!').should('be.visible');",
              "err": {},
              "uuid": "c8b4ec37-3ea4-4a52-bd71-68b4dcfe6964",
              "parentUUID": "00e22de5-9a00-493f-98c9-0add6f53ec43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid user login should show error message",
              "fullTitle": "Login Page Testcase with POM Invalid user login should show error message",
              "timedOut": null,
              "duration": 5327,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_loginpage.default.enterUsername('abdcdef');\n_loginpage.default.enterPassword('dfdfdfd');\n_loginpage.default.clickLogin();\ncy.contains('Your username is invalid!').should('be.visible');\ncy.url().should('include', '/login');",
              "err": {},
              "uuid": "4633656c-40ce-4955-afa7-53183997e75a",
              "parentUUID": "00e22de5-9a00-493f-98c9-0add6f53ec43",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c8b4ec37-3ea4-4a52-bd71-68b4dcfe6964",
            "4633656c-40ce-4955-afa7-53183997e75a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12310,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8f9dd0aa-4752-48cd-9068-6381a2b34e23",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "file": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f854f984-5006-498c-944d-bff3913d056a",
          "title": "Login Application",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Log in with valid credentials",
              "fullTitle": "Login Application Log in with valid credentials",
              "timedOut": null,
              "duration": 6789,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login('practice', 'SuperSecretPassword!');\ncy.url().should('include', '/secure');",
              "err": {},
              "uuid": "c8d4c7c0-4777-435b-80ba-0c55243a9a84",
              "parentUUID": "f854f984-5006-498c-944d-bff3913d056a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c8d4c7c0-4777-435b-80ba-0c55243a9a84"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6789,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e7107f31-255d-4d80-9be7-56b17e39f023",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "file": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "14bf349a-ad55-46bd-9a74-3380ab826e51",
          "title": "Login with fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs in using data from user.json",
              "fullTitle": "Login with fixture data Logs in using data from user.json",
              "timedOut": null,
              "duration": 8903,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\n// Use fixture data to fill in login form\ncy.get('#username').type(this.userData.username);\ncy.get('#password').type(this.userData.password);\ncy.get('button[type=\"submit\"]').click();\n// Assertion \ncy.url().should('include', '/secure');\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "61f591fd-2530-4bb8-bb8f-ee4cbfd2ad45",
              "parentUUID": "14bf349a-ad55-46bd-9a74-3380ab826e51",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "61f591fd-2530-4bb8-bb8f-ee4cbfd2ad45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8903,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ec55e982-dbb8-4103-b74e-e3b7d81f9567",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "file": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4cbda242-193b-423a-86fa-69f0d676cc39",
          "title": "Login using fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login with form data from JSON file",
              "fullTitle": "Login using fixture data Login with form data from JSON file",
              "timedOut": null,
              "duration": 7275,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Load fixture\ncy.fixture('formData').then(data => {\n  cy.visit('https://practice.expandtesting.com/login');\n  // Fill in the form\n  cy.get('#username').type(data.username);\n  cy.get('#password').type(data.password);\n  cy.get('button[type=\"submit\"]').click();\n  // Validate login success\n  cy.url().should('include', '/secure');\n  cy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n});",
              "err": {},
              "uuid": "d3e8e67b-9ecd-46ca-8793-5d51bc584e60",
              "parentUUID": "4cbda242-193b-423a-86fa-69f0d676cc39",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3e8e67b-9ecd-46ca-8793-5d51bc584e60"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7275,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bb2e91e5-4fd7-4738-8933-7b2a9ec76c31",
      "title": "",
      "fullFile": "cypress\\e2e\\radiobutton_2c.cy.js",
      "file": "cypress\\e2e\\radiobutton_2c.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aeb0c657-ea60-47ef-a11d-91874708ee4e",
          "title": "Select Blue radio button",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select the Blue radio button",
              "fullTitle": "Select Blue radio button Select the Blue radio button",
              "timedOut": null,
              "duration": 4376,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/radio-buttons');\n//blue radio button\ncy.get('input#blue').check().should('be.checked');",
              "err": {},
              "uuid": "4154ad05-1d23-41f7-8bad-6373f03c1088",
              "parentUUID": "aeb0c657-ea60-47ef-a11d-91874708ee4e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4154ad05-1d23-41f7-8bad-6373f03c1088"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4376,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dfd2161b-43bd-438a-9df7-fb58c2b6abdd",
      "title": "",
      "fullFile": "cypress\\e2e\\registernewuserAPI.cy.js",
      "file": "cypress\\e2e\\registernewuserAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "edc524cb-7bbc-4074-b43c-d9f8be3d45f3",
          "title": "Register New User using API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new user",
              "fullTitle": "Register New User using API create a new user",
              "timedOut": null,
              "duration": 743,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//const timestamp = Date.now()\nconst apidata = {\n  name: \"QAtester28\",\n  email: \"sssf28@abcd.com\",\n  password: \"QAPassword28\"\n};\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/register',\n  body: apidata,\n  failOnStatusCode: false // allows manual status check\n}).then(res => {\n  cy.log(res);\n  // Step 2: Assert response status\n  expect(res.status).to.eq(201);\n  // Step 3: Validate success message\n  expect(res.body.message).to.eq('User account created successfully');\n});",
              "err": {},
              "uuid": "caa85626-bfb5-49e1-b351-7dc7afeab5ee",
              "parentUUID": "edc524cb-7bbc-4074-b43c-d9f8be3d45f3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "caa85626-bfb5-49e1-b351-7dc7afeab5ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 743,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3bbfa357-598c-47b3-b796-f566f278264f",
      "title": "",
      "fullFile": "cypress\\e2e\\registrationForm.cy.js",
      "file": "cypress\\e2e\\registrationForm.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ad68aa35-ecc8-4016-a6a3-eec1a7dc8172",
          "title": "Registration Form Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": " Registration Page",
              "fullTitle": "Registration Form Tests  Registration Page",
              "timedOut": null,
              "duration": 6777,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('QATest25');\ncy.get('#password').type('QATest24');\n//cy.get('input#confirmPassword', { timeout: 10000 }).should('be.visible').type('test1234');\ncy.get('#confirmPassword', {\n  timeout: 10000\n}).should('be.visible').type('QATest24');\ncy.get('button[type=submit]').click();\n// Redirect to login and show success message\ncy.url().should('include', '/login');\ncy.get('#flash').should('be.visible').and('contain.text', 'Successfully registered, you can log in now.');",
              "err": {},
              "uuid": "104520b1-648e-4a6e-8117-709c8f1ddb99",
              "parentUUID": "ad68aa35-ecc8-4016-a6a3-eec1a7dc8172",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "username validation",
              "fullTitle": "Registration Form Tests username validation",
              "timedOut": null,
              "duration": 4740,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#password').type('ValidPass');\ncy.get('#confirmPassword').type('ValidPass');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "1ca7da1b-3e81-4212-8580-3cfb3ccd66a1",
              "parentUUID": "ad68aa35-ecc8-4016-a6a3-eec1a7dc8172",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Password validation",
              "fullTitle": "Registration Form Tests Missing Password validation",
              "timedOut": null,
              "duration": 4361,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#confirmPassword').type('test123');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "dd3fb868-add2-4488-849d-41bf05d75c4b",
              "parentUUID": "ad68aa35-ecc8-4016-a6a3-eec1a7dc8172",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Non-matching passwords",
              "fullTitle": "Registration Form Tests Non-matching passwords",
              "timedOut": null,
              "duration": 7271,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#password').type('test123');\ncy.get('#confirmPassword').type('Mismatch123!');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'Passwords do not match.');",
              "err": {},
              "uuid": "1cc230c6-1896-4cf2-aeb9-57fdfc3eb061",
              "parentUUID": "ad68aa35-ecc8-4016-a6a3-eec1a7dc8172",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "104520b1-648e-4a6e-8117-709c8f1ddb99",
            "1ca7da1b-3e81-4212-8580-3cfb3ccd66a1",
            "dd3fb868-add2-4488-849d-41bf05d75c4b",
            "1cc230c6-1896-4cf2-aeb9-57fdfc3eb061"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23149,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5ff94a16-a40e-4256-a6e6-ceb512ce7de9",
      "title": "",
      "fullFile": "cypress\\e2e\\screateNoteAPI.cy.js",
      "file": "cypress\\e2e\\screateNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2fbfd4f1-1286-46af-8f0b-88fd24c85cb4",
          "title": "Create a Note",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a note and return an ID",
              "fullTitle": "Create a Note create a note and return an ID",
              "timedOut": null,
              "duration": 1265,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: 'Test Note',\n    description: 'This is a test note created through API testing.',\n    category: 'Work'\n  }\n}).then(response => {\n  console.log('Response Body:', response.body);\n  cy.log(JSON.stringify(response.body));\n  // Basic response check\n  expect(response.status).to.eq(200);\n  // Adjust according to the actual structure\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.have.property('id');\n  expect(response.body.data.title).to.eq('Test Note');\n});",
              "err": {},
              "uuid": "1f1af9be-4937-4e7a-90aa-7bc8ab9701c2",
              "parentUUID": "2fbfd4f1-1286-46af-8f0b-88fd24c85cb4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f1af9be-4937-4e7a-90aa-7bc8ab9701c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1265,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "99846924-d231-4680-bfb1-a5f518069c2c",
      "title": "",
      "fullFile": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "file": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "scroll in an element",
          "fullTitle": "scroll in an element",
          "timedOut": null,
          "duration": 5577,
          "state": "passed",
          "speed": "medium",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/scrollbars\");\n//scroll in to an element\n//cy.get(\"[id='search-input']\").type(\"scrollbars\")  \ncy.get('[style=\"height:150px;overflow-y: scroll;width:300px;overflow-x:scroll\"]').click();\ncy.get('#hidingButton').scrollIntoView().click();",
          "err": {},
          "uuid": "cd7747c5-e975-42bb-a794-136a23fa4419",
          "parentUUID": "99846924-d231-4680-bfb1-a5f518069c2c",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Drag and drop",
          "fullTitle": "Drag and drop",
          "timedOut": null,
          "duration": 3272,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/drag-and-drop\");\n// Drag Box A and drop it on Box B\ncy.get('#column-a').drag('#column-b');\n// Optional: assert that they’ve swapped\ncy.get('#column-a header').should('have.text', 'B');\ncy.get('#column-b header').should('have.text', 'A');",
          "err": {},
          "uuid": "295b24a0-bf97-4d00-8bc5-5788df8bcc63",
          "parentUUID": "99846924-d231-4680-bfb1-a5f518069c2c",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "cd7747c5-e975-42bb-a794-136a23fa4419",
        "295b24a0-bf97-4d00-8bc5-5788df8bcc63"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 8849,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "dfd1581a-bd5f-4caf-bc10-5cf4fd7904a0",
      "title": "",
      "fullFile": "cypress\\e2e\\securePageTestPom.cy.js",
      "file": "cypress\\e2e\\securePageTestPom.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "An uncaught error was detected outside of a test",
          "fullTitle": "An uncaught error was detected outside of a test",
          "timedOut": null,
          "duration": 237,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\securePageTestPom.cy.js\\\\An uncaught error was detected outside of a test (failed).png\"\n    ]\n  ]\n}",
          "code": "throw err;",
          "err": {
            "message": "TypeError: The following error originated from your test code, not from Cypress.\n\n  > _loginpage.default is not a constructor\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nCypress could not associate this error to any specific test.\n\nWe dynamically generated a new test to display this failure.",
            "estack": "TypeError: The following error originated from your test code, not from Cypress.\n\n  > _loginpage.default is not a constructor\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nCypress could not associate this error to any specific test.\n\nWe dynamically generated a new test to display this failure.\n    at eval (webpack://cypress/./cypress/e2e/securePageTestPom.cy.js:5:18)\n    at eval (https://practice.expandtesting.com/__cypress/tests?p=cypress\\e2e\\securePageTestPom.cy.js:145:3)\n    at eval (https://practice.expandtesting.com/__cypress/tests?p=cypress\\e2e\\securePageTestPom.cy.js:147:12)\n    at eval (<anonymous>)\n    at <unknown> (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:113267:23)\n    at tryCatcher (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Object.gotValue (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:6446:18)\n    at Object.gotAccum (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:6435:25)\n    at Object.tryCatcher (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1489:31)",
            "diff": null
          },
          "uuid": "501b1a5c-594d-474b-a2b2-52e01f61c6a2",
          "parentUUID": "dfd1581a-bd5f-4caf-bc10-5cf4fd7904a0",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [
        "501b1a5c-594d-474b-a2b2-52e01f61c6a2"
      ],
      "pending": [],
      "skipped": [],
      "duration": 237,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "cdaea33d-df30-4067-a216-ddf48746bd46",
      "title": "",
      "fullFile": "cypress\\e2e\\usePrevSubject.cy.js",
      "file": "cypress\\e2e\\usePrevSubject.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "950d97ce-9e11-4bdc-8498-418f02928f1a",
          "title": "usePrevSubject",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login using Fillinput",
              "fullTitle": "usePrevSubject Login using Fillinput",
              "timedOut": null,
              "duration": 6841,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Use previous subject\ncy.get('#username').fillinput('practice');\ncy.get('#password').fillinput('SuperSecretPassword!');\ncy.get('#login > .btn').click();\ncy.get('b').should('have.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "2f274bab-c710-4cd0-8703-b2d18a5528bb",
              "parentUUID": "950d97ce-9e11-4bdc-8498-418f02928f1a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f274bab-c710-4cd0-8703-b2d18a5528bb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6841,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fca9cd38-6d25-4fc3-b6b4-95f733f40591",
      "title": "",
      "fullFile": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "file": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eccf2331-de1c-40e6-a401-e42de3d4cdec",
          "title": "Validate Chrome CPU usage matches the label",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "fullTitle": "Validate Chrome CPU usage matches the label Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "timedOut": null,
              "duration": 2759,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\n// Wait until Chrome row appears\ncy.get(\"table.table-striped tbody tr\").each($tr => {\n  const $td = $tr.find('td');\n  const browserName = $td.eq(0).text().trim();\n  if (browserName == 'Chrome') {\n    var _find;\n    const cpuUsageFromTable = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText.trim();\n    cy.get('#chrome-cpu').invoke('text').then(fullText => {\n      const match = fullText.match(/(\\d+(\\.\\d+)?%)/);\n      const cpuUsageFromCard = match ? match[0] : null;\n      expect(cpuUsageFromCard).to.eq(cpuUsageFromTable);\n    });\n  }\n});",
              "err": {},
              "uuid": "94e91316-3608-4a01-b379-74bd7a030b62",
              "parentUUID": "eccf2331-de1c-40e6-a401-e42de3d4cdec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "94e91316-3608-4a01-b379-74bd7a030b62"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2759,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "84f64293-a2a5-4a18-9827-186aeaf5da60",
      "title": "",
      "fullFile": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "file": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "594acdaf-4218-453b-ae83-ed36d3842bb5",
          "title": "Log Each Browsername and its cpu usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "use .each() to log each browser name and its CPU usage.",
              "fullTitle": "Log Each Browsername and its cpu usage use .each() to log each browser name and its CPU usage.",
              "timedOut": null,
              "duration": 2550,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsage = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText;\n  cy.log('Browser Name is ', browsername, 'cpu usage', cpuUsage);\n});",
              "err": {},
              "uuid": "42b5e18c-3656-4f40-88c8-f5bc2262eaf2",
              "parentUUID": "594acdaf-4218-453b-ae83-ed36d3842bb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Count how many browsers have CPU usage over 20%.",
              "fullTitle": "Log Each Browsername and its cpu usage Count how many browsers have CPU usage over 20%.",
              "timedOut": null,
              "duration": 2252,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let count = 0;\ncy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find2;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsageText = (_find2 = [...$td].find(td => td.innerText.includes('%'))) === null || _find2 === void 0 ? void 0 : _find2.innerText;\n  if (cpuUsageText) {\n    const cpuValue = parseFloat(cpuUsageText.replace('%', ''));\n    if (cpuValue > 20) {\n      count++;\n    }\n  }\n}).then(() => {\n  cy.log('Total browser count with>20 % is', count);\n});",
              "err": {},
              "uuid": "bb63e163-ce14-4cd3-91e5-d3c75257c921",
              "parentUUID": "594acdaf-4218-453b-ae83-ed36d3842bb5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42b5e18c-3656-4f40-88c8-f5bc2262eaf2",
            "bb63e163-ce14-4cd3-91e5-d3c75257c921"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4802,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a1deab7f-06b1-4601-935e-cc1f22e9b5b9",
      "title": "",
      "fullFile": "cypress\\e2e\\LoopNumbers.cy.js",
      "file": "cypress\\e2e\\LoopNumbers.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b3971182-12ef-4556-abcf-230dbec042b1",
          "title": "loop Numbers",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "loop",
              "fullTitle": "loop Numbers loop",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "for (let i = 1; i <= 10; i++) {\n  if (i % 2 === 0) {\n    cy.log(i);\n  }\n}",
              "err": {},
              "uuid": "c51ab8e8-e024-4c5c-b0a1-e63b6126d13b",
              "parentUUID": "b3971182-12ef-4556-abcf-230dbec042b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "c51ab8e8-e024-4c5c-b0a1-e63b6126d13b"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "36ef07cf-7627-42d5-a8ca-e479d7c04737",
      "title": "",
      "fullFile": "cypress\\e2e\\arrowFunction.cy.js",
      "file": "cypress\\e2e\\arrowFunction.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "50f6fdde-b32f-445d-bba2-7413c840e7b6",
          "title": "Multiply three Numbers Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Multiplies three numbers",
              "fullTitle": "Multiply three Numbers Example Multiplies three numbers",
              "timedOut": null,
              "duration": 54,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const multiplyThreeNumbers = (a, b, c) => a * b * c;\nconst result = multiplyThreeNumbers(4, 6, 8);\ncy.log(`The multiplication of three numbers: ${result}`);",
              "err": {},
              "uuid": "180df821-2680-4f49-ab04-24eec92a408f",
              "parentUUID": "50f6fdde-b32f-445d-bba2-7413c840e7b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "180df821-2680-4f49-ab04-24eec92a408f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 54,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2c166e54-d4ec-40c6-8167-cfd14d1441db",
      "title": "",
      "fullFile": "cypress\\e2e\\assertionsExamples.cy.js",
      "file": "cypress\\e2e\\assertionsExamples.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bffd3ef3-0e49-493a-9486-59408556f000",
          "title": "Assertions Page - Cypress Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should assert element existence, visibility, and text content",
              "fullTitle": "Assertions Page - Cypress Tests should assert element existence, visibility, and text content",
              "timedOut": null,
              "duration": 10648,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/#assertions');\n//Assert: Element exists\ncy.get('.btn-warning').should('exist');\n//cy.get('#exist-element') .should('exist');\n// Assert: Element has specific text\ncy.get('.btn-primary').should('have.text', 'Test Cases');\n// Assert: Element is visible\ncy.get('.btn-success').should('be.visible');",
              "err": {},
              "uuid": "9920a9b7-b5ea-46f5-9565-b70f30acce47",
              "parentUUID": "bffd3ef3-0e49-493a-9486-59408556f000",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9920a9b7-b5ea-46f5-9565-b70f30acce47"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10648,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5875e4a0-a274-48e9-94f4-43b0911f567c",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "file": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89c4bc24-d719-4811-a641-219d5f7c21e9",
          "title": "Checkboxes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check and uncheck each checkbox",
              "fullTitle": "Checkboxes check and uncheck each checkbox",
              "timedOut": null,
              "duration": 9154,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/checkboxes');\n// Step 2: Locate all checkboxes (assume input[type=\"checkbox\"] is used)\ncy.get('input[type=\"checkbox\"]').each($checkbox => {\n  // Step 3: Check the checkbox\n  cy.wrap($checkbox).check().should('be.checked');\n  // Step 4: Uncheck the checkbox\n  cy.wrap($checkbox).uncheck().should('not.be.checked');\n});",
              "err": {},
              "uuid": "278fd3ff-991e-41c0-a455-d6bb77a3c99c",
              "parentUUID": "89c4bc24-d719-4811-a641-219d5f7c21e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "278fd3ff-991e-41c0-a455-d6bb77a3c99c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9154,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "28375819-efbb-4331-b903-81b07da1a846",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxPOM.cy.js",
      "file": "cypress\\e2e\\checkboxPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7de96a77-be2f-4299-9b94-de0f30cdd579",
          "title": "Checkboxes Test with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should check the first checkbox and uncheck the second",
              "fullTitle": "Checkboxes Test with POM Should check the first checkbox and uncheck the second",
              "timedOut": null,
              "duration": 4143,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "checkboxPage.checkFirstBox();\ncheckboxPage.uncheckSecondBox();\ncheckboxPage.validateCheckboxState([true, false]); // Validate both checkboxes",
              "err": {},
              "uuid": "7bdba9c4-435d-4972-a84a-81d2f480d53c",
              "parentUUID": "7de96a77-be2f-4299-9b94-de0f30cdd579",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7bdba9c4-435d-4972-a84a-81d2f480d53c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4143,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "abf5a7e7-7eb4-49ed-b2d6-b285c8bb5f19",
      "title": "",
      "fullFile": "cypress\\e2e\\contextmenuPOM.cy.js",
      "file": "cypress\\e2e\\contextmenuPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6d30da63-6677-4a38-aca5-7927beb11043",
          "title": "Context Menu Interaction Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should right click the box and validate the alert message",
              "fullTitle": "Context Menu Interaction Test Should right click the box and validate the alert message",
              "timedOut": null,
              "duration": 3025,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contextMenuPage.rightClickBox();\n//cy.get('a[target=\"_blank\"]').invoke('removeAttr', 'target').click();\ncontextMenuPage.handleAlert('You selected a context menu');",
              "err": {},
              "uuid": "4f1d7148-d281-4288-b8be-1cb2dd33c93b",
              "parentUUID": "6d30da63-6677-4a38-aca5-7927beb11043",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f1d7148-d281-4288-b8be-1cb2dd33c93b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3025,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7bcab895-3b39-4d2b-98ad-2b48b82c0996",
      "title": "",
      "fullFile": "cypress\\e2e\\dataTypes.cy.js",
      "file": "cypress\\e2e\\dataTypes.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "878b4799-bf4a-4473-818e-393d24fe1696",
          "title": "datatypes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "arraydatatype",
              "fullTitle": "datatypes arraydatatype",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let numbers = [1, 2, 3, 4, 5];\nlet sum = 0;\nfor (let i = 0; i < numbers.length; i++) {\n  sum += numbers[i];\n  cy.log(\"Sum of the numbers is:\", sum);\n}",
              "err": {},
              "uuid": "1ba46434-0704-4cfe-a976-6479fcb59857",
              "parentUUID": "878b4799-bf4a-4473-818e-393d24fe1696",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ba46434-0704-4cfe-a976-6479fcb59857"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 71,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e6718093-79b1-412d-b028-5b9cc95b6040",
      "title": "",
      "fullFile": "cypress\\e2e\\declareVariables.cy.js",
      "file": "cypress\\e2e\\declareVariables.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "083077b2-338f-494f-8d77-294223c63d15",
          "title": "variabledeclaration",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "variablelet",
              "fullTitle": "variabledeclaration variablelet",
              "timedOut": null,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let b = 2;\nb = 3;\ncy.log(b);",
              "err": {},
              "uuid": "2c26c7e1-7d89-4667-b33f-ed5d4b2c66f8",
              "parentUUID": "083077b2-338f-494f-8d77-294223c63d15",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "variableconst",
              "fullTitle": "variabledeclaration variableconst",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const c = 3;\nc = 4; //throws Error",
              "err": {},
              "uuid": "26161279-639d-4e7e-8e55-8c641bbd4d9f",
              "parentUUID": "083077b2-338f-494f-8d77-294223c63d15",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c26c7e1-7d89-4667-b33f-ed5d4b2c66f8"
          ],
          "failures": [],
          "pending": [
            "26161279-639d-4e7e-8e55-8c641bbd4d9f"
          ],
          "skipped": [],
          "duration": 27,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c7408c2d-4aca-4843-9ee5-27860392e27b",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "file": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "06b090d2-de39-4718-a0a6-5f75ed63c8b2",
          "title": "Delete a test note and validate cleanup",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deletes a note and confirms deletion",
              "fullTitle": "Delete a test note and validate cleanup Deletes a note and confirms deletion",
              "timedOut": null,
              "duration": 1365,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1: DELETE /notes/{id}\ncy.request({\n  method: 'DELETE',\n  url: `${baseUrl}/${noteId}`,\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Step 2: Confirm status 204\n  expect(response.status).to.eq(200);\n});\n// Step 3: GET /notes and confirm note is gone\ncy.request({\n  method: 'GET',\n  url: baseUrl,\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  //  //Validate the noteId no longer exists in the list\n  // const notes = response.body\n  // const found = notes.find(note => note.id === noteId)\n  // expect(found).to.be.undefined\n});",
              "err": {},
              "uuid": "c2c7380c-1143-4a43-aa84-246b5f1bb57d",
              "parentUUID": "06b090d2-de39-4718-a0a6-5f75ed63c8b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2c7380c-1143-4a43-aa84-246b5f1bb57d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1365,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3fdb2c99-d1ad-4207-aa68-b51101d8d5ba",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "file": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Delete NotesAPI",
          "fullTitle": "Delete NotesAPI",
          "timedOut": null,
          "duration": 0,
          "state": "pending",
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": true,
          "context": null,
          "code": "cy.get('@token').then(token => {\n  cy.get('@noteId').then(noteId => {\n    cy.request({\n      method: 'DELETE',\n      url: `https://practice.expandtesting.com/notes/api/notes/${noteId}`,\n      headers: {\n        'x-auth-token': token\n      },\n      body: noteData\n    }).then(res => {\n      cy.log(res);\n      expect(res.status).to.eq(200);\n      expect(res.body.message).to.eq('Note successfully deleted');\n    });\n  });\n});",
          "err": {},
          "uuid": "0c95f475-66b3-41ac-9418-0a6bc65492b3",
          "parentUUID": "3fdb2c99-d1ad-4207-aa68-b51101d8d5ba",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [],
      "pending": [
        "0c95f475-66b3-41ac-9418-0a6bc65492b3"
      ],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "529a97b5-0e8f-4ed1-ab03-48c63a9489a0",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdownPOM.cy.js",
      "file": "cypress\\e2e\\dropdownPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "667514aa-eb05-453d-8ddb-78cd817e32ac",
          "title": "Dropdown Handling Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should select Option 1 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 1 and validate",
              "timedOut": null,
              "duration": 4202,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 1');\ndropdownPage.getSelectedOption().should('have.text', 'Option 1');",
              "err": {},
              "uuid": "cea2502f-049f-4c33-a3f8-8259ea6f7381",
              "parentUUID": "667514aa-eb05-453d-8ddb-78cd817e32ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should select Option 2 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 2 and validate",
              "timedOut": null,
              "duration": 3405,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 2');\ndropdownPage.getSelectedOption().should('have.text', 'Option 2');",
              "err": {},
              "uuid": "0f65a336-0754-4125-a6c2-939e0c694a9c",
              "parentUUID": "667514aa-eb05-453d-8ddb-78cd817e32ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cea2502f-049f-4c33-a3f8-8259ea6f7381",
            "0f65a336-0754-4125-a6c2-939e0c694a9c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7607,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0f13c8b3-4d89-4162-84e3-48e3d81d0cfe",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdown_2b.cy.js",
      "file": "cypress\\e2e\\dropdown_2b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "78f65c4e-dc36-4620-a0a8-0c98c7b62b99",
          "title": "Select \"India\" from the dropdown",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "select India from the country dropdown",
              "fullTitle": "Select \"India\" from the dropdown select India from the country dropdown",
              "timedOut": null,
              "duration": 3104,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit the dropdown page\ncy.visit('https://practice.expandtesting.com/dropdown');\n// Select \"India\" from the dropdown by visible text\ncy.get('#country').select('India').should('have.value', 'IN');",
              "err": {},
              "uuid": "ad290606-814f-4218-8243-0ed0b0fb6d3f",
              "parentUUID": "78f65c4e-dc36-4620-a0a8-0c98c7b62b99",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad290606-814f-4218-8243-0ed0b0fb6d3f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3104,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "102efed8-2ca9-4597-a19a-230161faef2d",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "file": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9f3621c3-8f20-4136-8564-cca2b3ceba1b",
          "title": "Log browser name and CPU usage on dynamic-table",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs browser and CPU usage",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Logs browser and CPU usage",
              "timedOut": null,
              "duration": 3673,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get('table.table-striped tbody tr').each(($row, index) => {\n  const browserName = $row.find('td').eq(0).text();\n  const cpuUsage = $row.find('td').eq(2).text();\n  cy.get('table.table-striped tbody tr').should('have.length.at.least', 1);\n  cy.log(`Row ${index + 1}: Browser = ${browserName}, CPU Usage = ${cpuUsage}`);\n  expect(browserName).to.not.be.empty;\n  expect(cpuUsage).to.not.be.empty;\n});",
              "err": {},
              "uuid": "1e690418-82b0-4165-8295-2114725e3803",
              "parentUUID": "9f3621c3-8f20-4136-8564-cca2b3ceba1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "timedOut": null,
              "duration": 2710,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\nlet cpuAbove15Found = false;\ncy.get(\"table.table-striped tbody tr\").each(($row, rowIndex, $rows) => {\n  const $cells = $row.find('td');\n  const browserName = $cells.eq(0).text().trim(); // 1. Assert browser name is not empty\n  expect(browserName).to.not.be.empty;\n  $cells.each((i, td) => {\n    const cellText = td.innerText;\n    expect(cellText).to.not.be.empty; // 2. Assert no cell is empty\n  });\n  const cpuCell = [...$cells].find(td => td.innerText.includes('%')); // 3. Check if any CPU usage > 15%\n  if (cpuCell) {\n    const cpuValue = parseFloat(cpuCell.innerText.replace('%', ''));\n    if (cpuValue > 15) {\n      cpuAbove15Found = true;\n    }\n  }\n}).then(() => {\n  expect(cpuAbove15Found, \"CPU Usage above 15 not found\").to.be.false; // Final assertion after looping all rows\n});",
              "err": {},
              "uuid": "48bc9aae-9e5f-4135-9899-575dca5c193b",
              "parentUUID": "9f3621c3-8f20-4136-8564-cca2b3ceba1b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e690418-82b0-4165-8295-2114725e3803",
            "48bc9aae-9e5f-4135-9899-575dca5c193b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6383,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8c63daec-c73a-4d9c-92ec-df2f346ecdac",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "file": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3ca42b3b-cf9d-43c6-87a5-cc307b35ac50",
          "title": "Dynamic Content Validation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should detect dynamic content change after refresh",
              "fullTitle": "Dynamic Content Validation should detect dynamic content change after refresh",
              "timedOut": null,
              "duration": 5694,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dynamic-content');\n// Step 1: Get initial content\nlet firstLoadContent = [];\n_dynamicpage.default.getTextBlocks().then($blocks => {\n  $blocks.each((index, el) => {\n    firstLoadContent.push(el.innerText.trim());\n  });\n  // Step 2: Refresh the page\n  cy.reload();\n  // Step 3: Get new content\n  let secondLoadContent = [];\n  _dynamicpage.default.getTextBlocks().then($newBlocks => {\n    $newBlocks.each((index, el) => {\n      secondLoadContent.push(el.innerText.trim());\n    });\n    // Step 4: Compare the content\n    _dynamicpage.default.compareContent(firstLoadContent, secondLoadContent);\n  });\n});",
              "err": {},
              "uuid": "2b7f26fb-0523-43bd-a92e-3c93b78f844a",
              "parentUUID": "3ca42b3b-cf9d-43c6-87a5-cc307b35ac50",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b7f26fb-0523-43bd-a92e-3c93b78f844a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5694,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0669a8d7-3172-44e5-b237-8ce1a8bc0759",
      "title": "",
      "fullFile": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "file": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "45aa4eb3-97de-4cc6-92dc-8de9b7cd4482",
          "title": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Find the column index for \"Memory\"",
              "fullTitle": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage Find the column index for \"Memory\"",
              "timedOut": null,
              "duration": 2779,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table.table-striped thead tr th\").then($tr => {\n  let memoryColumnIndex = -1;\n  $tr.each((index, th) => {\n    const tr = th.innerText;\n    if (tr == 'Memory') {\n      memoryColumnIndex = index;\n    }\n  });\n  cy.log('Memory column index: ', memoryColumnIndex);\n  cy.get(\"table.table-striped tbody tr\").each($trow => {\n    const $cells = $trow.find('td');\n    const browserName = $cells.eq(0).text().trim();\n    const memory = $cells.eq(memoryColumnIndex).text();\n    cy.log(browserName, ' Memory:', memory);\n  });\n});",
              "err": {},
              "uuid": "bbebab7e-ac41-4c81-957d-6f0b0ab00f74",
              "parentUUID": "45aa4eb3-97de-4cc6-92dc-8de9b7cd4482",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbebab7e-ac41-4c81-957d-6f0b0ab00f74"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2779,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b981547f-df70-4d59-9472-335e3e54993d",
      "title": "",
      "fullFile": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "file": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dc22b74a-892d-45bf-b060-c9fa84697a2b",
          "title": "Fetch All Notes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new note",
              "fullTitle": "Fetch All Notes create a new note",
              "timedOut": null,
              "duration": 1191,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 2: Create a note\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: noteTitle,\n    description: noteDescription,\n    category: 'Personal'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  createdNoteId = response.body.data.id;\n  expect(createdNoteId).to.exist;\n});",
              "err": {},
              "uuid": "3b42d23e-39e3-44f1-8ea1-18457266278d",
              "parentUUID": "dc22b74a-892d-45bf-b060-c9fa84697a2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch all notes and contain the newly created note",
              "fullTitle": "Fetch All Notes should fetch all notes and contain the newly created note",
              "timedOut": null,
              "duration": 537,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 3: Fetch all notes\ncy.request({\n  method: 'GET',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.be.an('array');\n  // Step 4: Assert the created note exists in the array\n  const found = response.body.data.find(note =>\n  //note.id === createdNoteId && note.title === noteTitle\n  note.title === noteTitle && note.description === noteDescription);\n  expect(found, 'Newly created note should be in the list').to.exist;\n});",
              "err": {},
              "uuid": "2983173b-aefa-4b23-a403-4983cd28afb6",
              "parentUUID": "dc22b74a-892d-45bf-b060-c9fa84697a2b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b42d23e-39e3-44f1-8ea1-18457266278d",
            "2983173b-aefa-4b23-a403-4983cd28afb6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1728,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7ce4661f-295c-4af8-8588-9a1627bab860",
      "title": "",
      "fullFile": "cypress\\e2e\\functionDeclaration.cy.js",
      "file": "cypress\\e2e\\functionDeclaration.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b991a107-6374-457b-a6c8-43297d429087",
          "title": "Logging Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs the welcome message",
              "fullTitle": "Logging Example Logs the welcome message",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "logWelcome();",
              "err": {},
              "uuid": "a6929e9a-1609-46e6-afc5-27301a7934a6",
              "parentUUID": "b991a107-6374-457b-a6c8-43297d429087",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6929e9a-1609-46e6-afc5-27301a7934a6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d497c2ec-1c41-4354-957d-ab72426e587b",
      "title": "",
      "fullFile": "cypress\\e2e\\functionExpression.cy.js",
      "file": "cypress\\e2e\\functionExpression.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "68b11a94-9439-4155-afe7-c22ed71e3b08",
          "title": "function expression",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs user email",
              "fullTitle": "function expression Logs user email",
              "timedOut": null,
              "duration": 35,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const printUserEmail = function (email) {\n  cy.log(` User email: ${email}`);\n};\nprintUserEmail('cypresstesting@com');",
              "err": {},
              "uuid": "01da1e24-2524-4e85-b4b9-640a625ebf5b",
              "parentUUID": "68b11a94-9439-4155-afe7-c22ed71e3b08",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "01da1e24-2524-4e85-b4b9-640a625ebf5b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5a0bf040-b5df-445b-aa3b-af115ea54ec3",
      "title": "",
      "fullFile": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "file": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "59c16e70-f734-4302-ba1f-7169f01fad65",
          "title": "OddorEven",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "OddorEven",
              "fullTitle": "OddorEven OddorEven",
              "timedOut": null,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "function evenorodd(number) {\n  if (number % 2 === 0) {\n    cy.log(\"Even\");\n  } else {\n    cy.log(\"Odd\");\n  }\n}\nlet s = evenorodd(6);\ncy.log(s);",
              "err": {},
              "uuid": "89562c1e-c775-4438-9fdc-0f5926154249",
              "parentUUID": "59c16e70-f734-4302-ba1f-7169f01fad65",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "89562c1e-c775-4438-9fdc-0f5926154249"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "18eb501d-8308-4073-be54-214f03559261",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "67c9a337-337f-4bb0-97ff-5225a6871639",
          "title": "Login Functinality with Negative scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "invalid username",
              "fullTitle": "Login Functinality with Negative scenarios invalid username",
              "timedOut": null,
              "duration": 7576,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('testAbcd');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid username\ncy.get('#flash').should('be.visible').and('contain.text', 'Your username is invalid!');",
              "err": {},
              "uuid": "0f4db85f-cd66-4d3e-8642-90f16ae98c72",
              "parentUUID": "67c9a337-337f-4bb0-97ff-5225a6871639",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "invalid password",
              "fullTitle": "Login Functinality with Negative scenarios invalid password",
              "timedOut": null,
              "duration": 5793,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('practice');\ncy.get('#password').type('cdeef!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid password\ncy.get('#flash').should('be.visible').and('contain.text', 'Your password is invalid!');",
              "err": {},
              "uuid": "1e3bb58a-fbdd-4c91-a2f0-3c14a2568f8a",
              "parentUUID": "67c9a337-337f-4bb0-97ff-5225a6871639",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f4db85f-cd66-4d3e-8642-90f16ae98c72",
            "1e3bb58a-fbdd-4c91-a2f0-3c14a2568f8a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13369,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f8b29e9d-84a0-4cdd-84f7-fb666508991d",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89ef3262-2987-429e-b04a-29f2deb2dc70",
          "title": "Login Functionality Positive scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login in to application with valid credentials",
              "fullTitle": "Login Functionality Positive scenarios Login in to application with valid credentials",
              "timedOut": null,
              "duration": 6039,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n//Assert URL\ncy.url().should('include', '/secure');\n//Assert Success Message\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n//Assert Logout Button\ncy.get('a.button.secondary.radius').should('be.visible').and('contain.text', 'Logout');",
              "err": {},
              "uuid": "4c45e1c8-b7f8-4517-b49e-78abc1bb8b6b",
              "parentUUID": "89ef3262-2987-429e-b04a-29f2deb2dc70",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c45e1c8-b7f8-4517-b49e-78abc1bb8b6b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6039,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8e864e27-e35b-423c-bdba-041bbab9b6ea",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandExtractToken.cy.js",
      "file": "cypress\\e2e\\loginandExtractToken.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3e5187b8-b531-48f8-ad25-9c25f50823ab",
          "title": "User Login API and Extract Token",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "log in and extract the token",
              "fullTitle": "User Login API and Extract Token log in and extract the token",
              "timedOut": null,
              "duration": 634,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/login',\n  body: apidata,\n  failOnStatusCode: false\n}).then(res => {\n  cy.log(res);\n  // Step 3: Assert response status\n  expect(res.status).to.eq(200);\n  // Step 2: Extract and validate token\n  //expect(response.body).to.have.property('token');\n  cy.log(res.body.message);\n  expect(res.body.message).to.eq(\"Login successful\");\n  const token = res.body.data.token;\n  expect(res.body.data.token).to.not.be.null;\n  //cy.log(authToken)\n  // Save token to alias for reuse\n  cy.wrap(token).as('authToken');\n});",
              "err": {},
              "uuid": "558ca819-53d5-4dbc-9a87-1370f26a03e0",
              "parentUUID": "3e5187b8-b531-48f8-ad25-9c25f50823ab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "558ca819-53d5-4dbc-9a87-1370f26a03e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 634,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9e9895d1-3758-4bf2-a79f-fdc24655d773",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "file": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7507df9e-7e7a-4ac5-ac89-ba92d697ecbd",
          "title": "loginApp",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login to an application with valid credentials",
              "fullTitle": "loginApp login to an application with valid credentials",
              "timedOut": null,
              "duration": 5745,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\n//cy.get('Username: ').contains('practice')\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();",
              "err": {},
              "uuid": "05be625e-eded-49d7-b701-1f8c739cecff",
              "parentUUID": "7507df9e-7e7a-4ac5-ac89-ba92d697ecbd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "logout to an application",
              "fullTitle": "loginApp logout to an application",
              "timedOut": null,
              "duration": 10188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\ncy.get('i[class=\"icon-2x icon-signout\"]').click();",
              "err": {},
              "uuid": "4d43ffc8-c158-4e01-b4b1-399b534d7530",
              "parentUUID": "7507df9e-7e7a-4ac5-ac89-ba92d697ecbd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "05be625e-eded-49d7-b701-1f8c739cecff",
            "4d43ffc8-c158-4e01-b4b1-399b534d7530"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15933,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8bb07029-4c72-4022-82fe-c86d1d19d2c6",
      "title": "",
      "fullFile": "cypress\\e2e\\loginpagePOM.cy.js",
      "file": "cypress\\e2e\\loginpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a7e2c386-6d3e-4ad7-b973-3e7e518d01ed",
          "title": "Login Page Testcase with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user should login and redirect to secure area",
              "fullTitle": "Login Page Testcase with POM user should login and redirect to secure area",
              "timedOut": null,
              "duration": 226,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\loginpagePOM.cy.js\\\\Login Page Testcase with POM -- user should login and redirect to secure area -- before each hook (failed).png\"\n    ]\n  ]\n}",
              "code": "_loginpage.default.enterUsername('practice');\n_loginpage.default.enterPassword('SuperSecretPassword!');\n_loginpage.default.clickLogin();\ncy.url().should('include', '/secure');\n//cy.url().should('include', '/login');\ncy.contains('You logged into a secure area!').should('be.visible');",
              "err": {
                "message": "TypeError: _loginpage.default.visit is not a function\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Login Page Testcase with POM`",
                "estack": "TypeError: _loginpage.default.visit is not a function\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Login Page Testcase with POM`\n    at Context.eval (webpack://cypress/./cypress/e2e/loginpagePOM.cy.js:8:14)\n    at runnable.fn (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:141791:19)\n    at callFn (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:160869:21)\n    at Runnable.run (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:160856:7)\n    at <unknown> (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:166946:30)\n    at PassThroughHandlerContext.finallyHandler (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:4042:23)\n    at PassThroughHandlerContext.tryCatcher (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1546:18)",
                "diff": null
              },
              "uuid": "fb7e24bb-4313-4afb-ae1c-0549bad5f76c",
              "parentUUID": "a7e2c386-6d3e-4ad7-b973-3e7e518d01ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid user login should show error message",
              "fullTitle": "Login Page Testcase with POM Invalid user login should show error message",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_loginpage.default.enterUsername('abdcdef');\n_loginpage.default.enterPassword('dfdfdfd');\n_loginpage.default.clickLogin();\ncy.contains('Your username is invalid!').should('be.visible');\ncy.url().should('include', '/login');",
              "err": {},
              "uuid": "86f539f7-6bd7-4732-bd8b-356ef45b5ec3",
              "parentUUID": "a7e2c386-6d3e-4ad7-b973-3e7e518d01ed",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fb7e24bb-4313-4afb-ae1c-0549bad5f76c"
          ],
          "pending": [],
          "skipped": [
            "86f539f7-6bd7-4732-bd8b-356ef45b5ec3"
          ],
          "duration": 226,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "67ae8dd0-0abd-4b23-8fde-830f443653f5",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "file": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c85ac689-228f-464c-bc03-c45182c9a1f2",
          "title": "Login Application",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Log in with valid credentials",
              "fullTitle": "Login Application Log in with valid credentials",
              "timedOut": null,
              "duration": 6918,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login('practice', 'SuperSecretPassword!');\ncy.url().should('include', '/secure');",
              "err": {},
              "uuid": "446c5ae4-400d-42e4-85cf-5bdd79367bee",
              "parentUUID": "c85ac689-228f-464c-bc03-c45182c9a1f2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "446c5ae4-400d-42e4-85cf-5bdd79367bee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6918,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4da75459-25c6-46f3-a31a-a718c08cc40a",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "file": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4d4edc69-5652-42c4-a64c-747ff342e346",
          "title": "Login with fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs in using data from user.json",
              "fullTitle": "Login with fixture data Logs in using data from user.json",
              "timedOut": null,
              "duration": 6850,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\n// Use fixture data to fill in login form\ncy.get('#username').type(this.userData.username);\ncy.get('#password').type(this.userData.password);\ncy.get('button[type=\"submit\"]').click();\n// Assertion \ncy.url().should('include', '/secure');\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "d426aef9-a2aa-4c40-ae1a-83f7fb33df45",
              "parentUUID": "4d4edc69-5652-42c4-a64c-747ff342e346",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d426aef9-a2aa-4c40-ae1a-83f7fb33df45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6850,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a279c55a-9e8b-4524-9961-3b73db4610c2",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "file": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "38d7d37e-4da8-4ee4-a10e-0c3c75bca9f5",
          "title": "Login using fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login with form data from JSON file",
              "fullTitle": "Login using fixture data Login with form data from JSON file",
              "timedOut": null,
              "duration": 6471,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Load fixture\ncy.fixture('formData').then(data => {\n  cy.visit('https://practice.expandtesting.com/login');\n  // Fill in the form\n  cy.get('#username').type(data.username);\n  cy.get('#password').type(data.password);\n  cy.get('button[type=\"submit\"]').click();\n  // Validate login success\n  cy.url().should('include', '/secure');\n  cy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n});",
              "err": {},
              "uuid": "73feddd2-c10b-4287-b157-6ab61e49b99d",
              "parentUUID": "38d7d37e-4da8-4ee4-a10e-0c3c75bca9f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73feddd2-c10b-4287-b157-6ab61e49b99d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6471,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a97a8c63-04f9-4f15-bab4-1ca629dedfff",
      "title": "",
      "fullFile": "cypress\\e2e\\radiobutton_2c.cy.js",
      "file": "cypress\\e2e\\radiobutton_2c.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "71517eaa-dbe7-4beb-abbf-f2e0afe06a07",
          "title": "Select Blue radio button",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select the Blue radio button",
              "fullTitle": "Select Blue radio button Select the Blue radio button",
              "timedOut": null,
              "duration": 2916,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/radio-buttons');\n//blue radio button\ncy.get('input#blue').check().should('be.checked');",
              "err": {},
              "uuid": "91663168-e7c6-45ca-881c-6cc7818be04d",
              "parentUUID": "71517eaa-dbe7-4beb-abbf-f2e0afe06a07",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "91663168-e7c6-45ca-881c-6cc7818be04d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2916,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7f679c1f-3998-4c30-8a8e-e8b96e15845c",
      "title": "",
      "fullFile": "cypress\\e2e\\registernewuserAPI.cy.js",
      "file": "cypress\\e2e\\registernewuserAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d111e81f-e427-44db-8230-d5831cacc58b",
          "title": "Register New User using API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new user",
              "fullTitle": "Register New User using API create a new user",
              "timedOut": null,
              "duration": 696,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//const timestamp = Date.now()\nconst apidata = {\n  name: \"QAtester27\",\n  email: \"sssf27@abcd.com\",\n  password: \"QAPassword27\"\n};\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/register',\n  body: apidata,\n  failOnStatusCode: false // allows manual status check\n}).then(res => {\n  cy.log(res);\n  // Step 2: Assert response status\n  expect(res.status).to.eq(201);\n  // Step 3: Validate success message\n  expect(res.body.message).to.eq('User account created successfully');\n});",
              "err": {},
              "uuid": "fb443667-6a47-4550-8676-a6816672bcfd",
              "parentUUID": "d111e81f-e427-44db-8230-d5831cacc58b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb443667-6a47-4550-8676-a6816672bcfd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 696,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "75891d81-854d-410f-83bb-14a453338ff1",
      "title": "",
      "fullFile": "cypress\\e2e\\registrationForm.cy.js",
      "file": "cypress\\e2e\\registrationForm.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
          "title": "Registration Form Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": " Registration Page",
              "fullTitle": "Registration Form Tests  Registration Page",
              "timedOut": null,
              "duration": 8799,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('QATest24');\ncy.get('#password').type('QATest23');\n//cy.get('input#confirmPassword', { timeout: 10000 }).should('be.visible').type('test1234');\ncy.get('#confirmPassword', {\n  timeout: 10000\n}).should('be.visible').type('QATest23');\ncy.get('button[type=submit]').click();\n// Redirect to login and show success message\ncy.url().should('include', '/login');\ncy.get('#flash').should('be.visible').and('contain.text', 'Successfully registered, you can log in now.');",
              "err": {},
              "uuid": "c00209e9-ded4-450c-ac66-f852d6691eae",
              "parentUUID": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "username validation",
              "fullTitle": "Registration Form Tests username validation",
              "timedOut": null,
              "duration": 5721,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#password').type('ValidPass');\ncy.get('#confirmPassword').type('ValidPass');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "2720d24b-1501-426b-b316-8305b24794b8",
              "parentUUID": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Password validation",
              "fullTitle": "Registration Form Tests Missing Password validation",
              "timedOut": null,
              "duration": 9553,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#confirmPassword').type('test123');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "ac2d189e-dd6a-4bec-8867-493761c90dc5",
              "parentUUID": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Non-matching passwords",
              "fullTitle": "Registration Form Tests Non-matching passwords",
              "timedOut": null,
              "duration": 6865,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#password').type('test123');\ncy.get('#confirmPassword').type('Mismatch123!');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'Passwords do not match.');",
              "err": {},
              "uuid": "371be7ac-3083-45fd-88f8-b3a6900446d2",
              "parentUUID": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c00209e9-ded4-450c-ac66-f852d6691eae",
            "2720d24b-1501-426b-b316-8305b24794b8",
            "ac2d189e-dd6a-4bec-8867-493761c90dc5",
            "371be7ac-3083-45fd-88f8-b3a6900446d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 30938,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2d9b6f4e-a2ba-4e14-87b8-64755a92a1b1",
      "title": "",
      "fullFile": "cypress\\e2e\\screateNoteAPI.cy.js",
      "file": "cypress\\e2e\\screateNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "686af31f-de3f-41a8-a42c-9ed8c7a8842f",
          "title": "Create a Note",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a note and return an ID",
              "fullTitle": "Create a Note create a note and return an ID",
              "timedOut": null,
              "duration": 1207,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: 'Test Note',\n    description: 'This is a test note created through API testing.',\n    category: 'Work'\n  }\n}).then(response => {\n  console.log('Response Body:', response.body);\n  cy.log(JSON.stringify(response.body));\n  // Basic response check\n  expect(response.status).to.eq(200);\n  // Adjust according to the actual structure\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.have.property('id');\n  expect(response.body.data.title).to.eq('Test Note');\n});",
              "err": {},
              "uuid": "54d3003f-d9ef-4f1d-9b2d-905e04194322",
              "parentUUID": "686af31f-de3f-41a8-a42c-9ed8c7a8842f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54d3003f-d9ef-4f1d-9b2d-905e04194322"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1207,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1f79a8f0-349e-4d8a-8525-0a788e82e9d0",
      "title": "",
      "fullFile": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "file": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "scroll in an element",
          "fullTitle": "scroll in an element",
          "timedOut": null,
          "duration": 3951,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/scrollbars\");\n//scroll in to an element\n//cy.get(\"[id='search-input']\").type(\"scrollbars\")  \ncy.get('[style=\"height:150px;overflow-y: scroll;width:300px;overflow-x:scroll\"]').click();\ncy.get('#hidingButton').scrollIntoView().click();",
          "err": {},
          "uuid": "1397d485-0e59-42ab-8d3f-599f4b773e35",
          "parentUUID": "1f79a8f0-349e-4d8a-8525-0a788e82e9d0",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Drag and drop",
          "fullTitle": "Drag and drop",
          "timedOut": null,
          "duration": 2477,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/drag-and-drop\");\n// Drag Box A and drop it on Box B\ncy.get('#column-a').drag('#column-b');\n// Optional: assert that they’ve swapped\ncy.get('#column-a header').should('have.text', 'B');\ncy.get('#column-b header').should('have.text', 'A');",
          "err": {},
          "uuid": "8970d60e-1b5c-4345-8b61-db9a59c58b35",
          "parentUUID": "1f79a8f0-349e-4d8a-8525-0a788e82e9d0",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "1397d485-0e59-42ab-8d3f-599f4b773e35",
        "8970d60e-1b5c-4345-8b61-db9a59c58b35"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 6428,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "81d30ccb-58e5-4a0c-b965-f1f84c8e37fb",
      "title": "",
      "fullFile": "cypress\\e2e\\securePageTestPom.cy.js",
      "file": "cypress\\e2e\\securePageTestPom.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dd4fefc4-59d2-4986-aba8-a2665091b3ea",
          "title": "Login Page Testcase with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user should login and redirect to secure area",
              "fullTitle": "Login Page Testcase with POM user should login and redirect to secure area",
              "timedOut": null,
              "duration": 64606,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('practice');\nloginPage.enterPassword('SuperSecretPassword!');\nloginPage.clickLogin();\nsecurePage.isAtSecurePage();\nsecurePage.getSuccessAlert().should('contain.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "8ed15771-0f6c-460a-aabd-1f60ff80b77c",
              "parentUUID": "dd4fefc4-59d2-4986-aba8-a2665091b3ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User should be able to logout successfully",
              "fullTitle": "Login Page Testcase with POM User should be able to logout successfully",
              "timedOut": null,
              "duration": 49407,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('practice');\nloginPage.enterPassword('SuperSecretPassword!');\nloginPage.clickLogin();\nsecurePage.logout();\ncy.url().should('include', '/login');\ncy.get('#flash, .flash.info').should('contain.text', 'You logged out of the secure area!'); // Adjust based on actual message",
              "err": {},
              "uuid": "3a450878-aad6-4059-af62-0291a08a0ba4",
              "parentUUID": "dd4fefc4-59d2-4986-aba8-a2665091b3ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ed15771-0f6c-460a-aabd-1f60ff80b77c",
            "3a450878-aad6-4059-af62-0291a08a0ba4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 114013,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fce6606a-6c25-40fd-ba4f-d53e585a4f0f",
      "title": "",
      "fullFile": "cypress\\e2e\\usePrevSubject.cy.js",
      "file": "cypress\\e2e\\usePrevSubject.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "67242d47-2184-482e-95af-dee35b098c62",
          "title": "usePrevSubject",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login using Fillinput",
              "fullTitle": "usePrevSubject Login using Fillinput",
              "timedOut": null,
              "duration": 8406,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Use previous subject\ncy.get('#username').fillinput('practice');\ncy.get('#password').fillinput('SuperSecretPassword!');\ncy.get('#login > .btn').click();\ncy.get('b').should('have.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "3e957e26-1fb8-4531-ab4f-d33f52bfa286",
              "parentUUID": "67242d47-2184-482e-95af-dee35b098c62",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e957e26-1fb8-4531-ab4f-d33f52bfa286"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8406,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8fa49d05-94f7-4c96-8ee8-fa408fd6497a",
      "title": "",
      "fullFile": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "file": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b2f0dbd5-dda5-4e31-9e49-fbfcbfd52888",
          "title": "Validate Chrome CPU usage matches the label",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "fullTitle": "Validate Chrome CPU usage matches the label Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "timedOut": null,
              "duration": 2713,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\n// Wait until Chrome row appears\ncy.get(\"table.table-striped tbody tr\").each($tr => {\n  const $td = $tr.find('td');\n  const browserName = $td.eq(0).text().trim();\n  if (browserName == 'Chrome') {\n    var _find;\n    const cpuUsageFromTable = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText.trim();\n    cy.get('#chrome-cpu').invoke('text').then(fullText => {\n      const match = fullText.match(/(\\d+(\\.\\d+)?%)/);\n      const cpuUsageFromCard = match ? match[0] : null;\n      expect(cpuUsageFromCard).to.eq(cpuUsageFromTable);\n    });\n  }\n});",
              "err": {},
              "uuid": "72b8b791-05fe-4483-8f7f-942d529e7ee6",
              "parentUUID": "b2f0dbd5-dda5-4e31-9e49-fbfcbfd52888",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "72b8b791-05fe-4483-8f7f-942d529e7ee6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2713,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1e3a8ae8-6b8a-4043-b32c-6f3bdd3d827c",
      "title": "",
      "fullFile": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "file": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b1687753-2f7f-41b3-b3d1-8d86b540b981",
          "title": "Log Each Browsername and its cpu usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "use .each() to log each browser name and its CPU usage.",
              "fullTitle": "Log Each Browsername and its cpu usage use .each() to log each browser name and its CPU usage.",
              "timedOut": null,
              "duration": 3458,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsage = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText;\n  cy.log('Browser Name is ', browsername, 'cpu usage', cpuUsage);\n});",
              "err": {},
              "uuid": "a046bb90-be0c-49c6-a262-08dd3b2d6c88",
              "parentUUID": "b1687753-2f7f-41b3-b3d1-8d86b540b981",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Count how many browsers have CPU usage over 20%.",
              "fullTitle": "Log Each Browsername and its cpu usage Count how many browsers have CPU usage over 20%.",
              "timedOut": null,
              "duration": 5027,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let count = 0;\ncy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find2;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsageText = (_find2 = [...$td].find(td => td.innerText.includes('%'))) === null || _find2 === void 0 ? void 0 : _find2.innerText;\n  if (cpuUsageText) {\n    const cpuValue = parseFloat(cpuUsageText.replace('%', ''));\n    if (cpuValue > 20) {\n      count++;\n    }\n  }\n}).then(() => {\n  cy.log('Total browser count with>20 % is', count);\n});",
              "err": {},
              "uuid": "3253ef1d-f931-43c5-bf7e-d3e24b5e8658",
              "parentUUID": "b1687753-2f7f-41b3-b3d1-8d86b540b981",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a046bb90-be0c-49c6-a262-08dd3b2d6c88",
            "3253ef1d-f931-43c5-bf7e-d3e24b5e8658"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8485,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a2200a3d-2250-4fd3-b980-f21fff7100f4",
      "title": "",
      "fullFile": "cypress\\e2e\\LoopNumbers.cy.js",
      "file": "cypress\\e2e\\LoopNumbers.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "80e1aaf4-6cf2-4282-93b5-1fbf91d44eb7",
          "title": "loop Numbers",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "loop",
              "fullTitle": "loop Numbers loop",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "for (let i = 1; i <= 10; i++) {\n  if (i % 2 === 0) {\n    cy.log(i);\n  }\n}",
              "err": {},
              "uuid": "e800bab7-b1b2-47fd-ae08-118b140aa456",
              "parentUUID": "80e1aaf4-6cf2-4282-93b5-1fbf91d44eb7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "e800bab7-b1b2-47fd-ae08-118b140aa456"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4272331d-821a-4a05-8ec6-96686162b3db",
      "title": "",
      "fullFile": "cypress\\e2e\\arrowFunction.cy.js",
      "file": "cypress\\e2e\\arrowFunction.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c777279b-5848-43fa-9def-c24a990816cd",
          "title": "Multiply three Numbers Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Multiplies three numbers",
              "fullTitle": "Multiply three Numbers Example Multiplies three numbers",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const multiplyThreeNumbers = (a, b, c) => a * b * c;\nconst result = multiplyThreeNumbers(4, 6, 8);\ncy.log(`The multiplication of three numbers: ${result}`);",
              "err": {},
              "uuid": "b7008d99-8c48-4018-9e2f-1b931f4f8798",
              "parentUUID": "c777279b-5848-43fa-9def-c24a990816cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7008d99-8c48-4018-9e2f-1b931f4f8798"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dfd3cd4b-8c1c-4f2b-80e7-537486535c4f",
      "title": "",
      "fullFile": "cypress\\e2e\\assertionsExamples.cy.js",
      "file": "cypress\\e2e\\assertionsExamples.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5a853d6f-b414-4329-b260-25db42459830",
          "title": "Assertions Page - Cypress Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should assert element existence, visibility, and text content",
              "fullTitle": "Assertions Page - Cypress Tests should assert element existence, visibility, and text content",
              "timedOut": null,
              "duration": 10428,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/#assertions');\n//Assert: Element exists\ncy.get('.btn-warning').should('exist');\n//cy.get('#exist-element') .should('exist');\n// Assert: Element has specific text\ncy.get('.btn-primary').should('have.text', 'Test Cases');\n// Assert: Element is visible\ncy.get('.btn-success').should('be.visible');",
              "err": {},
              "uuid": "11876149-1b17-43c4-bcd8-cfa8c5a53388",
              "parentUUID": "5a853d6f-b414-4329-b260-25db42459830",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11876149-1b17-43c4-bcd8-cfa8c5a53388"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10428,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a07e1be8-e71c-4bf8-bd27-f1d8b0e5817c",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "file": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "196fc358-abca-48de-b5da-98510c44e40d",
          "title": "Checkboxes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check and uncheck each checkbox",
              "fullTitle": "Checkboxes check and uncheck each checkbox",
              "timedOut": null,
              "duration": 4405,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/checkboxes');\n// Step 2: Locate all checkboxes (assume input[type=\"checkbox\"] is used)\ncy.get('input[type=\"checkbox\"]').each($checkbox => {\n  // Step 3: Check the checkbox\n  cy.wrap($checkbox).check().should('be.checked');\n  // Step 4: Uncheck the checkbox\n  cy.wrap($checkbox).uncheck().should('not.be.checked');\n});",
              "err": {},
              "uuid": "0b8add92-0c81-41bd-82fc-fb72dc1510c5",
              "parentUUID": "196fc358-abca-48de-b5da-98510c44e40d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b8add92-0c81-41bd-82fc-fb72dc1510c5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4405,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ddcb8239-17a0-46e9-ba4a-8b912fc9f6e2",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxPOM.cy.js",
      "file": "cypress\\e2e\\checkboxPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "55594c3f-3d92-4234-abcc-0126d212bc6d",
          "title": "Checkboxes Test with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should check the first checkbox and uncheck the second",
              "fullTitle": "Checkboxes Test with POM Should check the first checkbox and uncheck the second",
              "timedOut": null,
              "duration": 3550,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "checkboxPage.checkFirstBox();\ncheckboxPage.uncheckSecondBox();\ncheckboxPage.validateCheckboxState([true, false]); // Validate both checkboxes",
              "err": {},
              "uuid": "d3b7f4d1-d562-40cc-81ae-a1d1ce14575a",
              "parentUUID": "55594c3f-3d92-4234-abcc-0126d212bc6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3b7f4d1-d562-40cc-81ae-a1d1ce14575a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3550,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "da75eb00-ef73-46bd-b0ce-840755c479fd",
      "title": "",
      "fullFile": "cypress\\e2e\\contextmenuPOM.cy.js",
      "file": "cypress\\e2e\\contextmenuPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "63534943-aca2-45f3-b1a9-4874dc7354de",
          "title": "Context Menu Interaction Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should right click the box and validate the alert message",
              "fullTitle": "Context Menu Interaction Test Should right click the box and validate the alert message",
              "timedOut": null,
              "duration": 3507,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contextMenuPage.rightClickBox();\n//cy.get('a[target=\"_blank\"]').invoke('removeAttr', 'target').click();\ncontextMenuPage.handleAlert('You selected a context menu');",
              "err": {},
              "uuid": "1c8523f0-6ac8-4f6c-b91f-9587d108254d",
              "parentUUID": "63534943-aca2-45f3-b1a9-4874dc7354de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c8523f0-6ac8-4f6c-b91f-9587d108254d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3507,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8c8d7505-dc18-4faf-92ea-8d6799aa93f1",
      "title": "",
      "fullFile": "cypress\\e2e\\dataTypes.cy.js",
      "file": "cypress\\e2e\\dataTypes.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "14736a4a-be85-41a7-92f4-dc637d769d09",
          "title": "datatypes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "arraydatatype",
              "fullTitle": "datatypes arraydatatype",
              "timedOut": null,
              "duration": 52,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let numbers = [1, 2, 3, 4, 5];\nlet sum = 0;\nfor (let i = 0; i < numbers.length; i++) {\n  sum += numbers[i];\n  cy.log(\"Sum of the numbers is:\", sum);\n}",
              "err": {},
              "uuid": "a88af84a-ded9-433d-b8cb-1a188d03ddf2",
              "parentUUID": "14736a4a-be85-41a7-92f4-dc637d769d09",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a88af84a-ded9-433d-b8cb-1a188d03ddf2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 52,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "51992b79-3f31-4e8e-912d-62a890a55afe",
      "title": "",
      "fullFile": "cypress\\e2e\\declareVariables.cy.js",
      "file": "cypress\\e2e\\declareVariables.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c3a5b75f-244f-475a-90d8-f39908bb3b2e",
          "title": "variabledeclaration",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "variablelet",
              "fullTitle": "variabledeclaration variablelet",
              "timedOut": null,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let b = 2;\nb = 3;\ncy.log(b);",
              "err": {},
              "uuid": "48a7e507-35e0-4873-988d-a81fef635ec6",
              "parentUUID": "c3a5b75f-244f-475a-90d8-f39908bb3b2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "variableconst",
              "fullTitle": "variabledeclaration variableconst",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const c = 3;\nc = 4; //throws Error",
              "err": {},
              "uuid": "eb0bf334-0ca0-4d66-85f9-2df5ce094c31",
              "parentUUID": "c3a5b75f-244f-475a-90d8-f39908bb3b2e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "48a7e507-35e0-4873-988d-a81fef635ec6"
          ],
          "failures": [],
          "pending": [
            "eb0bf334-0ca0-4d66-85f9-2df5ce094c31"
          ],
          "skipped": [],
          "duration": 25,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dacc694f-193d-4bec-bbb4-a70f1dd8bab3",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "file": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "19631dbc-667b-4a94-aad6-5fd615615378",
          "title": "Delete a test note and validate cleanup",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deletes a note and confirms deletion",
              "fullTitle": "Delete a test note and validate cleanup Deletes a note and confirms deletion",
              "timedOut": null,
              "duration": 1651,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1: DELETE /notes/{id}\ncy.request({\n  method: 'DELETE',\n  url: `${baseUrl}/${noteId}`,\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Step 2: Confirm status 204\n  expect(response.status).to.eq(200);\n});\n// Step 3: GET /notes and confirm note is gone\ncy.request({\n  method: 'GET',\n  url: baseUrl,\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  //  //Validate the noteId no longer exists in the list\n  // const notes = response.body\n  // const found = notes.find(note => note.id === noteId)\n  // expect(found).to.be.undefined\n});",
              "err": {},
              "uuid": "fa39ab68-6e71-41d4-b9a1-8618412ac34c",
              "parentUUID": "19631dbc-667b-4a94-aad6-5fd615615378",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fa39ab68-6e71-41d4-b9a1-8618412ac34c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1651,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "15144287-7e8e-4d43-a400-eba5219c921c",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "file": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Delete NotesAPI",
          "fullTitle": "Delete NotesAPI",
          "timedOut": null,
          "duration": 0,
          "state": "pending",
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": true,
          "context": null,
          "code": "cy.get('@token').then(token => {\n  cy.get('@noteId').then(noteId => {\n    cy.request({\n      method: 'DELETE',\n      url: `https://practice.expandtesting.com/notes/api/notes/${noteId}`,\n      headers: {\n        'x-auth-token': token\n      },\n      body: noteData\n    }).then(res => {\n      cy.log(res);\n      expect(res.status).to.eq(200);\n      expect(res.body.message).to.eq('Note successfully deleted');\n    });\n  });\n});",
          "err": {},
          "uuid": "0918c692-9e18-48ec-a434-80a7a364c246",
          "parentUUID": "15144287-7e8e-4d43-a400-eba5219c921c",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [],
      "pending": [
        "0918c692-9e18-48ec-a434-80a7a364c246"
      ],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "30e441c6-8519-45bd-aa68-fd102dea3f82",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdownPOM.cy.js",
      "file": "cypress\\e2e\\dropdownPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89bbbf3c-fb52-4e0e-81af-5e313473ec31",
          "title": "Dropdown Handling Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should select Option 1 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 1 and validate",
              "timedOut": null,
              "duration": 4389,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 1');\ndropdownPage.getSelectedOption().should('have.text', 'Option 1');",
              "err": {},
              "uuid": "02989b7d-d9c5-4242-b7dc-cb8014ff03f5",
              "parentUUID": "89bbbf3c-fb52-4e0e-81af-5e313473ec31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should select Option 2 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 2 and validate",
              "timedOut": null,
              "duration": 2264,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 2');\ndropdownPage.getSelectedOption().should('have.text', 'Option 2');",
              "err": {},
              "uuid": "412368df-31ca-47a5-9e53-c3e7f1f5b28b",
              "parentUUID": "89bbbf3c-fb52-4e0e-81af-5e313473ec31",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "02989b7d-d9c5-4242-b7dc-cb8014ff03f5",
            "412368df-31ca-47a5-9e53-c3e7f1f5b28b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6653,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "797b3474-5d59-40b3-9d98-0ecc0c0ae8c5",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdown_2b.cy.js",
      "file": "cypress\\e2e\\dropdown_2b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5c8d8ca4-dfa7-493a-90cd-5a6ffb71dcb1",
          "title": "Select \"India\" from the dropdown",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "select India from the country dropdown",
              "fullTitle": "Select \"India\" from the dropdown select India from the country dropdown",
              "timedOut": null,
              "duration": 3046,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit the dropdown page\ncy.visit('https://practice.expandtesting.com/dropdown');\n// Select \"India\" from the dropdown by visible text\ncy.get('#country').select('India').should('have.value', 'IN');",
              "err": {},
              "uuid": "dff3d849-78dc-42e2-9603-c04b5f0efca1",
              "parentUUID": "5c8d8ca4-dfa7-493a-90cd-5a6ffb71dcb1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dff3d849-78dc-42e2-9603-c04b5f0efca1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3046,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f842fc73-7da8-4d99-b64b-0d8db3a4fc56",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "file": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d7899dbf-555a-4fe3-abe8-944bfbcdda21",
          "title": "Log browser name and CPU usage on dynamic-table",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs browser and CPU usage",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Logs browser and CPU usage",
              "timedOut": null,
              "duration": 2308,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get('table.table-striped tbody tr').each(($row, index) => {\n  const browserName = $row.find('td').eq(0).text();\n  const cpuUsage = $row.find('td').eq(2).text();\n  cy.get('table.table-striped tbody tr').should('have.length.at.least', 1);\n  cy.log(`Row ${index + 1}: Browser = ${browserName}, CPU Usage = ${cpuUsage}`);\n  expect(browserName).to.not.be.empty;\n  expect(cpuUsage).to.not.be.empty;\n});",
              "err": {},
              "uuid": "16811254-d1b1-4af3-90cf-6a1a4f4dd022",
              "parentUUID": "d7899dbf-555a-4fe3-abe8-944bfbcdda21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "timedOut": null,
              "duration": 1531,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\nlet cpuAbove15Found = false;\ncy.get(\"table.table-striped tbody tr\").each(($row, rowIndex, $rows) => {\n  const $cells = $row.find('td');\n  const browserName = $cells.eq(0).text().trim(); // 1. Assert browser name is not empty\n  expect(browserName).to.not.be.empty;\n  $cells.each((i, td) => {\n    const cellText = td.innerText;\n    expect(cellText).to.not.be.empty; // 2. Assert no cell is empty\n  });\n  const cpuCell = [...$cells].find(td => td.innerText.includes('%')); // 3. Check if any CPU usage > 15%\n  if (cpuCell) {\n    const cpuValue = parseFloat(cpuCell.innerText.replace('%', ''));\n    if (cpuValue > 15) {\n      cpuAbove15Found = true;\n    }\n  }\n}).then(() => {\n  expect(cpuAbove15Found, \"CPU Usage above 15 not found\").to.be.false; // Final assertion after looping all rows\n});",
              "err": {},
              "uuid": "ee4bfc2f-45b8-4ccd-8a61-ece6753ca828",
              "parentUUID": "d7899dbf-555a-4fe3-abe8-944bfbcdda21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16811254-d1b1-4af3-90cf-6a1a4f4dd022",
            "ee4bfc2f-45b8-4ccd-8a61-ece6753ca828"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3839,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e141f9a6-229a-48a2-9da8-9bf3fba5729a",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "file": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "12e6e512-cc38-4861-b774-936eb12196d9",
          "title": "Dynamic Content Validation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should detect dynamic content change after refresh",
              "fullTitle": "Dynamic Content Validation should detect dynamic content change after refresh",
              "timedOut": null,
              "duration": 4463,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dynamic-content');\n// Step 1: Get initial content\nlet firstLoadContent = [];\n_dynamicpage.default.getTextBlocks().then($blocks => {\n  $blocks.each((index, el) => {\n    firstLoadContent.push(el.innerText.trim());\n  });\n  // Step 2: Refresh the page\n  cy.reload();\n  // Step 3: Get new content\n  let secondLoadContent = [];\n  _dynamicpage.default.getTextBlocks().then($newBlocks => {\n    $newBlocks.each((index, el) => {\n      secondLoadContent.push(el.innerText.trim());\n    });\n    // Step 4: Compare the content\n    _dynamicpage.default.compareContent(firstLoadContent, secondLoadContent);\n  });\n});",
              "err": {},
              "uuid": "16b4f7ba-0499-4fc9-9dcc-f6a66b8e2edc",
              "parentUUID": "12e6e512-cc38-4861-b774-936eb12196d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16b4f7ba-0499-4fc9-9dcc-f6a66b8e2edc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4463,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "858f29a5-25c7-40bb-a03c-9f519b46d2c2",
      "title": "",
      "fullFile": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "file": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "646d07b4-00dc-4800-b943-341a1248047d",
          "title": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Find the column index for \"Memory\"",
              "fullTitle": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage Find the column index for \"Memory\"",
              "timedOut": null,
              "duration": 2720,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table.table-striped thead tr th\").then($tr => {\n  let memoryColumnIndex = -1;\n  $tr.each((index, th) => {\n    const tr = th.innerText;\n    if (tr == 'Memory') {\n      memoryColumnIndex = index;\n    }\n  });\n  cy.log('Memory column index: ', memoryColumnIndex);\n  cy.get(\"table.table-striped tbody tr\").each($trow => {\n    const $cells = $trow.find('td');\n    const browserName = $cells.eq(0).text().trim();\n    const memory = $cells.eq(memoryColumnIndex).text();\n    cy.log(browserName, ' Memory:', memory);\n  });\n});",
              "err": {},
              "uuid": "4e9ac7fc-5d72-408b-90e7-6ed093bd0bfb",
              "parentUUID": "646d07b4-00dc-4800-b943-341a1248047d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e9ac7fc-5d72-408b-90e7-6ed093bd0bfb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2720,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e343ffdf-138b-4b1e-b227-0faefc149b55",
      "title": "",
      "fullFile": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "file": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "29a46579-ebad-4fb0-ac64-a6a09f7ce589",
          "title": "Fetch All Notes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new note",
              "fullTitle": "Fetch All Notes create a new note",
              "timedOut": null,
              "duration": 1218,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 2: Create a note\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: noteTitle,\n    description: noteDescription,\n    category: 'Personal'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  createdNoteId = response.body.data.id;\n  expect(createdNoteId).to.exist;\n});",
              "err": {},
              "uuid": "9ce355b1-daa3-471b-b8ce-2d70aa1652ce",
              "parentUUID": "29a46579-ebad-4fb0-ac64-a6a09f7ce589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch all notes and contain the newly created note",
              "fullTitle": "Fetch All Notes should fetch all notes and contain the newly created note",
              "timedOut": null,
              "duration": 1066,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 3: Fetch all notes\ncy.request({\n  method: 'GET',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.be.an('array');\n  // Step 4: Assert the created note exists in the array\n  const found = response.body.data.find(note =>\n  //note.id === createdNoteId && note.title === noteTitle\n  note.title === noteTitle && note.description === noteDescription);\n  expect(found, 'Newly created note should be in the list').to.exist;\n});",
              "err": {},
              "uuid": "12706b9b-bf89-4c35-a6e9-1d67e7cf7d68",
              "parentUUID": "29a46579-ebad-4fb0-ac64-a6a09f7ce589",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9ce355b1-daa3-471b-b8ce-2d70aa1652ce",
            "12706b9b-bf89-4c35-a6e9-1d67e7cf7d68"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2284,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8b1ba3b1-64bf-4ec0-a735-380653ad01f5",
      "title": "",
      "fullFile": "cypress\\e2e\\functionDeclaration.cy.js",
      "file": "cypress\\e2e\\functionDeclaration.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "16a9f515-c71f-4d9c-ac80-eeaac9849c32",
          "title": "Logging Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs the welcome message",
              "fullTitle": "Logging Example Logs the welcome message",
              "timedOut": null,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "logWelcome();",
              "err": {},
              "uuid": "fb1f0c89-0515-4383-bdca-5df03c5cb424",
              "parentUUID": "16a9f515-c71f-4d9c-ac80-eeaac9849c32",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb1f0c89-0515-4383-bdca-5df03c5cb424"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ddadc5c5-d10e-4494-aa75-b566ef5499d9",
      "title": "",
      "fullFile": "cypress\\e2e\\functionExpression.cy.js",
      "file": "cypress\\e2e\\functionExpression.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a5d533be-a820-49fe-8ad6-4dc3e59c3354",
          "title": "function expression",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs user email",
              "fullTitle": "function expression Logs user email",
              "timedOut": null,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const printUserEmail = function (email) {\n  cy.log(` User email: ${email}`);\n};\nprintUserEmail('cypresstesting@com');",
              "err": {},
              "uuid": "6f16a535-aea9-4926-b98d-895561daed75",
              "parentUUID": "a5d533be-a820-49fe-8ad6-4dc3e59c3354",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f16a535-aea9-4926-b98d-895561daed75"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5bf71c76-aaf7-40fd-a7ae-af51bfdf44e0",
      "title": "",
      "fullFile": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "file": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b8569878-85b4-4e4f-b125-90e3b8812ce5",
          "title": "OddorEven",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "OddorEven",
              "fullTitle": "OddorEven OddorEven",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "function evenorodd(number) {\n  if (number % 2 === 0) {\n    cy.log(\"Even\");\n  } else {\n    cy.log(\"Odd\");\n  }\n}\nlet s = evenorodd(6);\ncy.log(s);",
              "err": {},
              "uuid": "fd89789c-122f-427c-89e7-462309e4a4b6",
              "parentUUID": "b8569878-85b4-4e4f-b125-90e3b8812ce5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd89789c-122f-427c-89e7-462309e4a4b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "67ac356c-eb23-4ffd-b2f6-ac80bbd6b2db",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "42c7f538-aaea-4977-be70-11b02f7b99ae",
          "title": "Login Functinality with Negative scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "invalid username",
              "fullTitle": "Login Functinality with Negative scenarios invalid username",
              "timedOut": null,
              "duration": 9638,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('testAbcd');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid username\ncy.get('#flash').should('be.visible').and('contain.text', 'Your username is invalid!');",
              "err": {},
              "uuid": "848cb45f-7f20-4ef2-90e5-32c9c5dee188",
              "parentUUID": "42c7f538-aaea-4977-be70-11b02f7b99ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "invalid password",
              "fullTitle": "Login Functinality with Negative scenarios invalid password",
              "timedOut": null,
              "duration": 5660,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('practice');\ncy.get('#password').type('cdeef!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid password\ncy.get('#flash').should('be.visible').and('contain.text', 'Your password is invalid!');",
              "err": {},
              "uuid": "359aff4b-5718-47b3-9fc5-d045c966702b",
              "parentUUID": "42c7f538-aaea-4977-be70-11b02f7b99ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "848cb45f-7f20-4ef2-90e5-32c9c5dee188",
            "359aff4b-5718-47b3-9fc5-d045c966702b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15298,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e8de7809-58c5-4828-addc-c5b13552abdd",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c4f2d54e-4568-4f7d-ae15-85642df9a4d5",
          "title": "Login Functionality Positive scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login in to application with valid credentials",
              "fullTitle": "Login Functionality Positive scenarios Login in to application with valid credentials",
              "timedOut": null,
              "duration": 9572,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n//Assert URL\ncy.url().should('include', '/secure');\n//Assert Success Message\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n//Assert Logout Button\ncy.get('a.button.secondary.radius').should('be.visible').and('contain.text', 'Logout');",
              "err": {},
              "uuid": "e17d1a88-49b3-46b6-b6fc-36769812a2d9",
              "parentUUID": "c4f2d54e-4568-4f7d-ae15-85642df9a4d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e17d1a88-49b3-46b6-b6fc-36769812a2d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9572,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4b27eaf7-375f-4a01-a4c7-52636e98ee7b",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandExtractToken.cy.js",
      "file": "cypress\\e2e\\loginandExtractToken.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e342284e-5b64-45e3-a6a1-35d4ba569258",
          "title": "User Login API and Extract Token",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "log in and extract the token",
              "fullTitle": "User Login API and Extract Token log in and extract the token",
              "timedOut": null,
              "duration": 662,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/login',\n  body: apidata,\n  failOnStatusCode: false\n}).then(res => {\n  cy.log(res);\n  // Step 3: Assert response status\n  expect(res.status).to.eq(200);\n  // Step 2: Extract and validate token\n  //expect(response.body).to.have.property('token');\n  cy.log(res.body.message);\n  expect(res.body.message).to.eq(\"Login successful\");\n  const token = res.body.data.token;\n  expect(res.body.data.token).to.not.be.null;\n  //cy.log(authToken)\n  // Save token to alias for reuse\n  cy.wrap(token).as('authToken');\n});",
              "err": {},
              "uuid": "898d34ba-cbec-43d0-8927-5230fd77e317",
              "parentUUID": "e342284e-5b64-45e3-a6a1-35d4ba569258",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "898d34ba-cbec-43d0-8927-5230fd77e317"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 662,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "daae86cb-67c0-471c-96f7-86394d83b4fe",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "file": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b62db2c1-e316-4c64-a6b9-f5f82ba59d11",
          "title": "loginApp",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login to an application with valid credentials",
              "fullTitle": "loginApp login to an application with valid credentials",
              "timedOut": null,
              "duration": 8827,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\n//cy.get('Username: ').contains('practice')\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();",
              "err": {},
              "uuid": "9c8fcef1-48ff-42c5-a686-9b6496d76057",
              "parentUUID": "b62db2c1-e316-4c64-a6b9-f5f82ba59d11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "logout to an application",
              "fullTitle": "loginApp logout to an application",
              "timedOut": null,
              "duration": 8405,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\ncy.get('i[class=\"icon-2x icon-signout\"]').click();",
              "err": {},
              "uuid": "164f19e4-5253-424f-907d-cdfe42b4ff8d",
              "parentUUID": "b62db2c1-e316-4c64-a6b9-f5f82ba59d11",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c8fcef1-48ff-42c5-a686-9b6496d76057",
            "164f19e4-5253-424f-907d-cdfe42b4ff8d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17232,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "92b731b7-aeb5-406e-b04b-7b1dd5fb7267",
      "title": "",
      "fullFile": "cypress\\e2e\\loginpagePOM.cy.js",
      "file": "cypress\\e2e\\loginpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "00e22de5-9a00-493f-98c9-0add6f53ec43",
          "title": "Login Page Testcase with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user should login and redirect to secure area",
              "fullTitle": "Login Page Testcase with POM user should login and redirect to secure area",
              "timedOut": null,
              "duration": 6983,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_loginpage.default.enterUsername('practice');\n_loginpage.default.enterPassword('SuperSecretPassword!');\n_loginpage.default.clickLogin();\ncy.url().should('include', '/secure');\n//cy.url().should('include', '/login');\ncy.contains('You logged into a secure area!').should('be.visible');",
              "err": {},
              "uuid": "c8b4ec37-3ea4-4a52-bd71-68b4dcfe6964",
              "parentUUID": "00e22de5-9a00-493f-98c9-0add6f53ec43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid user login should show error message",
              "fullTitle": "Login Page Testcase with POM Invalid user login should show error message",
              "timedOut": null,
              "duration": 5327,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_loginpage.default.enterUsername('abdcdef');\n_loginpage.default.enterPassword('dfdfdfd');\n_loginpage.default.clickLogin();\ncy.contains('Your username is invalid!').should('be.visible');\ncy.url().should('include', '/login');",
              "err": {},
              "uuid": "4633656c-40ce-4955-afa7-53183997e75a",
              "parentUUID": "00e22de5-9a00-493f-98c9-0add6f53ec43",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c8b4ec37-3ea4-4a52-bd71-68b4dcfe6964",
            "4633656c-40ce-4955-afa7-53183997e75a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12310,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8f9dd0aa-4752-48cd-9068-6381a2b34e23",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "file": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f854f984-5006-498c-944d-bff3913d056a",
          "title": "Login Application",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Log in with valid credentials",
              "fullTitle": "Login Application Log in with valid credentials",
              "timedOut": null,
              "duration": 6789,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login('practice', 'SuperSecretPassword!');\ncy.url().should('include', '/secure');",
              "err": {},
              "uuid": "c8d4c7c0-4777-435b-80ba-0c55243a9a84",
              "parentUUID": "f854f984-5006-498c-944d-bff3913d056a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c8d4c7c0-4777-435b-80ba-0c55243a9a84"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6789,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e7107f31-255d-4d80-9be7-56b17e39f023",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "file": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "14bf349a-ad55-46bd-9a74-3380ab826e51",
          "title": "Login with fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs in using data from user.json",
              "fullTitle": "Login with fixture data Logs in using data from user.json",
              "timedOut": null,
              "duration": 8903,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\n// Use fixture data to fill in login form\ncy.get('#username').type(this.userData.username);\ncy.get('#password').type(this.userData.password);\ncy.get('button[type=\"submit\"]').click();\n// Assertion \ncy.url().should('include', '/secure');\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "61f591fd-2530-4bb8-bb8f-ee4cbfd2ad45",
              "parentUUID": "14bf349a-ad55-46bd-9a74-3380ab826e51",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "61f591fd-2530-4bb8-bb8f-ee4cbfd2ad45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8903,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ec55e982-dbb8-4103-b74e-e3b7d81f9567",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "file": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4cbda242-193b-423a-86fa-69f0d676cc39",
          "title": "Login using fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login with form data from JSON file",
              "fullTitle": "Login using fixture data Login with form data from JSON file",
              "timedOut": null,
              "duration": 7275,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Load fixture\ncy.fixture('formData').then(data => {\n  cy.visit('https://practice.expandtesting.com/login');\n  // Fill in the form\n  cy.get('#username').type(data.username);\n  cy.get('#password').type(data.password);\n  cy.get('button[type=\"submit\"]').click();\n  // Validate login success\n  cy.url().should('include', '/secure');\n  cy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n});",
              "err": {},
              "uuid": "d3e8e67b-9ecd-46ca-8793-5d51bc584e60",
              "parentUUID": "4cbda242-193b-423a-86fa-69f0d676cc39",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3e8e67b-9ecd-46ca-8793-5d51bc584e60"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7275,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bb2e91e5-4fd7-4738-8933-7b2a9ec76c31",
      "title": "",
      "fullFile": "cypress\\e2e\\radiobutton_2c.cy.js",
      "file": "cypress\\e2e\\radiobutton_2c.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aeb0c657-ea60-47ef-a11d-91874708ee4e",
          "title": "Select Blue radio button",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select the Blue radio button",
              "fullTitle": "Select Blue radio button Select the Blue radio button",
              "timedOut": null,
              "duration": 4376,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/radio-buttons');\n//blue radio button\ncy.get('input#blue').check().should('be.checked');",
              "err": {},
              "uuid": "4154ad05-1d23-41f7-8bad-6373f03c1088",
              "parentUUID": "aeb0c657-ea60-47ef-a11d-91874708ee4e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4154ad05-1d23-41f7-8bad-6373f03c1088"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4376,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dfd2161b-43bd-438a-9df7-fb58c2b6abdd",
      "title": "",
      "fullFile": "cypress\\e2e\\registernewuserAPI.cy.js",
      "file": "cypress\\e2e\\registernewuserAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "edc524cb-7bbc-4074-b43c-d9f8be3d45f3",
          "title": "Register New User using API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new user",
              "fullTitle": "Register New User using API create a new user",
              "timedOut": null,
              "duration": 743,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//const timestamp = Date.now()\nconst apidata = {\n  name: \"QAtester28\",\n  email: \"sssf28@abcd.com\",\n  password: \"QAPassword28\"\n};\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/register',\n  body: apidata,\n  failOnStatusCode: false // allows manual status check\n}).then(res => {\n  cy.log(res);\n  // Step 2: Assert response status\n  expect(res.status).to.eq(201);\n  // Step 3: Validate success message\n  expect(res.body.message).to.eq('User account created successfully');\n});",
              "err": {},
              "uuid": "caa85626-bfb5-49e1-b351-7dc7afeab5ee",
              "parentUUID": "edc524cb-7bbc-4074-b43c-d9f8be3d45f3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "caa85626-bfb5-49e1-b351-7dc7afeab5ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 743,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3bbfa357-598c-47b3-b796-f566f278264f",
      "title": "",
      "fullFile": "cypress\\e2e\\registrationForm.cy.js",
      "file": "cypress\\e2e\\registrationForm.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ad68aa35-ecc8-4016-a6a3-eec1a7dc8172",
          "title": "Registration Form Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": " Registration Page",
              "fullTitle": "Registration Form Tests  Registration Page",
              "timedOut": null,
              "duration": 6777,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('QATest25');\ncy.get('#password').type('QATest24');\n//cy.get('input#confirmPassword', { timeout: 10000 }).should('be.visible').type('test1234');\ncy.get('#confirmPassword', {\n  timeout: 10000\n}).should('be.visible').type('QATest24');\ncy.get('button[type=submit]').click();\n// Redirect to login and show success message\ncy.url().should('include', '/login');\ncy.get('#flash').should('be.visible').and('contain.text', 'Successfully registered, you can log in now.');",
              "err": {},
              "uuid": "104520b1-648e-4a6e-8117-709c8f1ddb99",
              "parentUUID": "ad68aa35-ecc8-4016-a6a3-eec1a7dc8172",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "username validation",
              "fullTitle": "Registration Form Tests username validation",
              "timedOut": null,
              "duration": 4740,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#password').type('ValidPass');\ncy.get('#confirmPassword').type('ValidPass');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "1ca7da1b-3e81-4212-8580-3cfb3ccd66a1",
              "parentUUID": "ad68aa35-ecc8-4016-a6a3-eec1a7dc8172",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Password validation",
              "fullTitle": "Registration Form Tests Missing Password validation",
              "timedOut": null,
              "duration": 4361,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#confirmPassword').type('test123');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "dd3fb868-add2-4488-849d-41bf05d75c4b",
              "parentUUID": "ad68aa35-ecc8-4016-a6a3-eec1a7dc8172",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Non-matching passwords",
              "fullTitle": "Registration Form Tests Non-matching passwords",
              "timedOut": null,
              "duration": 7271,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#password').type('test123');\ncy.get('#confirmPassword').type('Mismatch123!');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'Passwords do not match.');",
              "err": {},
              "uuid": "1cc230c6-1896-4cf2-aeb9-57fdfc3eb061",
              "parentUUID": "ad68aa35-ecc8-4016-a6a3-eec1a7dc8172",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "104520b1-648e-4a6e-8117-709c8f1ddb99",
            "1ca7da1b-3e81-4212-8580-3cfb3ccd66a1",
            "dd3fb868-add2-4488-849d-41bf05d75c4b",
            "1cc230c6-1896-4cf2-aeb9-57fdfc3eb061"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23149,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5ff94a16-a40e-4256-a6e6-ceb512ce7de9",
      "title": "",
      "fullFile": "cypress\\e2e\\screateNoteAPI.cy.js",
      "file": "cypress\\e2e\\screateNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2fbfd4f1-1286-46af-8f0b-88fd24c85cb4",
          "title": "Create a Note",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a note and return an ID",
              "fullTitle": "Create a Note create a note and return an ID",
              "timedOut": null,
              "duration": 1265,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: 'Test Note',\n    description: 'This is a test note created through API testing.',\n    category: 'Work'\n  }\n}).then(response => {\n  console.log('Response Body:', response.body);\n  cy.log(JSON.stringify(response.body));\n  // Basic response check\n  expect(response.status).to.eq(200);\n  // Adjust according to the actual structure\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.have.property('id');\n  expect(response.body.data.title).to.eq('Test Note');\n});",
              "err": {},
              "uuid": "1f1af9be-4937-4e7a-90aa-7bc8ab9701c2",
              "parentUUID": "2fbfd4f1-1286-46af-8f0b-88fd24c85cb4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f1af9be-4937-4e7a-90aa-7bc8ab9701c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1265,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "99846924-d231-4680-bfb1-a5f518069c2c",
      "title": "",
      "fullFile": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "file": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "scroll in an element",
          "fullTitle": "scroll in an element",
          "timedOut": null,
          "duration": 5577,
          "state": "passed",
          "speed": "medium",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/scrollbars\");\n//scroll in to an element\n//cy.get(\"[id='search-input']\").type(\"scrollbars\")  \ncy.get('[style=\"height:150px;overflow-y: scroll;width:300px;overflow-x:scroll\"]').click();\ncy.get('#hidingButton').scrollIntoView().click();",
          "err": {},
          "uuid": "cd7747c5-e975-42bb-a794-136a23fa4419",
          "parentUUID": "99846924-d231-4680-bfb1-a5f518069c2c",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Drag and drop",
          "fullTitle": "Drag and drop",
          "timedOut": null,
          "duration": 3272,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/drag-and-drop\");\n// Drag Box A and drop it on Box B\ncy.get('#column-a').drag('#column-b');\n// Optional: assert that they’ve swapped\ncy.get('#column-a header').should('have.text', 'B');\ncy.get('#column-b header').should('have.text', 'A');",
          "err": {},
          "uuid": "295b24a0-bf97-4d00-8bc5-5788df8bcc63",
          "parentUUID": "99846924-d231-4680-bfb1-a5f518069c2c",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "cd7747c5-e975-42bb-a794-136a23fa4419",
        "295b24a0-bf97-4d00-8bc5-5788df8bcc63"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 8849,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "dfd1581a-bd5f-4caf-bc10-5cf4fd7904a0",
      "title": "",
      "fullFile": "cypress\\e2e\\securePageTestPom.cy.js",
      "file": "cypress\\e2e\\securePageTestPom.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "An uncaught error was detected outside of a test",
          "fullTitle": "An uncaught error was detected outside of a test",
          "timedOut": null,
          "duration": 237,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\securePageTestPom.cy.js\\\\An uncaught error was detected outside of a test (failed).png\"\n    ]\n  ]\n}",
          "code": "throw err;",
          "err": {
            "message": "TypeError: The following error originated from your test code, not from Cypress.\n\n  > _loginpage.default is not a constructor\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nCypress could not associate this error to any specific test.\n\nWe dynamically generated a new test to display this failure.",
            "estack": "TypeError: The following error originated from your test code, not from Cypress.\n\n  > _loginpage.default is not a constructor\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nCypress could not associate this error to any specific test.\n\nWe dynamically generated a new test to display this failure.\n    at eval (webpack://cypress/./cypress/e2e/securePageTestPom.cy.js:5:18)\n    at eval (https://practice.expandtesting.com/__cypress/tests?p=cypress\\e2e\\securePageTestPom.cy.js:145:3)\n    at eval (https://practice.expandtesting.com/__cypress/tests?p=cypress\\e2e\\securePageTestPom.cy.js:147:12)\n    at eval (<anonymous>)\n    at <unknown> (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:113267:23)\n    at tryCatcher (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Object.gotValue (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:6446:18)\n    at Object.gotAccum (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:6435:25)\n    at Object.tryCatcher (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1489:31)",
            "diff": null
          },
          "uuid": "501b1a5c-594d-474b-a2b2-52e01f61c6a2",
          "parentUUID": "dfd1581a-bd5f-4caf-bc10-5cf4fd7904a0",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [
        "501b1a5c-594d-474b-a2b2-52e01f61c6a2"
      ],
      "pending": [],
      "skipped": [],
      "duration": 237,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "cdaea33d-df30-4067-a216-ddf48746bd46",
      "title": "",
      "fullFile": "cypress\\e2e\\usePrevSubject.cy.js",
      "file": "cypress\\e2e\\usePrevSubject.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "950d97ce-9e11-4bdc-8498-418f02928f1a",
          "title": "usePrevSubject",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login using Fillinput",
              "fullTitle": "usePrevSubject Login using Fillinput",
              "timedOut": null,
              "duration": 6841,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Use previous subject\ncy.get('#username').fillinput('practice');\ncy.get('#password').fillinput('SuperSecretPassword!');\ncy.get('#login > .btn').click();\ncy.get('b').should('have.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "2f274bab-c710-4cd0-8703-b2d18a5528bb",
              "parentUUID": "950d97ce-9e11-4bdc-8498-418f02928f1a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f274bab-c710-4cd0-8703-b2d18a5528bb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6841,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fca9cd38-6d25-4fc3-b6b4-95f733f40591",
      "title": "",
      "fullFile": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "file": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eccf2331-de1c-40e6-a401-e42de3d4cdec",
          "title": "Validate Chrome CPU usage matches the label",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "fullTitle": "Validate Chrome CPU usage matches the label Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "timedOut": null,
              "duration": 2759,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\n// Wait until Chrome row appears\ncy.get(\"table.table-striped tbody tr\").each($tr => {\n  const $td = $tr.find('td');\n  const browserName = $td.eq(0).text().trim();\n  if (browserName == 'Chrome') {\n    var _find;\n    const cpuUsageFromTable = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText.trim();\n    cy.get('#chrome-cpu').invoke('text').then(fullText => {\n      const match = fullText.match(/(\\d+(\\.\\d+)?%)/);\n      const cpuUsageFromCard = match ? match[0] : null;\n      expect(cpuUsageFromCard).to.eq(cpuUsageFromTable);\n    });\n  }\n});",
              "err": {},
              "uuid": "94e91316-3608-4a01-b379-74bd7a030b62",
              "parentUUID": "eccf2331-de1c-40e6-a401-e42de3d4cdec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "94e91316-3608-4a01-b379-74bd7a030b62"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2759,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "84f64293-a2a5-4a18-9827-186aeaf5da60",
      "title": "",
      "fullFile": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "file": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "594acdaf-4218-453b-ae83-ed36d3842bb5",
          "title": "Log Each Browsername and its cpu usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "use .each() to log each browser name and its CPU usage.",
              "fullTitle": "Log Each Browsername and its cpu usage use .each() to log each browser name and its CPU usage.",
              "timedOut": null,
              "duration": 2550,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsage = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText;\n  cy.log('Browser Name is ', browsername, 'cpu usage', cpuUsage);\n});",
              "err": {},
              "uuid": "42b5e18c-3656-4f40-88c8-f5bc2262eaf2",
              "parentUUID": "594acdaf-4218-453b-ae83-ed36d3842bb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Count how many browsers have CPU usage over 20%.",
              "fullTitle": "Log Each Browsername and its cpu usage Count how many browsers have CPU usage over 20%.",
              "timedOut": null,
              "duration": 2252,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let count = 0;\ncy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find2;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsageText = (_find2 = [...$td].find(td => td.innerText.includes('%'))) === null || _find2 === void 0 ? void 0 : _find2.innerText;\n  if (cpuUsageText) {\n    const cpuValue = parseFloat(cpuUsageText.replace('%', ''));\n    if (cpuValue > 20) {\n      count++;\n    }\n  }\n}).then(() => {\n  cy.log('Total browser count with>20 % is', count);\n});",
              "err": {},
              "uuid": "bb63e163-ce14-4cd3-91e5-d3c75257c921",
              "parentUUID": "594acdaf-4218-453b-ae83-ed36d3842bb5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42b5e18c-3656-4f40-88c8-f5bc2262eaf2",
            "bb63e163-ce14-4cd3-91e5-d3c75257c921"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4802,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "90d08b87-f5d3-4c02-9b01-f927e6358208",
      "title": "",
      "fullFile": "cypress\\e2e\\LoopNumbers.cy.js",
      "file": "cypress\\e2e\\LoopNumbers.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e9aa8fc3-e3e4-4bc9-96f5-d5ded46b93ed",
          "title": "loop Numbers",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "loop",
              "fullTitle": "loop Numbers loop",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "for (let i = 1; i <= 10; i++) {\n  if (i % 2 === 0) {\n    cy.log(i);\n  }\n}",
              "err": {},
              "uuid": "a0384c4d-3f6b-4474-9a61-6d2e117d4a59",
              "parentUUID": "e9aa8fc3-e3e4-4bc9-96f5-d5ded46b93ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "a0384c4d-3f6b-4474-9a61-6d2e117d4a59"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "328e2193-8f5f-4a0e-97d0-bce150f7a190",
      "title": "",
      "fullFile": "cypress\\e2e\\arrowFunction.cy.js",
      "file": "cypress\\e2e\\arrowFunction.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0f3cad04-ad0a-421f-8184-02cea214e7d5",
          "title": "Multiply three Numbers Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Multiplies three numbers",
              "fullTitle": "Multiply three Numbers Example Multiplies three numbers",
              "timedOut": null,
              "duration": 46,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const multiplyThreeNumbers = (a, b, c) => a * b * c;\nconst result = multiplyThreeNumbers(4, 6, 8);\ncy.log(`The multiplication of three numbers: ${result}`);",
              "err": {},
              "uuid": "d03d922a-f2a7-4984-ba22-8a90a9bdcefb",
              "parentUUID": "0f3cad04-ad0a-421f-8184-02cea214e7d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d03d922a-f2a7-4984-ba22-8a90a9bdcefb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 46,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4de49660-6bd3-4f68-9aac-14b32a292fe6",
      "title": "",
      "fullFile": "cypress\\e2e\\assertionsExamples.cy.js",
      "file": "cypress\\e2e\\assertionsExamples.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "48d4324c-130b-4d77-8606-fce9dfd4a8fa",
          "title": "Assertions Page - Cypress Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should assert element existence, visibility, and text content",
              "fullTitle": "Assertions Page - Cypress Tests should assert element existence, visibility, and text content",
              "timedOut": null,
              "duration": 12775,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/#assertions');\n//Assert: Element exists\ncy.get('.btn-warning').should('exist');\n//cy.get('#exist-element') .should('exist');\n// Assert: Element has specific text\ncy.get('.btn-primary').should('have.text', 'Test Cases');\n// Assert: Element is visible\ncy.get('.btn-success').should('be.visible');",
              "err": {},
              "uuid": "82ebec0b-bf02-445b-8d51-304840182806",
              "parentUUID": "48d4324c-130b-4d77-8606-fce9dfd4a8fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82ebec0b-bf02-445b-8d51-304840182806"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12775,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c716ad56-bb5c-47ca-9b14-cfee79d4f12b",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "file": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e8650227-753f-49c0-8c37-f244dc45db1f",
          "title": "Checkboxes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check and uncheck each checkbox",
              "fullTitle": "Checkboxes check and uncheck each checkbox",
              "timedOut": null,
              "duration": 7520,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/checkboxes');\n// Step 2: Locate all checkboxes (assume input[type=\"checkbox\"] is used)\ncy.get('input[type=\"checkbox\"]').each($checkbox => {\n  // Step 3: Check the checkbox\n  cy.wrap($checkbox).check().should('be.checked');\n  // Step 4: Uncheck the checkbox\n  cy.wrap($checkbox).uncheck().should('not.be.checked');\n});",
              "err": {},
              "uuid": "56412f3c-04ea-4781-9b8c-f20d3e9ebb40",
              "parentUUID": "e8650227-753f-49c0-8c37-f244dc45db1f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "56412f3c-04ea-4781-9b8c-f20d3e9ebb40"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7520,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c0ae7b6a-c472-4182-9e8b-964b55dfc1a3",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxPOM.cy.js",
      "file": "cypress\\e2e\\checkboxPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "88df7504-2cdb-4063-9f11-d7ad190a0bf2",
          "title": "Checkboxes Test with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should check the first checkbox and uncheck the second",
              "fullTitle": "Checkboxes Test with POM Should check the first checkbox and uncheck the second",
              "timedOut": null,
              "duration": 9778,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "checkboxPage.checkFirstBox();\ncheckboxPage.uncheckSecondBox();\ncheckboxPage.validateCheckboxState([true, false]); // Validate both checkboxes",
              "err": {},
              "uuid": "e43e141d-d7e5-4ad0-8119-5fbf19091758",
              "parentUUID": "88df7504-2cdb-4063-9f11-d7ad190a0bf2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e43e141d-d7e5-4ad0-8119-5fbf19091758"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9778,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a6961e0d-4f61-46da-8930-76880c5a115b",
      "title": "",
      "fullFile": "cypress\\e2e\\contextmenuPOM.cy.js",
      "file": "cypress\\e2e\\contextmenuPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a0475152-e20c-4d83-a18c-c049b57de694",
          "title": "Context Menu Interaction Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should right click the box and validate the alert message",
              "fullTitle": "Context Menu Interaction Test Should right click the box and validate the alert message",
              "timedOut": null,
              "duration": 4279,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contextMenuPage.rightClickBox();\n//cy.get('a[target=\"_blank\"]').invoke('removeAttr', 'target').click();\ncontextMenuPage.handleAlert('You selected a context menu');",
              "err": {},
              "uuid": "62dfcb1a-a759-43c1-b82e-ecb98e56f568",
              "parentUUID": "a0475152-e20c-4d83-a18c-c049b57de694",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62dfcb1a-a759-43c1-b82e-ecb98e56f568"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4279,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bf8abef4-cf6f-4b5c-8cef-a41d4b0c624b",
      "title": "",
      "fullFile": "cypress\\e2e\\dataTypes.cy.js",
      "file": "cypress\\e2e\\dataTypes.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5d9a6f86-3e80-4f5f-aaf6-ac0279c0c2b2",
          "title": "datatypes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "arraydatatype",
              "fullTitle": "datatypes arraydatatype",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let numbers = [1, 2, 3, 4, 5];\nlet sum = 0;\nfor (let i = 0; i < numbers.length; i++) {\n  sum += numbers[i];\n  cy.log(\"Sum of the numbers is:\", sum);\n}",
              "err": {},
              "uuid": "ee7b21b8-cdf4-4cca-af0c-e62c4574dd05",
              "parentUUID": "5d9a6f86-3e80-4f5f-aaf6-ac0279c0c2b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ee7b21b8-cdf4-4cca-af0c-e62c4574dd05"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 128,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "be57c9f5-9fef-4362-b701-4d8c2ee3eeba",
      "title": "",
      "fullFile": "cypress\\e2e\\declareVariables.cy.js",
      "file": "cypress\\e2e\\declareVariables.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "285d0a4a-7179-4d01-9dee-5470fe33f1d7",
          "title": "variabledeclaration",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "variablelet",
              "fullTitle": "variabledeclaration variablelet",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let b = 2;\nb = 3;\ncy.log(b);",
              "err": {},
              "uuid": "960b75d4-7566-4e75-bfb1-6e66b446bff5",
              "parentUUID": "285d0a4a-7179-4d01-9dee-5470fe33f1d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "variableconst",
              "fullTitle": "variabledeclaration variableconst",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const c = 3;\nc = 4; //throws Error",
              "err": {},
              "uuid": "c7fa0ffa-90b7-410f-b7f0-b3dd91259778",
              "parentUUID": "285d0a4a-7179-4d01-9dee-5470fe33f1d7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "960b75d4-7566-4e75-bfb1-6e66b446bff5"
          ],
          "failures": [],
          "pending": [
            "c7fa0ffa-90b7-410f-b7f0-b3dd91259778"
          ],
          "skipped": [],
          "duration": 32,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e39e1d91-84dd-42cb-bb35-7bd58687a7f2",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "file": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "830eb341-f6c0-4e8b-9935-d7b1149b3e96",
          "title": "Delete a test note and validate cleanup",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deletes a note and confirms deletion",
              "fullTitle": "Delete a test note and validate cleanup Deletes a note and confirms deletion",
              "timedOut": null,
              "duration": 2690,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1: DELETE /notes/{id}\ncy.request({\n  method: 'DELETE',\n  url: `${baseUrl}/${noteId}`,\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Step 2: Confirm status 204\n  expect(response.status).to.eq(200);\n});\n// Step 3: GET /notes and confirm note is gone\ncy.request({\n  method: 'GET',\n  url: baseUrl,\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  //  //Validate the noteId no longer exists in the list\n  // const notes = response.body\n  // const found = notes.find(note => note.id === noteId)\n  // expect(found).to.be.undefined\n});",
              "err": {},
              "uuid": "e1029aa4-d8c1-4f7b-9067-02ffd9035b52",
              "parentUUID": "830eb341-f6c0-4e8b-9935-d7b1149b3e96",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1029aa4-d8c1-4f7b-9067-02ffd9035b52"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2690,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "368b6764-65b1-41ae-9f3f-af02fd6392f8",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "file": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Delete NotesAPI",
          "fullTitle": "Delete NotesAPI",
          "timedOut": null,
          "duration": 0,
          "state": "pending",
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": true,
          "context": null,
          "code": "cy.get('@token').then(token => {\n  cy.get('@noteId').then(noteId => {\n    cy.request({\n      method: 'DELETE',\n      url: `https://practice.expandtesting.com/notes/api/notes/${noteId}`,\n      headers: {\n        'x-auth-token': token\n      },\n      body: noteData\n    }).then(res => {\n      cy.log(res);\n      expect(res.status).to.eq(200);\n      expect(res.body.message).to.eq('Note successfully deleted');\n    });\n  });\n});",
          "err": {},
          "uuid": "ad465446-bbdc-431d-85e8-02d158006000",
          "parentUUID": "368b6764-65b1-41ae-9f3f-af02fd6392f8",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [],
      "pending": [
        "ad465446-bbdc-431d-85e8-02d158006000"
      ],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "84914fa7-e2e7-4455-9c17-083c929ac2e5",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdownPOM.cy.js",
      "file": "cypress\\e2e\\dropdownPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "13c1276d-fbb6-43f0-b684-9493b6d08708",
          "title": "Dropdown Handling Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should select Option 1 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 1 and validate",
              "timedOut": null,
              "duration": 6869,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 1');\ndropdownPage.getSelectedOption().should('have.text', 'Option 1');",
              "err": {},
              "uuid": "ce9ba263-0210-41de-82fd-41028a4fc528",
              "parentUUID": "13c1276d-fbb6-43f0-b684-9493b6d08708",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should select Option 2 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 2 and validate",
              "timedOut": null,
              "duration": 5086,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 2');\ndropdownPage.getSelectedOption().should('have.text', 'Option 2');",
              "err": {},
              "uuid": "3cb47ef9-f77e-41bf-976a-e15b0f8ca63c",
              "parentUUID": "13c1276d-fbb6-43f0-b684-9493b6d08708",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce9ba263-0210-41de-82fd-41028a4fc528",
            "3cb47ef9-f77e-41bf-976a-e15b0f8ca63c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11955,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "246cf8c3-3c6e-4f63-9aca-3de87e39385a",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdown_2b.cy.js",
      "file": "cypress\\e2e\\dropdown_2b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7e528cfe-6ff5-408c-b517-aec30e920b2e",
          "title": "Select \"India\" from the dropdown",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "select India from the country dropdown",
              "fullTitle": "Select \"India\" from the dropdown select India from the country dropdown",
              "timedOut": null,
              "duration": 5333,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit the dropdown page\ncy.visit('https://practice.expandtesting.com/dropdown');\n// Select \"India\" from the dropdown by visible text\ncy.get('#country').select('India').should('have.value', 'IN');",
              "err": {},
              "uuid": "2d1ef7cb-2292-4a26-af5e-2e135a1dedc8",
              "parentUUID": "7e528cfe-6ff5-408c-b517-aec30e920b2e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2d1ef7cb-2292-4a26-af5e-2e135a1dedc8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5333,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6f325709-15a5-4699-86f5-79a6b430fc4d",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "file": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c5731d5c-87fd-4ab3-92cd-3a2a29fd9f0b",
          "title": "Log browser name and CPU usage on dynamic-table",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs browser and CPU usage",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Logs browser and CPU usage",
              "timedOut": null,
              "duration": 6496,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get('table.table-striped tbody tr').each(($row, index) => {\n  const browserName = $row.find('td').eq(0).text();\n  const cpuUsage = $row.find('td').eq(2).text();\n  cy.get('table.table-striped tbody tr').should('have.length.at.least', 1);\n  cy.log(`Row ${index + 1}: Browser = ${browserName}, CPU Usage = ${cpuUsage}`);\n  expect(browserName).to.not.be.empty;\n  expect(cpuUsage).to.not.be.empty;\n});",
              "err": {},
              "uuid": "cc584efb-2175-4f98-b393-3e9da7980bdc",
              "parentUUID": "c5731d5c-87fd-4ab3-92cd-3a2a29fd9f0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "timedOut": null,
              "duration": 2637,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\nlet cpuAbove15Found = false;\ncy.get(\"table.table-striped tbody tr\").each(($row, rowIndex, $rows) => {\n  const $cells = $row.find('td');\n  const browserName = $cells.eq(0).text().trim(); // 1. Assert browser name is not empty\n  expect(browserName).to.not.be.empty;\n  $cells.each((i, td) => {\n    const cellText = td.innerText;\n    expect(cellText).to.not.be.empty; // 2. Assert no cell is empty\n  });\n  const cpuCell = [...$cells].find(td => td.innerText.includes('%')); // 3. Check if any CPU usage > 15%\n  if (cpuCell) {\n    const cpuValue = parseFloat(cpuCell.innerText.replace('%', ''));\n    if (cpuValue > 15) {\n      cpuAbove15Found = true;\n    }\n  }\n}).then(() => {\n  expect(cpuAbove15Found, \"CPU Usage above 15 not found\").to.be.false; // Final assertion after looping all rows\n});",
              "err": {},
              "uuid": "43f10044-0237-4be3-9e0a-04da528ebd2e",
              "parentUUID": "c5731d5c-87fd-4ab3-92cd-3a2a29fd9f0b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc584efb-2175-4f98-b393-3e9da7980bdc",
            "43f10044-0237-4be3-9e0a-04da528ebd2e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9133,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cdc102f8-4502-45f7-ac78-b2bfd4de3ff5",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "file": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "431e968b-726a-43a6-b19b-6113ec8e40a1",
          "title": "Dynamic Content Validation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should detect dynamic content change after refresh",
              "fullTitle": "Dynamic Content Validation should detect dynamic content change after refresh",
              "timedOut": null,
              "duration": 9035,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dynamic-content');\n// Step 1: Get initial content\nlet firstLoadContent = [];\n_dynamicpage.default.getTextBlocks().then($blocks => {\n  $blocks.each((index, el) => {\n    firstLoadContent.push(el.innerText.trim());\n  });\n  // Step 2: Refresh the page\n  cy.reload();\n  // Step 3: Get new content\n  let secondLoadContent = [];\n  _dynamicpage.default.getTextBlocks().then($newBlocks => {\n    $newBlocks.each((index, el) => {\n      secondLoadContent.push(el.innerText.trim());\n    });\n    // Step 4: Compare the content\n    _dynamicpage.default.compareContent(firstLoadContent, secondLoadContent);\n  });\n});",
              "err": {},
              "uuid": "50f65d61-b57a-47c4-a9ab-8779072aede7",
              "parentUUID": "431e968b-726a-43a6-b19b-6113ec8e40a1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50f65d61-b57a-47c4-a9ab-8779072aede7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9035,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "850fb29e-6f00-4917-9d72-b61e30cfba77",
      "title": "",
      "fullFile": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "file": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "abb0286e-cd0d-4c01-be4d-71d9430fc208",
          "title": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Find the column index for \"Memory\"",
              "fullTitle": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage Find the column index for \"Memory\"",
              "timedOut": null,
              "duration": 7247,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table.table-striped thead tr th\").then($tr => {\n  let memoryColumnIndex = -1;\n  $tr.each((index, th) => {\n    const tr = th.innerText;\n    if (tr == 'Memory') {\n      memoryColumnIndex = index;\n    }\n  });\n  cy.log('Memory column index: ', memoryColumnIndex);\n  cy.get(\"table.table-striped tbody tr\").each($trow => {\n    const $cells = $trow.find('td');\n    const browserName = $cells.eq(0).text().trim();\n    const memory = $cells.eq(memoryColumnIndex).text();\n    cy.log(browserName, ' Memory:', memory);\n  });\n});",
              "err": {},
              "uuid": "d58fb3dd-6ec1-4109-afd2-f4da202f8765",
              "parentUUID": "abb0286e-cd0d-4c01-be4d-71d9430fc208",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d58fb3dd-6ec1-4109-afd2-f4da202f8765"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7247,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a878dc59-c334-4422-854b-cebb07d8d894",
      "title": "",
      "fullFile": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "file": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dbdf11d8-8a04-4307-9056-b2d9523aa854",
          "title": "Fetch All Notes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new note",
              "fullTitle": "Fetch All Notes create a new note",
              "timedOut": null,
              "duration": 2554,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 2: Create a note\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: noteTitle,\n    description: noteDescription,\n    category: 'Personal'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  createdNoteId = response.body.data.id;\n  expect(createdNoteId).to.exist;\n});",
              "err": {},
              "uuid": "0adfda5c-b952-4f3c-a521-a47065b95835",
              "parentUUID": "dbdf11d8-8a04-4307-9056-b2d9523aa854",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch all notes and contain the newly created note",
              "fullTitle": "Fetch All Notes should fetch all notes and contain the newly created note",
              "timedOut": null,
              "duration": 706,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 3: Fetch all notes\ncy.request({\n  method: 'GET',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.be.an('array');\n  // Step 4: Assert the created note exists in the array\n  const found = response.body.data.find(note =>\n  //note.id === createdNoteId && note.title === noteTitle\n  note.title === noteTitle && note.description === noteDescription);\n  expect(found, 'Newly created note should be in the list').to.exist;\n});",
              "err": {},
              "uuid": "7aaa06af-17ca-4beb-83c5-9588924ddd2c",
              "parentUUID": "dbdf11d8-8a04-4307-9056-b2d9523aa854",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0adfda5c-b952-4f3c-a521-a47065b95835",
            "7aaa06af-17ca-4beb-83c5-9588924ddd2c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3260,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d3a9dfd8-701f-4455-9a51-6985f544bcd5",
      "title": "",
      "fullFile": "cypress\\e2e\\functionDeclaration.cy.js",
      "file": "cypress\\e2e\\functionDeclaration.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5594636a-165d-4b1c-90c4-c01a0f5892a6",
          "title": "Logging Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs the welcome message",
              "fullTitle": "Logging Example Logs the welcome message",
              "timedOut": null,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "logWelcome();",
              "err": {},
              "uuid": "8fbf367c-3c9d-49b9-917d-a712051b8a04",
              "parentUUID": "5594636a-165d-4b1c-90c4-c01a0f5892a6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8fbf367c-3c9d-49b9-917d-a712051b8a04"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 31,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a7085548-0c1e-4387-8d5d-a5f0bb3de82c",
      "title": "",
      "fullFile": "cypress\\e2e\\functionExpression.cy.js",
      "file": "cypress\\e2e\\functionExpression.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2d8983a5-fc81-4a53-bffa-c697ed7af210",
          "title": "function expression",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs user email",
              "fullTitle": "function expression Logs user email",
              "timedOut": null,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const printUserEmail = function (email) {\n  cy.log(` User email: ${email}`);\n};\nprintUserEmail('cypresstesting@com');",
              "err": {},
              "uuid": "e45642fd-04ff-4972-8a32-ead4e96e5047",
              "parentUUID": "2d8983a5-fc81-4a53-bffa-c697ed7af210",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e45642fd-04ff-4972-8a32-ead4e96e5047"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "803733fc-3df5-40fb-b7ac-1511e20753d5",
      "title": "",
      "fullFile": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "file": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "45775050-dc71-4b25-84ea-3f3793d3bfd8",
          "title": "OddorEven",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "OddorEven",
              "fullTitle": "OddorEven OddorEven",
              "timedOut": null,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "function evenorodd(number) {\n  if (number % 2 === 0) {\n    cy.log(\"Even\");\n  } else {\n    cy.log(\"Odd\");\n  }\n}\nlet s = evenorodd(6);\ncy.log(s);",
              "err": {},
              "uuid": "bc55a9b3-c7df-46cf-aacc-d56d3e9b079c",
              "parentUUID": "45775050-dc71-4b25-84ea-3f3793d3bfd8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bc55a9b3-c7df-46cf-aacc-d56d3e9b079c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 30,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e3e0ff7c-bbf2-436d-b984-6d0e909aa135",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "62d815f7-07a5-46e1-88ae-c6d5d537ed2f",
          "title": "Login Functinality with Negative scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "invalid username",
              "fullTitle": "Login Functinality with Negative scenarios invalid username",
              "timedOut": null,
              "duration": 10740,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('testAbcd');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid username\ncy.get('#flash').should('be.visible').and('contain.text', 'Your username is invalid!');",
              "err": {},
              "uuid": "0e5cc3f8-79a9-4ddc-8d30-d5918510c923",
              "parentUUID": "62d815f7-07a5-46e1-88ae-c6d5d537ed2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "invalid password",
              "fullTitle": "Login Functinality with Negative scenarios invalid password",
              "timedOut": null,
              "duration": 7927,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('practice');\ncy.get('#password').type('cdeef!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid password\ncy.get('#flash').should('be.visible').and('contain.text', 'Your password is invalid!');",
              "err": {},
              "uuid": "796ef4b1-2a94-43d0-bb98-49a001695f11",
              "parentUUID": "62d815f7-07a5-46e1-88ae-c6d5d537ed2f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0e5cc3f8-79a9-4ddc-8d30-d5918510c923",
            "796ef4b1-2a94-43d0-bb98-49a001695f11"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18667,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c6a71d6d-1683-408d-afc1-8e9e75b4161d",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a64ef622-5223-4551-8b58-7f6b5674fe56",
          "title": "Login Functionality Positive scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login in to application with valid credentials",
              "fullTitle": "Login Functionality Positive scenarios Login in to application with valid credentials",
              "timedOut": null,
              "duration": 9395,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n//Assert URL\ncy.url().should('include', '/secure');\n//Assert Success Message\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n//Assert Logout Button\ncy.get('a.button.secondary.radius').should('be.visible').and('contain.text', 'Logout');",
              "err": {},
              "uuid": "5f7686d5-dad5-42de-92bd-37e8baa9fc26",
              "parentUUID": "a64ef622-5223-4551-8b58-7f6b5674fe56",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5f7686d5-dad5-42de-92bd-37e8baa9fc26"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9395,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3fa5a88b-9311-4cf7-8809-743522ba5787",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandExtractToken.cy.js",
      "file": "cypress\\e2e\\loginandExtractToken.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "95a7faf1-86c9-4a19-833f-6d131e560c9d",
          "title": "User Login API and Extract Token",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "log in and extract the token",
              "fullTitle": "User Login API and Extract Token log in and extract the token",
              "timedOut": null,
              "duration": 1097,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/login',\n  body: apidata,\n  failOnStatusCode: false\n}).then(res => {\n  cy.log(res);\n  // Step 3: Assert response status\n  expect(res.status).to.eq(200);\n  // Step 2: Extract and validate token\n  //expect(response.body).to.have.property('token');\n  cy.log(res.body.message);\n  expect(res.body.message).to.eq(\"Login successful\");\n  const token = res.body.data.token;\n  expect(res.body.data.token).to.not.be.null;\n  //cy.log(authToken)\n  // Save token to alias for reuse\n  cy.wrap(token).as('authToken');\n});",
              "err": {},
              "uuid": "13c2a7d2-ec4e-40dc-b612-a3e378b376b8",
              "parentUUID": "95a7faf1-86c9-4a19-833f-6d131e560c9d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "13c2a7d2-ec4e-40dc-b612-a3e378b376b8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1097,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8f8a5514-437a-4dee-826c-ae75cbd3892f",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "file": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "183470db-af0f-43df-b5da-1f6ef2ef1f36",
          "title": "loginApp",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login to an application with valid credentials",
              "fullTitle": "loginApp login to an application with valid credentials",
              "timedOut": null,
              "duration": 11179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\n//cy.get('Username: ').contains('practice')\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();",
              "err": {},
              "uuid": "251c8e75-f003-435e-945a-fb3cf401fc46",
              "parentUUID": "183470db-af0f-43df-b5da-1f6ef2ef1f36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "logout to an application",
              "fullTitle": "loginApp logout to an application",
              "timedOut": null,
              "duration": 12955,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\ncy.get('i[class=\"icon-2x icon-signout\"]').click();",
              "err": {},
              "uuid": "b1e9fcc5-65f0-4cf5-8ba4-1afea6e6c163",
              "parentUUID": "183470db-af0f-43df-b5da-1f6ef2ef1f36",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "251c8e75-f003-435e-945a-fb3cf401fc46",
            "b1e9fcc5-65f0-4cf5-8ba4-1afea6e6c163"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24134,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ec289934-54b3-40ba-8e0d-31491ed90448",
      "title": "",
      "fullFile": "cypress\\e2e\\loginpagePOM.cy.js",
      "file": "cypress\\e2e\\loginpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f355a558-9920-45d2-b777-2073f7c5464c",
          "title": "Login Page Testcase with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user should login and redirect to secure area",
              "fullTitle": "Login Page Testcase with POM user should login and redirect to secure area",
              "timedOut": null,
              "duration": 9907,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('practice');\nloginPage.enterPassword('SuperSecretPassword!');\nloginPage.clickLogin();\ncy.url().should('include', '/secure');\ncy.contains('You logged into a secure area!').should('be.visible');",
              "err": {},
              "uuid": "d9e1d183-f0a7-46f3-acf9-59bb10f82c6d",
              "parentUUID": "f355a558-9920-45d2-b777-2073f7c5464c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid user login should show error message",
              "fullTitle": "Login Page Testcase with POM Invalid user login should show error message",
              "timedOut": null,
              "duration": 11915,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('abdcdef');\nloginPage.enterPassword('dfdfdfd');\nloginPage.clickLogin();\ncy.contains('Your username is invalid!').should('be.visible');\ncy.url().should('include', '/login');",
              "err": {},
              "uuid": "016a8be7-2f8b-479d-95c2-080227f56cf3",
              "parentUUID": "f355a558-9920-45d2-b777-2073f7c5464c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d9e1d183-f0a7-46f3-acf9-59bb10f82c6d",
            "016a8be7-2f8b-479d-95c2-080227f56cf3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21822,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7fbcad62-3775-4029-8a9b-3069fb147b74",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "file": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2146442c-072f-4394-80a3-4836be1c2b33",
          "title": "Login Application",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Log in with valid credentials",
              "fullTitle": "Login Application Log in with valid credentials",
              "timedOut": null,
              "duration": 8850,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login('practice', 'SuperSecretPassword!');\ncy.url().should('include', '/secure');",
              "err": {},
              "uuid": "da75e8c5-549c-45a4-b8a1-79763cae416c",
              "parentUUID": "2146442c-072f-4394-80a3-4836be1c2b33",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "da75e8c5-549c-45a4-b8a1-79763cae416c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8850,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5eb8be4d-0a70-47eb-860e-0addda03ee77",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "file": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "05ee6e03-9334-4fb8-bb7b-224c64263672",
          "title": "Login with fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs in using data from user.json",
              "fullTitle": "Login with fixture data Logs in using data from user.json",
              "timedOut": null,
              "duration": 8958,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\n// Use fixture data to fill in login form\ncy.get('#username').type(this.userData.username);\ncy.get('#password').type(this.userData.password);\ncy.get('button[type=\"submit\"]').click();\n// Assertion \ncy.url().should('include', '/secure');\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "df1a85bd-07d0-427c-9418-253ab39f1ed8",
              "parentUUID": "05ee6e03-9334-4fb8-bb7b-224c64263672",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "df1a85bd-07d0-427c-9418-253ab39f1ed8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8958,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8d527e9e-825f-474f-8fc0-ead7b4b84e16",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "file": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8a469b7c-b7d6-4a37-b3ed-97cc0634a5c0",
          "title": "Login using fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login with form data from JSON file",
              "fullTitle": "Login using fixture data Login with form data from JSON file",
              "timedOut": null,
              "duration": 10329,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Load fixture\ncy.fixture('formData').then(data => {\n  cy.visit('https://practice.expandtesting.com/login');\n  // Fill in the form\n  cy.get('#username').type(data.username);\n  cy.get('#password').type(data.password);\n  cy.get('button[type=\"submit\"]').click();\n  // Validate login success\n  cy.url().should('include', '/secure');\n  cy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n});",
              "err": {},
              "uuid": "6d5216a5-1383-4104-8d8b-554f56e831f6",
              "parentUUID": "8a469b7c-b7d6-4a37-b3ed-97cc0634a5c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d5216a5-1383-4104-8d8b-554f56e831f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10329,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "30a0f6ac-d155-4730-a4eb-87c06b284ce9",
      "title": "",
      "fullFile": "cypress\\e2e\\radiobutton_2c.cy.js",
      "file": "cypress\\e2e\\radiobutton_2c.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "24f6b0cb-5ae4-4bc9-8239-27ba302319e0",
          "title": "Select Blue radio button",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select the Blue radio button",
              "fullTitle": "Select Blue radio button Select the Blue radio button",
              "timedOut": null,
              "duration": 7363,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/radio-buttons');\n//blue radio button\ncy.get('input#blue').check().should('be.checked');",
              "err": {},
              "uuid": "dc61d27f-292c-412c-8771-82b905bdff3e",
              "parentUUID": "24f6b0cb-5ae4-4bc9-8239-27ba302319e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc61d27f-292c-412c-8771-82b905bdff3e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7363,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0bd11730-958d-4fa7-a02e-f9059caf0d23",
      "title": "",
      "fullFile": "cypress\\e2e\\registernewuserAPI.cy.js",
      "file": "cypress\\e2e\\registernewuserAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "31730949-762e-40df-9053-8d3525bb8097",
          "title": "Register New User using API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new user",
              "fullTitle": "Register New User using API create a new user",
              "timedOut": null,
              "duration": 1609,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//const timestamp = Date.now()\nconst apidata = {\n  name: \"QAtester30\",\n  email: \"sssf29@abcd.com\",\n  password: \"QAPassword29\"\n};\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/register',\n  body: apidata,\n  failOnStatusCode: false // allows manual status check\n}).then(res => {\n  cy.log(res);\n  // Step 2: Assert response status\n  expect(res.status).to.eq(201);\n  // Step 3: Validate success message\n  expect(res.body.message).to.eq('User account created successfully');\n});",
              "err": {},
              "uuid": "a513eb7c-a503-4540-b757-6f541d7c747e",
              "parentUUID": "31730949-762e-40df-9053-8d3525bb8097",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a513eb7c-a503-4540-b757-6f541d7c747e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1609,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b87875e4-c86d-44fd-beb2-324d944027be",
      "title": "",
      "fullFile": "cypress\\e2e\\registrationForm.cy.js",
      "file": "cypress\\e2e\\registrationForm.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "38620334-d80a-4dc7-bd31-0af5a9540136",
          "title": "Registration Form Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": " Registration Page",
              "fullTitle": "Registration Form Tests  Registration Page",
              "timedOut": null,
              "duration": 12870,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('QATest27');\ncy.get('#password').type('QATest26');\n//cy.get('input#confirmPassword', { timeout: 10000 }).should('be.visible').type('test1234');\ncy.get('#confirmPassword', {\n  timeout: 10000\n}).should('be.visible').type('QATest26');\ncy.get('button[type=submit]').click();\n// Redirect to login and show success message\ncy.url().should('include', '/login');\ncy.get('#flash').should('be.visible').and('contain.text', 'Successfully registered, you can log in now.');",
              "err": {},
              "uuid": "138483e3-59b3-4598-8749-e4cc9d0d7935",
              "parentUUID": "38620334-d80a-4dc7-bd31-0af5a9540136",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "username validation",
              "fullTitle": "Registration Form Tests username validation",
              "timedOut": null,
              "duration": 8406,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#password').type('ValidPass');\ncy.get('#confirmPassword').type('ValidPass');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "9a80c5f4-5ec2-40ac-a3a1-d9c83bda421d",
              "parentUUID": "38620334-d80a-4dc7-bd31-0af5a9540136",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Password validation",
              "fullTitle": "Registration Form Tests Missing Password validation",
              "timedOut": null,
              "duration": 5715,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#confirmPassword').type('test123');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "24f66ed6-93f7-4aa1-8a4b-19561d5a65f2",
              "parentUUID": "38620334-d80a-4dc7-bd31-0af5a9540136",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Non-matching passwords",
              "fullTitle": "Registration Form Tests Non-matching passwords",
              "timedOut": null,
              "duration": 5076,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#password').type('test123');\ncy.get('#confirmPassword').type('Mismatch123!');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'Passwords do not match.');",
              "err": {},
              "uuid": "a5fbddef-9d3a-4778-bd38-b9eae8228702",
              "parentUUID": "38620334-d80a-4dc7-bd31-0af5a9540136",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "138483e3-59b3-4598-8749-e4cc9d0d7935",
            "9a80c5f4-5ec2-40ac-a3a1-d9c83bda421d",
            "24f66ed6-93f7-4aa1-8a4b-19561d5a65f2",
            "a5fbddef-9d3a-4778-bd38-b9eae8228702"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32067,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b9ca5686-e28a-4a00-82ae-2ce4d5a87131",
      "title": "",
      "fullFile": "cypress\\e2e\\screateNoteAPI.cy.js",
      "file": "cypress\\e2e\\screateNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1ea9afb9-3c76-4fa6-a189-8ca2ffd2b602",
          "title": "Create a Note",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a note and return an ID",
              "fullTitle": "Create a Note create a note and return an ID",
              "timedOut": null,
              "duration": 1322,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: 'Test Note',\n    description: 'This is a test note created through API testing.',\n    category: 'Work'\n  }\n}).then(response => {\n  console.log('Response Body:', response.body);\n  cy.log(JSON.stringify(response.body));\n  // Basic response check\n  expect(response.status).to.eq(200);\n  // Adjust according to the actual structure\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.have.property('id');\n  expect(response.body.data.title).to.eq('Test Note');\n});",
              "err": {},
              "uuid": "539a0018-dbc3-4e3a-8dfd-616788d52f9a",
              "parentUUID": "1ea9afb9-3c76-4fa6-a189-8ca2ffd2b602",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "539a0018-dbc3-4e3a-8dfd-616788d52f9a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1322,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1795a74b-8d33-4c56-855e-7a52ec37935a",
      "title": "",
      "fullFile": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "file": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "scroll in an element",
          "fullTitle": "scroll in an element",
          "timedOut": null,
          "duration": 4055,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/scrollbars\");\n//scroll in to an element\n//cy.get(\"[id='search-input']\").type(\"scrollbars\")  \ncy.get('[style=\"height:150px;overflow-y: scroll;width:300px;overflow-x:scroll\"]').click();\ncy.get('#hidingButton').scrollIntoView().click();",
          "err": {},
          "uuid": "6678e8a0-9be9-43e8-8fbd-a4ea47a3594d",
          "parentUUID": "1795a74b-8d33-4c56-855e-7a52ec37935a",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Drag and drop",
          "fullTitle": "Drag and drop",
          "timedOut": null,
          "duration": 3053,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/drag-and-drop\");\n// Drag Box A and drop it on Box B\ncy.get('#column-a').drag('#column-b');\n// Optional: assert that they’ve swapped\ncy.get('#column-a header').should('have.text', 'B');\ncy.get('#column-b header').should('have.text', 'A');",
          "err": {},
          "uuid": "50d89e88-7466-44eb-9f00-56fb2a8ddaa6",
          "parentUUID": "1795a74b-8d33-4c56-855e-7a52ec37935a",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "6678e8a0-9be9-43e8-8fbd-a4ea47a3594d",
        "50d89e88-7466-44eb-9f00-56fb2a8ddaa6"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 7108,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "3e73452c-f72c-4c4b-b4a5-2a0a7cd6c3ea",
      "title": "",
      "fullFile": "cypress\\e2e\\securePageTestPom.cy.js",
      "file": "cypress\\e2e\\securePageTestPom.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ec95e713-889b-4fcd-9eff-21f29687e9b1",
          "title": "secure Page Testcase with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user should login and redirect to secure area",
              "fullTitle": "secure Page Testcase with POM user should login and redirect to secure area",
              "timedOut": null,
              "duration": 7492,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('practice');\nloginPage.enterPassword('SuperSecretPassword!');\nloginPage.clickLogin();\nsecurePage.isAtSecurePage();\nsecurePage.getSuccessAlert().should('contain.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "5d8a6b9a-25a3-4110-9eae-3276c75cccac",
              "parentUUID": "ec95e713-889b-4fcd-9eff-21f29687e9b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User should be able to logout successfully",
              "fullTitle": "secure Page Testcase with POM User should be able to logout successfully",
              "timedOut": null,
              "duration": 10170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('practice');\nloginPage.enterPassword('SuperSecretPassword!');\nloginPage.clickLogin();\nsecurePage.logout();\ncy.url().should('include', '/login');\ncy.get('#flash, .flash.info').should('contain.text', 'You logged out of the secure area!'); // Adjust based on actual message",
              "err": {},
              "uuid": "425abdd1-5d82-41f1-88c1-47df7dcadd75",
              "parentUUID": "ec95e713-889b-4fcd-9eff-21f29687e9b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d8a6b9a-25a3-4110-9eae-3276c75cccac",
            "425abdd1-5d82-41f1-88c1-47df7dcadd75"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17662,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f33c0599-2a9c-4b70-bff5-2359d6c923d2",
      "title": "",
      "fullFile": "cypress\\e2e\\usePrevSubject.cy.js",
      "file": "cypress\\e2e\\usePrevSubject.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0811e1ad-dbef-4333-b612-b299b7187225",
          "title": "usePrevSubject",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login using Fillinput",
              "fullTitle": "usePrevSubject Login using Fillinput",
              "timedOut": null,
              "duration": 8123,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Use previous subject\ncy.get('#username').fillinput('practice');\ncy.get('#password').fillinput('SuperSecretPassword!');\ncy.get('#login > .btn').click();\ncy.get('b').should('have.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "b82daa14-f98e-4d9a-84f8-9b95440ee876",
              "parentUUID": "0811e1ad-dbef-4333-b612-b299b7187225",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b82daa14-f98e-4d9a-84f8-9b95440ee876"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8123,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9724e06b-4347-46ea-83bd-5476a88b268e",
      "title": "",
      "fullFile": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "file": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7d580421-5800-4479-a6fb-b1c0e199eac2",
          "title": "Validate Chrome CPU usage matches the label",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "fullTitle": "Validate Chrome CPU usage matches the label Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "timedOut": null,
              "duration": 3459,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\n// Wait until Chrome row appears\ncy.get(\"table.table-striped tbody tr\").each($tr => {\n  const $td = $tr.find('td');\n  const browserName = $td.eq(0).text().trim();\n  if (browserName == 'Chrome') {\n    var _find;\n    const cpuUsageFromTable = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText.trim();\n    cy.get('#chrome-cpu').invoke('text').then(fullText => {\n      const match = fullText.match(/(\\d+(\\.\\d+)?%)/);\n      const cpuUsageFromCard = match ? match[0] : null;\n      expect(cpuUsageFromCard).to.eq(cpuUsageFromTable);\n    });\n  }\n});",
              "err": {},
              "uuid": "f053c49e-88fc-4db4-b717-42fe919f1caa",
              "parentUUID": "7d580421-5800-4479-a6fb-b1c0e199eac2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f053c49e-88fc-4db4-b717-42fe919f1caa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3459,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f9408aa1-6418-4517-a8b3-c4d682080242",
      "title": "",
      "fullFile": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "file": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8434baf7-ea96-4b02-8b6d-147f944fc9a4",
          "title": "Log Each Browsername and its cpu usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "use .each() to log each browser name and its CPU usage.",
              "fullTitle": "Log Each Browsername and its cpu usage use .each() to log each browser name and its CPU usage.",
              "timedOut": null,
              "duration": 3719,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsage = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText;\n  cy.log('Browser Name is ', browsername, 'cpu usage', cpuUsage);\n});",
              "err": {},
              "uuid": "c59ed82b-9ded-406d-9131-8d15a78f3017",
              "parentUUID": "8434baf7-ea96-4b02-8b6d-147f944fc9a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Count how many browsers have CPU usage over 20%.",
              "fullTitle": "Log Each Browsername and its cpu usage Count how many browsers have CPU usage over 20%.",
              "timedOut": null,
              "duration": 3025,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let count = 0;\ncy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find2;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsageText = (_find2 = [...$td].find(td => td.innerText.includes('%'))) === null || _find2 === void 0 ? void 0 : _find2.innerText;\n  if (cpuUsageText) {\n    const cpuValue = parseFloat(cpuUsageText.replace('%', ''));\n    if (cpuValue > 20) {\n      count++;\n    }\n  }\n}).then(() => {\n  cy.log('Total browser count with>20 % is', count);\n});",
              "err": {},
              "uuid": "a1f628f5-5fc5-41bd-b875-f003be698e0f",
              "parentUUID": "8434baf7-ea96-4b02-8b6d-147f944fc9a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c59ed82b-9ded-406d-9131-8d15a78f3017",
            "a1f628f5-5fc5-41bd-b875-f003be698e0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6744,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a1deab7f-06b1-4601-935e-cc1f22e9b5b9",
      "title": "",
      "fullFile": "cypress\\e2e\\LoopNumbers.cy.js",
      "file": "cypress\\e2e\\LoopNumbers.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b3971182-12ef-4556-abcf-230dbec042b1",
          "title": "loop Numbers",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "loop",
              "fullTitle": "loop Numbers loop",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "for (let i = 1; i <= 10; i++) {\n  if (i % 2 === 0) {\n    cy.log(i);\n  }\n}",
              "err": {},
              "uuid": "c51ab8e8-e024-4c5c-b0a1-e63b6126d13b",
              "parentUUID": "b3971182-12ef-4556-abcf-230dbec042b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "c51ab8e8-e024-4c5c-b0a1-e63b6126d13b"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "36ef07cf-7627-42d5-a8ca-e479d7c04737",
      "title": "",
      "fullFile": "cypress\\e2e\\arrowFunction.cy.js",
      "file": "cypress\\e2e\\arrowFunction.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "50f6fdde-b32f-445d-bba2-7413c840e7b6",
          "title": "Multiply three Numbers Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Multiplies three numbers",
              "fullTitle": "Multiply three Numbers Example Multiplies three numbers",
              "timedOut": null,
              "duration": 54,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const multiplyThreeNumbers = (a, b, c) => a * b * c;\nconst result = multiplyThreeNumbers(4, 6, 8);\ncy.log(`The multiplication of three numbers: ${result}`);",
              "err": {},
              "uuid": "180df821-2680-4f49-ab04-24eec92a408f",
              "parentUUID": "50f6fdde-b32f-445d-bba2-7413c840e7b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "180df821-2680-4f49-ab04-24eec92a408f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 54,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2c166e54-d4ec-40c6-8167-cfd14d1441db",
      "title": "",
      "fullFile": "cypress\\e2e\\assertionsExamples.cy.js",
      "file": "cypress\\e2e\\assertionsExamples.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bffd3ef3-0e49-493a-9486-59408556f000",
          "title": "Assertions Page - Cypress Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should assert element existence, visibility, and text content",
              "fullTitle": "Assertions Page - Cypress Tests should assert element existence, visibility, and text content",
              "timedOut": null,
              "duration": 10648,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/#assertions');\n//Assert: Element exists\ncy.get('.btn-warning').should('exist');\n//cy.get('#exist-element') .should('exist');\n// Assert: Element has specific text\ncy.get('.btn-primary').should('have.text', 'Test Cases');\n// Assert: Element is visible\ncy.get('.btn-success').should('be.visible');",
              "err": {},
              "uuid": "9920a9b7-b5ea-46f5-9565-b70f30acce47",
              "parentUUID": "bffd3ef3-0e49-493a-9486-59408556f000",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9920a9b7-b5ea-46f5-9565-b70f30acce47"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10648,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5875e4a0-a274-48e9-94f4-43b0911f567c",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "file": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89c4bc24-d719-4811-a641-219d5f7c21e9",
          "title": "Checkboxes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check and uncheck each checkbox",
              "fullTitle": "Checkboxes check and uncheck each checkbox",
              "timedOut": null,
              "duration": 9154,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/checkboxes');\n// Step 2: Locate all checkboxes (assume input[type=\"checkbox\"] is used)\ncy.get('input[type=\"checkbox\"]').each($checkbox => {\n  // Step 3: Check the checkbox\n  cy.wrap($checkbox).check().should('be.checked');\n  // Step 4: Uncheck the checkbox\n  cy.wrap($checkbox).uncheck().should('not.be.checked');\n});",
              "err": {},
              "uuid": "278fd3ff-991e-41c0-a455-d6bb77a3c99c",
              "parentUUID": "89c4bc24-d719-4811-a641-219d5f7c21e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "278fd3ff-991e-41c0-a455-d6bb77a3c99c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9154,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "28375819-efbb-4331-b903-81b07da1a846",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxPOM.cy.js",
      "file": "cypress\\e2e\\checkboxPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7de96a77-be2f-4299-9b94-de0f30cdd579",
          "title": "Checkboxes Test with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should check the first checkbox and uncheck the second",
              "fullTitle": "Checkboxes Test with POM Should check the first checkbox and uncheck the second",
              "timedOut": null,
              "duration": 4143,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "checkboxPage.checkFirstBox();\ncheckboxPage.uncheckSecondBox();\ncheckboxPage.validateCheckboxState([true, false]); // Validate both checkboxes",
              "err": {},
              "uuid": "7bdba9c4-435d-4972-a84a-81d2f480d53c",
              "parentUUID": "7de96a77-be2f-4299-9b94-de0f30cdd579",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7bdba9c4-435d-4972-a84a-81d2f480d53c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4143,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "abf5a7e7-7eb4-49ed-b2d6-b285c8bb5f19",
      "title": "",
      "fullFile": "cypress\\e2e\\contextmenuPOM.cy.js",
      "file": "cypress\\e2e\\contextmenuPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6d30da63-6677-4a38-aca5-7927beb11043",
          "title": "Context Menu Interaction Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should right click the box and validate the alert message",
              "fullTitle": "Context Menu Interaction Test Should right click the box and validate the alert message",
              "timedOut": null,
              "duration": 3025,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contextMenuPage.rightClickBox();\n//cy.get('a[target=\"_blank\"]').invoke('removeAttr', 'target').click();\ncontextMenuPage.handleAlert('You selected a context menu');",
              "err": {},
              "uuid": "4f1d7148-d281-4288-b8be-1cb2dd33c93b",
              "parentUUID": "6d30da63-6677-4a38-aca5-7927beb11043",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f1d7148-d281-4288-b8be-1cb2dd33c93b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3025,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7bcab895-3b39-4d2b-98ad-2b48b82c0996",
      "title": "",
      "fullFile": "cypress\\e2e\\dataTypes.cy.js",
      "file": "cypress\\e2e\\dataTypes.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "878b4799-bf4a-4473-818e-393d24fe1696",
          "title": "datatypes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "arraydatatype",
              "fullTitle": "datatypes arraydatatype",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let numbers = [1, 2, 3, 4, 5];\nlet sum = 0;\nfor (let i = 0; i < numbers.length; i++) {\n  sum += numbers[i];\n  cy.log(\"Sum of the numbers is:\", sum);\n}",
              "err": {},
              "uuid": "1ba46434-0704-4cfe-a976-6479fcb59857",
              "parentUUID": "878b4799-bf4a-4473-818e-393d24fe1696",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ba46434-0704-4cfe-a976-6479fcb59857"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 71,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e6718093-79b1-412d-b028-5b9cc95b6040",
      "title": "",
      "fullFile": "cypress\\e2e\\declareVariables.cy.js",
      "file": "cypress\\e2e\\declareVariables.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "083077b2-338f-494f-8d77-294223c63d15",
          "title": "variabledeclaration",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "variablelet",
              "fullTitle": "variabledeclaration variablelet",
              "timedOut": null,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let b = 2;\nb = 3;\ncy.log(b);",
              "err": {},
              "uuid": "2c26c7e1-7d89-4667-b33f-ed5d4b2c66f8",
              "parentUUID": "083077b2-338f-494f-8d77-294223c63d15",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "variableconst",
              "fullTitle": "variabledeclaration variableconst",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const c = 3;\nc = 4; //throws Error",
              "err": {},
              "uuid": "26161279-639d-4e7e-8e55-8c641bbd4d9f",
              "parentUUID": "083077b2-338f-494f-8d77-294223c63d15",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c26c7e1-7d89-4667-b33f-ed5d4b2c66f8"
          ],
          "failures": [],
          "pending": [
            "26161279-639d-4e7e-8e55-8c641bbd4d9f"
          ],
          "skipped": [],
          "duration": 27,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c7408c2d-4aca-4843-9ee5-27860392e27b",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "file": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "06b090d2-de39-4718-a0a6-5f75ed63c8b2",
          "title": "Delete a test note and validate cleanup",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deletes a note and confirms deletion",
              "fullTitle": "Delete a test note and validate cleanup Deletes a note and confirms deletion",
              "timedOut": null,
              "duration": 1365,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1: DELETE /notes/{id}\ncy.request({\n  method: 'DELETE',\n  url: `${baseUrl}/${noteId}`,\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Step 2: Confirm status 204\n  expect(response.status).to.eq(200);\n});\n// Step 3: GET /notes and confirm note is gone\ncy.request({\n  method: 'GET',\n  url: baseUrl,\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  //  //Validate the noteId no longer exists in the list\n  // const notes = response.body\n  // const found = notes.find(note => note.id === noteId)\n  // expect(found).to.be.undefined\n});",
              "err": {},
              "uuid": "c2c7380c-1143-4a43-aa84-246b5f1bb57d",
              "parentUUID": "06b090d2-de39-4718-a0a6-5f75ed63c8b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2c7380c-1143-4a43-aa84-246b5f1bb57d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1365,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3fdb2c99-d1ad-4207-aa68-b51101d8d5ba",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "file": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Delete NotesAPI",
          "fullTitle": "Delete NotesAPI",
          "timedOut": null,
          "duration": 0,
          "state": "pending",
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": true,
          "context": null,
          "code": "cy.get('@token').then(token => {\n  cy.get('@noteId').then(noteId => {\n    cy.request({\n      method: 'DELETE',\n      url: `https://practice.expandtesting.com/notes/api/notes/${noteId}`,\n      headers: {\n        'x-auth-token': token\n      },\n      body: noteData\n    }).then(res => {\n      cy.log(res);\n      expect(res.status).to.eq(200);\n      expect(res.body.message).to.eq('Note successfully deleted');\n    });\n  });\n});",
          "err": {},
          "uuid": "0c95f475-66b3-41ac-9418-0a6bc65492b3",
          "parentUUID": "3fdb2c99-d1ad-4207-aa68-b51101d8d5ba",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [],
      "pending": [
        "0c95f475-66b3-41ac-9418-0a6bc65492b3"
      ],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "529a97b5-0e8f-4ed1-ab03-48c63a9489a0",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdownPOM.cy.js",
      "file": "cypress\\e2e\\dropdownPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "667514aa-eb05-453d-8ddb-78cd817e32ac",
          "title": "Dropdown Handling Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should select Option 1 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 1 and validate",
              "timedOut": null,
              "duration": 4202,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 1');\ndropdownPage.getSelectedOption().should('have.text', 'Option 1');",
              "err": {},
              "uuid": "cea2502f-049f-4c33-a3f8-8259ea6f7381",
              "parentUUID": "667514aa-eb05-453d-8ddb-78cd817e32ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should select Option 2 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 2 and validate",
              "timedOut": null,
              "duration": 3405,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 2');\ndropdownPage.getSelectedOption().should('have.text', 'Option 2');",
              "err": {},
              "uuid": "0f65a336-0754-4125-a6c2-939e0c694a9c",
              "parentUUID": "667514aa-eb05-453d-8ddb-78cd817e32ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cea2502f-049f-4c33-a3f8-8259ea6f7381",
            "0f65a336-0754-4125-a6c2-939e0c694a9c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7607,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0f13c8b3-4d89-4162-84e3-48e3d81d0cfe",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdown_2b.cy.js",
      "file": "cypress\\e2e\\dropdown_2b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "78f65c4e-dc36-4620-a0a8-0c98c7b62b99",
          "title": "Select \"India\" from the dropdown",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "select India from the country dropdown",
              "fullTitle": "Select \"India\" from the dropdown select India from the country dropdown",
              "timedOut": null,
              "duration": 3104,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit the dropdown page\ncy.visit('https://practice.expandtesting.com/dropdown');\n// Select \"India\" from the dropdown by visible text\ncy.get('#country').select('India').should('have.value', 'IN');",
              "err": {},
              "uuid": "ad290606-814f-4218-8243-0ed0b0fb6d3f",
              "parentUUID": "78f65c4e-dc36-4620-a0a8-0c98c7b62b99",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad290606-814f-4218-8243-0ed0b0fb6d3f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3104,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "102efed8-2ca9-4597-a19a-230161faef2d",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "file": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9f3621c3-8f20-4136-8564-cca2b3ceba1b",
          "title": "Log browser name and CPU usage on dynamic-table",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs browser and CPU usage",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Logs browser and CPU usage",
              "timedOut": null,
              "duration": 3673,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get('table.table-striped tbody tr').each(($row, index) => {\n  const browserName = $row.find('td').eq(0).text();\n  const cpuUsage = $row.find('td').eq(2).text();\n  cy.get('table.table-striped tbody tr').should('have.length.at.least', 1);\n  cy.log(`Row ${index + 1}: Browser = ${browserName}, CPU Usage = ${cpuUsage}`);\n  expect(browserName).to.not.be.empty;\n  expect(cpuUsage).to.not.be.empty;\n});",
              "err": {},
              "uuid": "1e690418-82b0-4165-8295-2114725e3803",
              "parentUUID": "9f3621c3-8f20-4136-8564-cca2b3ceba1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "timedOut": null,
              "duration": 2710,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\nlet cpuAbove15Found = false;\ncy.get(\"table.table-striped tbody tr\").each(($row, rowIndex, $rows) => {\n  const $cells = $row.find('td');\n  const browserName = $cells.eq(0).text().trim(); // 1. Assert browser name is not empty\n  expect(browserName).to.not.be.empty;\n  $cells.each((i, td) => {\n    const cellText = td.innerText;\n    expect(cellText).to.not.be.empty; // 2. Assert no cell is empty\n  });\n  const cpuCell = [...$cells].find(td => td.innerText.includes('%')); // 3. Check if any CPU usage > 15%\n  if (cpuCell) {\n    const cpuValue = parseFloat(cpuCell.innerText.replace('%', ''));\n    if (cpuValue > 15) {\n      cpuAbove15Found = true;\n    }\n  }\n}).then(() => {\n  expect(cpuAbove15Found, \"CPU Usage above 15 not found\").to.be.false; // Final assertion after looping all rows\n});",
              "err": {},
              "uuid": "48bc9aae-9e5f-4135-9899-575dca5c193b",
              "parentUUID": "9f3621c3-8f20-4136-8564-cca2b3ceba1b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e690418-82b0-4165-8295-2114725e3803",
            "48bc9aae-9e5f-4135-9899-575dca5c193b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6383,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8c63daec-c73a-4d9c-92ec-df2f346ecdac",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "file": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3ca42b3b-cf9d-43c6-87a5-cc307b35ac50",
          "title": "Dynamic Content Validation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should detect dynamic content change after refresh",
              "fullTitle": "Dynamic Content Validation should detect dynamic content change after refresh",
              "timedOut": null,
              "duration": 5694,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dynamic-content');\n// Step 1: Get initial content\nlet firstLoadContent = [];\n_dynamicpage.default.getTextBlocks().then($blocks => {\n  $blocks.each((index, el) => {\n    firstLoadContent.push(el.innerText.trim());\n  });\n  // Step 2: Refresh the page\n  cy.reload();\n  // Step 3: Get new content\n  let secondLoadContent = [];\n  _dynamicpage.default.getTextBlocks().then($newBlocks => {\n    $newBlocks.each((index, el) => {\n      secondLoadContent.push(el.innerText.trim());\n    });\n    // Step 4: Compare the content\n    _dynamicpage.default.compareContent(firstLoadContent, secondLoadContent);\n  });\n});",
              "err": {},
              "uuid": "2b7f26fb-0523-43bd-a92e-3c93b78f844a",
              "parentUUID": "3ca42b3b-cf9d-43c6-87a5-cc307b35ac50",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b7f26fb-0523-43bd-a92e-3c93b78f844a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5694,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0669a8d7-3172-44e5-b237-8ce1a8bc0759",
      "title": "",
      "fullFile": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "file": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "45aa4eb3-97de-4cc6-92dc-8de9b7cd4482",
          "title": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Find the column index for \"Memory\"",
              "fullTitle": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage Find the column index for \"Memory\"",
              "timedOut": null,
              "duration": 2779,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table.table-striped thead tr th\").then($tr => {\n  let memoryColumnIndex = -1;\n  $tr.each((index, th) => {\n    const tr = th.innerText;\n    if (tr == 'Memory') {\n      memoryColumnIndex = index;\n    }\n  });\n  cy.log('Memory column index: ', memoryColumnIndex);\n  cy.get(\"table.table-striped tbody tr\").each($trow => {\n    const $cells = $trow.find('td');\n    const browserName = $cells.eq(0).text().trim();\n    const memory = $cells.eq(memoryColumnIndex).text();\n    cy.log(browserName, ' Memory:', memory);\n  });\n});",
              "err": {},
              "uuid": "bbebab7e-ac41-4c81-957d-6f0b0ab00f74",
              "parentUUID": "45aa4eb3-97de-4cc6-92dc-8de9b7cd4482",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbebab7e-ac41-4c81-957d-6f0b0ab00f74"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2779,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b981547f-df70-4d59-9472-335e3e54993d",
      "title": "",
      "fullFile": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "file": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dc22b74a-892d-45bf-b060-c9fa84697a2b",
          "title": "Fetch All Notes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new note",
              "fullTitle": "Fetch All Notes create a new note",
              "timedOut": null,
              "duration": 1191,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 2: Create a note\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: noteTitle,\n    description: noteDescription,\n    category: 'Personal'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  createdNoteId = response.body.data.id;\n  expect(createdNoteId).to.exist;\n});",
              "err": {},
              "uuid": "3b42d23e-39e3-44f1-8ea1-18457266278d",
              "parentUUID": "dc22b74a-892d-45bf-b060-c9fa84697a2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch all notes and contain the newly created note",
              "fullTitle": "Fetch All Notes should fetch all notes and contain the newly created note",
              "timedOut": null,
              "duration": 537,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 3: Fetch all notes\ncy.request({\n  method: 'GET',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.be.an('array');\n  // Step 4: Assert the created note exists in the array\n  const found = response.body.data.find(note =>\n  //note.id === createdNoteId && note.title === noteTitle\n  note.title === noteTitle && note.description === noteDescription);\n  expect(found, 'Newly created note should be in the list').to.exist;\n});",
              "err": {},
              "uuid": "2983173b-aefa-4b23-a403-4983cd28afb6",
              "parentUUID": "dc22b74a-892d-45bf-b060-c9fa84697a2b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b42d23e-39e3-44f1-8ea1-18457266278d",
            "2983173b-aefa-4b23-a403-4983cd28afb6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1728,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7ce4661f-295c-4af8-8588-9a1627bab860",
      "title": "",
      "fullFile": "cypress\\e2e\\functionDeclaration.cy.js",
      "file": "cypress\\e2e\\functionDeclaration.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b991a107-6374-457b-a6c8-43297d429087",
          "title": "Logging Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs the welcome message",
              "fullTitle": "Logging Example Logs the welcome message",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "logWelcome();",
              "err": {},
              "uuid": "a6929e9a-1609-46e6-afc5-27301a7934a6",
              "parentUUID": "b991a107-6374-457b-a6c8-43297d429087",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6929e9a-1609-46e6-afc5-27301a7934a6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d497c2ec-1c41-4354-957d-ab72426e587b",
      "title": "",
      "fullFile": "cypress\\e2e\\functionExpression.cy.js",
      "file": "cypress\\e2e\\functionExpression.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "68b11a94-9439-4155-afe7-c22ed71e3b08",
          "title": "function expression",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs user email",
              "fullTitle": "function expression Logs user email",
              "timedOut": null,
              "duration": 35,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const printUserEmail = function (email) {\n  cy.log(` User email: ${email}`);\n};\nprintUserEmail('cypresstesting@com');",
              "err": {},
              "uuid": "01da1e24-2524-4e85-b4b9-640a625ebf5b",
              "parentUUID": "68b11a94-9439-4155-afe7-c22ed71e3b08",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "01da1e24-2524-4e85-b4b9-640a625ebf5b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5a0bf040-b5df-445b-aa3b-af115ea54ec3",
      "title": "",
      "fullFile": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "file": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "59c16e70-f734-4302-ba1f-7169f01fad65",
          "title": "OddorEven",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "OddorEven",
              "fullTitle": "OddorEven OddorEven",
              "timedOut": null,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "function evenorodd(number) {\n  if (number % 2 === 0) {\n    cy.log(\"Even\");\n  } else {\n    cy.log(\"Odd\");\n  }\n}\nlet s = evenorodd(6);\ncy.log(s);",
              "err": {},
              "uuid": "89562c1e-c775-4438-9fdc-0f5926154249",
              "parentUUID": "59c16e70-f734-4302-ba1f-7169f01fad65",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "89562c1e-c775-4438-9fdc-0f5926154249"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "18eb501d-8308-4073-be54-214f03559261",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "67c9a337-337f-4bb0-97ff-5225a6871639",
          "title": "Login Functinality with Negative scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "invalid username",
              "fullTitle": "Login Functinality with Negative scenarios invalid username",
              "timedOut": null,
              "duration": 7576,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('testAbcd');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid username\ncy.get('#flash').should('be.visible').and('contain.text', 'Your username is invalid!');",
              "err": {},
              "uuid": "0f4db85f-cd66-4d3e-8642-90f16ae98c72",
              "parentUUID": "67c9a337-337f-4bb0-97ff-5225a6871639",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "invalid password",
              "fullTitle": "Login Functinality with Negative scenarios invalid password",
              "timedOut": null,
              "duration": 5793,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('practice');\ncy.get('#password').type('cdeef!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid password\ncy.get('#flash').should('be.visible').and('contain.text', 'Your password is invalid!');",
              "err": {},
              "uuid": "1e3bb58a-fbdd-4c91-a2f0-3c14a2568f8a",
              "parentUUID": "67c9a337-337f-4bb0-97ff-5225a6871639",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f4db85f-cd66-4d3e-8642-90f16ae98c72",
            "1e3bb58a-fbdd-4c91-a2f0-3c14a2568f8a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13369,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f8b29e9d-84a0-4cdd-84f7-fb666508991d",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89ef3262-2987-429e-b04a-29f2deb2dc70",
          "title": "Login Functionality Positive scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login in to application with valid credentials",
              "fullTitle": "Login Functionality Positive scenarios Login in to application with valid credentials",
              "timedOut": null,
              "duration": 6039,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n//Assert URL\ncy.url().should('include', '/secure');\n//Assert Success Message\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n//Assert Logout Button\ncy.get('a.button.secondary.radius').should('be.visible').and('contain.text', 'Logout');",
              "err": {},
              "uuid": "4c45e1c8-b7f8-4517-b49e-78abc1bb8b6b",
              "parentUUID": "89ef3262-2987-429e-b04a-29f2deb2dc70",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c45e1c8-b7f8-4517-b49e-78abc1bb8b6b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6039,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8e864e27-e35b-423c-bdba-041bbab9b6ea",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandExtractToken.cy.js",
      "file": "cypress\\e2e\\loginandExtractToken.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3e5187b8-b531-48f8-ad25-9c25f50823ab",
          "title": "User Login API and Extract Token",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "log in and extract the token",
              "fullTitle": "User Login API and Extract Token log in and extract the token",
              "timedOut": null,
              "duration": 634,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/login',\n  body: apidata,\n  failOnStatusCode: false\n}).then(res => {\n  cy.log(res);\n  // Step 3: Assert response status\n  expect(res.status).to.eq(200);\n  // Step 2: Extract and validate token\n  //expect(response.body).to.have.property('token');\n  cy.log(res.body.message);\n  expect(res.body.message).to.eq(\"Login successful\");\n  const token = res.body.data.token;\n  expect(res.body.data.token).to.not.be.null;\n  //cy.log(authToken)\n  // Save token to alias for reuse\n  cy.wrap(token).as('authToken');\n});",
              "err": {},
              "uuid": "558ca819-53d5-4dbc-9a87-1370f26a03e0",
              "parentUUID": "3e5187b8-b531-48f8-ad25-9c25f50823ab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "558ca819-53d5-4dbc-9a87-1370f26a03e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 634,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9e9895d1-3758-4bf2-a79f-fdc24655d773",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "file": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7507df9e-7e7a-4ac5-ac89-ba92d697ecbd",
          "title": "loginApp",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login to an application with valid credentials",
              "fullTitle": "loginApp login to an application with valid credentials",
              "timedOut": null,
              "duration": 5745,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\n//cy.get('Username: ').contains('practice')\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();",
              "err": {},
              "uuid": "05be625e-eded-49d7-b701-1f8c739cecff",
              "parentUUID": "7507df9e-7e7a-4ac5-ac89-ba92d697ecbd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "logout to an application",
              "fullTitle": "loginApp logout to an application",
              "timedOut": null,
              "duration": 10188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\ncy.get('i[class=\"icon-2x icon-signout\"]').click();",
              "err": {},
              "uuid": "4d43ffc8-c158-4e01-b4b1-399b534d7530",
              "parentUUID": "7507df9e-7e7a-4ac5-ac89-ba92d697ecbd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "05be625e-eded-49d7-b701-1f8c739cecff",
            "4d43ffc8-c158-4e01-b4b1-399b534d7530"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15933,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8bb07029-4c72-4022-82fe-c86d1d19d2c6",
      "title": "",
      "fullFile": "cypress\\e2e\\loginpagePOM.cy.js",
      "file": "cypress\\e2e\\loginpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a7e2c386-6d3e-4ad7-b973-3e7e518d01ed",
          "title": "Login Page Testcase with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user should login and redirect to secure area",
              "fullTitle": "Login Page Testcase with POM user should login and redirect to secure area",
              "timedOut": null,
              "duration": 226,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\loginpagePOM.cy.js\\\\Login Page Testcase with POM -- user should login and redirect to secure area -- before each hook (failed).png\"\n    ]\n  ]\n}",
              "code": "_loginpage.default.enterUsername('practice');\n_loginpage.default.enterPassword('SuperSecretPassword!');\n_loginpage.default.clickLogin();\ncy.url().should('include', '/secure');\n//cy.url().should('include', '/login');\ncy.contains('You logged into a secure area!').should('be.visible');",
              "err": {
                "message": "TypeError: _loginpage.default.visit is not a function\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Login Page Testcase with POM`",
                "estack": "TypeError: _loginpage.default.visit is not a function\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Login Page Testcase with POM`\n    at Context.eval (webpack://cypress/./cypress/e2e/loginpagePOM.cy.js:8:14)\n    at runnable.fn (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:141791:19)\n    at callFn (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:160869:21)\n    at Runnable.run (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:160856:7)\n    at <unknown> (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:166946:30)\n    at PassThroughHandlerContext.finallyHandler (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:4042:23)\n    at PassThroughHandlerContext.tryCatcher (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1546:18)",
                "diff": null
              },
              "uuid": "fb7e24bb-4313-4afb-ae1c-0549bad5f76c",
              "parentUUID": "a7e2c386-6d3e-4ad7-b973-3e7e518d01ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid user login should show error message",
              "fullTitle": "Login Page Testcase with POM Invalid user login should show error message",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_loginpage.default.enterUsername('abdcdef');\n_loginpage.default.enterPassword('dfdfdfd');\n_loginpage.default.clickLogin();\ncy.contains('Your username is invalid!').should('be.visible');\ncy.url().should('include', '/login');",
              "err": {},
              "uuid": "86f539f7-6bd7-4732-bd8b-356ef45b5ec3",
              "parentUUID": "a7e2c386-6d3e-4ad7-b973-3e7e518d01ed",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fb7e24bb-4313-4afb-ae1c-0549bad5f76c"
          ],
          "pending": [],
          "skipped": [
            "86f539f7-6bd7-4732-bd8b-356ef45b5ec3"
          ],
          "duration": 226,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "67ae8dd0-0abd-4b23-8fde-830f443653f5",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "file": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c85ac689-228f-464c-bc03-c45182c9a1f2",
          "title": "Login Application",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Log in with valid credentials",
              "fullTitle": "Login Application Log in with valid credentials",
              "timedOut": null,
              "duration": 6918,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login('practice', 'SuperSecretPassword!');\ncy.url().should('include', '/secure');",
              "err": {},
              "uuid": "446c5ae4-400d-42e4-85cf-5bdd79367bee",
              "parentUUID": "c85ac689-228f-464c-bc03-c45182c9a1f2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "446c5ae4-400d-42e4-85cf-5bdd79367bee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6918,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4da75459-25c6-46f3-a31a-a718c08cc40a",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "file": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4d4edc69-5652-42c4-a64c-747ff342e346",
          "title": "Login with fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs in using data from user.json",
              "fullTitle": "Login with fixture data Logs in using data from user.json",
              "timedOut": null,
              "duration": 6850,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\n// Use fixture data to fill in login form\ncy.get('#username').type(this.userData.username);\ncy.get('#password').type(this.userData.password);\ncy.get('button[type=\"submit\"]').click();\n// Assertion \ncy.url().should('include', '/secure');\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "d426aef9-a2aa-4c40-ae1a-83f7fb33df45",
              "parentUUID": "4d4edc69-5652-42c4-a64c-747ff342e346",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d426aef9-a2aa-4c40-ae1a-83f7fb33df45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6850,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a279c55a-9e8b-4524-9961-3b73db4610c2",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "file": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "38d7d37e-4da8-4ee4-a10e-0c3c75bca9f5",
          "title": "Login using fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login with form data from JSON file",
              "fullTitle": "Login using fixture data Login with form data from JSON file",
              "timedOut": null,
              "duration": 6471,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Load fixture\ncy.fixture('formData').then(data => {\n  cy.visit('https://practice.expandtesting.com/login');\n  // Fill in the form\n  cy.get('#username').type(data.username);\n  cy.get('#password').type(data.password);\n  cy.get('button[type=\"submit\"]').click();\n  // Validate login success\n  cy.url().should('include', '/secure');\n  cy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n});",
              "err": {},
              "uuid": "73feddd2-c10b-4287-b157-6ab61e49b99d",
              "parentUUID": "38d7d37e-4da8-4ee4-a10e-0c3c75bca9f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73feddd2-c10b-4287-b157-6ab61e49b99d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6471,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a97a8c63-04f9-4f15-bab4-1ca629dedfff",
      "title": "",
      "fullFile": "cypress\\e2e\\radiobutton_2c.cy.js",
      "file": "cypress\\e2e\\radiobutton_2c.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "71517eaa-dbe7-4beb-abbf-f2e0afe06a07",
          "title": "Select Blue radio button",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select the Blue radio button",
              "fullTitle": "Select Blue radio button Select the Blue radio button",
              "timedOut": null,
              "duration": 2916,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/radio-buttons');\n//blue radio button\ncy.get('input#blue').check().should('be.checked');",
              "err": {},
              "uuid": "91663168-e7c6-45ca-881c-6cc7818be04d",
              "parentUUID": "71517eaa-dbe7-4beb-abbf-f2e0afe06a07",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "91663168-e7c6-45ca-881c-6cc7818be04d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2916,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7f679c1f-3998-4c30-8a8e-e8b96e15845c",
      "title": "",
      "fullFile": "cypress\\e2e\\registernewuserAPI.cy.js",
      "file": "cypress\\e2e\\registernewuserAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d111e81f-e427-44db-8230-d5831cacc58b",
          "title": "Register New User using API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new user",
              "fullTitle": "Register New User using API create a new user",
              "timedOut": null,
              "duration": 696,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//const timestamp = Date.now()\nconst apidata = {\n  name: \"QAtester27\",\n  email: \"sssf27@abcd.com\",\n  password: \"QAPassword27\"\n};\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/register',\n  body: apidata,\n  failOnStatusCode: false // allows manual status check\n}).then(res => {\n  cy.log(res);\n  // Step 2: Assert response status\n  expect(res.status).to.eq(201);\n  // Step 3: Validate success message\n  expect(res.body.message).to.eq('User account created successfully');\n});",
              "err": {},
              "uuid": "fb443667-6a47-4550-8676-a6816672bcfd",
              "parentUUID": "d111e81f-e427-44db-8230-d5831cacc58b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb443667-6a47-4550-8676-a6816672bcfd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 696,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "75891d81-854d-410f-83bb-14a453338ff1",
      "title": "",
      "fullFile": "cypress\\e2e\\registrationForm.cy.js",
      "file": "cypress\\e2e\\registrationForm.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
          "title": "Registration Form Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": " Registration Page",
              "fullTitle": "Registration Form Tests  Registration Page",
              "timedOut": null,
              "duration": 8799,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('QATest24');\ncy.get('#password').type('QATest23');\n//cy.get('input#confirmPassword', { timeout: 10000 }).should('be.visible').type('test1234');\ncy.get('#confirmPassword', {\n  timeout: 10000\n}).should('be.visible').type('QATest23');\ncy.get('button[type=submit]').click();\n// Redirect to login and show success message\ncy.url().should('include', '/login');\ncy.get('#flash').should('be.visible').and('contain.text', 'Successfully registered, you can log in now.');",
              "err": {},
              "uuid": "c00209e9-ded4-450c-ac66-f852d6691eae",
              "parentUUID": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "username validation",
              "fullTitle": "Registration Form Tests username validation",
              "timedOut": null,
              "duration": 5721,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#password').type('ValidPass');\ncy.get('#confirmPassword').type('ValidPass');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "2720d24b-1501-426b-b316-8305b24794b8",
              "parentUUID": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Password validation",
              "fullTitle": "Registration Form Tests Missing Password validation",
              "timedOut": null,
              "duration": 9553,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#confirmPassword').type('test123');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "ac2d189e-dd6a-4bec-8867-493761c90dc5",
              "parentUUID": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Non-matching passwords",
              "fullTitle": "Registration Form Tests Non-matching passwords",
              "timedOut": null,
              "duration": 6865,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#password').type('test123');\ncy.get('#confirmPassword').type('Mismatch123!');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'Passwords do not match.');",
              "err": {},
              "uuid": "371be7ac-3083-45fd-88f8-b3a6900446d2",
              "parentUUID": "7f8ee377-2b36-4306-9e8e-8c02779a4ed1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c00209e9-ded4-450c-ac66-f852d6691eae",
            "2720d24b-1501-426b-b316-8305b24794b8",
            "ac2d189e-dd6a-4bec-8867-493761c90dc5",
            "371be7ac-3083-45fd-88f8-b3a6900446d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 30938,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2d9b6f4e-a2ba-4e14-87b8-64755a92a1b1",
      "title": "",
      "fullFile": "cypress\\e2e\\screateNoteAPI.cy.js",
      "file": "cypress\\e2e\\screateNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "686af31f-de3f-41a8-a42c-9ed8c7a8842f",
          "title": "Create a Note",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a note and return an ID",
              "fullTitle": "Create a Note create a note and return an ID",
              "timedOut": null,
              "duration": 1207,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: 'Test Note',\n    description: 'This is a test note created through API testing.',\n    category: 'Work'\n  }\n}).then(response => {\n  console.log('Response Body:', response.body);\n  cy.log(JSON.stringify(response.body));\n  // Basic response check\n  expect(response.status).to.eq(200);\n  // Adjust according to the actual structure\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.have.property('id');\n  expect(response.body.data.title).to.eq('Test Note');\n});",
              "err": {},
              "uuid": "54d3003f-d9ef-4f1d-9b2d-905e04194322",
              "parentUUID": "686af31f-de3f-41a8-a42c-9ed8c7a8842f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54d3003f-d9ef-4f1d-9b2d-905e04194322"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1207,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1f79a8f0-349e-4d8a-8525-0a788e82e9d0",
      "title": "",
      "fullFile": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "file": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "scroll in an element",
          "fullTitle": "scroll in an element",
          "timedOut": null,
          "duration": 3951,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/scrollbars\");\n//scroll in to an element\n//cy.get(\"[id='search-input']\").type(\"scrollbars\")  \ncy.get('[style=\"height:150px;overflow-y: scroll;width:300px;overflow-x:scroll\"]').click();\ncy.get('#hidingButton').scrollIntoView().click();",
          "err": {},
          "uuid": "1397d485-0e59-42ab-8d3f-599f4b773e35",
          "parentUUID": "1f79a8f0-349e-4d8a-8525-0a788e82e9d0",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Drag and drop",
          "fullTitle": "Drag and drop",
          "timedOut": null,
          "duration": 2477,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/drag-and-drop\");\n// Drag Box A and drop it on Box B\ncy.get('#column-a').drag('#column-b');\n// Optional: assert that they’ve swapped\ncy.get('#column-a header').should('have.text', 'B');\ncy.get('#column-b header').should('have.text', 'A');",
          "err": {},
          "uuid": "8970d60e-1b5c-4345-8b61-db9a59c58b35",
          "parentUUID": "1f79a8f0-349e-4d8a-8525-0a788e82e9d0",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "1397d485-0e59-42ab-8d3f-599f4b773e35",
        "8970d60e-1b5c-4345-8b61-db9a59c58b35"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 6428,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "81d30ccb-58e5-4a0c-b965-f1f84c8e37fb",
      "title": "",
      "fullFile": "cypress\\e2e\\securePageTestPom.cy.js",
      "file": "cypress\\e2e\\securePageTestPom.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dd4fefc4-59d2-4986-aba8-a2665091b3ea",
          "title": "Login Page Testcase with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user should login and redirect to secure area",
              "fullTitle": "Login Page Testcase with POM user should login and redirect to secure area",
              "timedOut": null,
              "duration": 64606,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('practice');\nloginPage.enterPassword('SuperSecretPassword!');\nloginPage.clickLogin();\nsecurePage.isAtSecurePage();\nsecurePage.getSuccessAlert().should('contain.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "8ed15771-0f6c-460a-aabd-1f60ff80b77c",
              "parentUUID": "dd4fefc4-59d2-4986-aba8-a2665091b3ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User should be able to logout successfully",
              "fullTitle": "Login Page Testcase with POM User should be able to logout successfully",
              "timedOut": null,
              "duration": 49407,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('practice');\nloginPage.enterPassword('SuperSecretPassword!');\nloginPage.clickLogin();\nsecurePage.logout();\ncy.url().should('include', '/login');\ncy.get('#flash, .flash.info').should('contain.text', 'You logged out of the secure area!'); // Adjust based on actual message",
              "err": {},
              "uuid": "3a450878-aad6-4059-af62-0291a08a0ba4",
              "parentUUID": "dd4fefc4-59d2-4986-aba8-a2665091b3ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ed15771-0f6c-460a-aabd-1f60ff80b77c",
            "3a450878-aad6-4059-af62-0291a08a0ba4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 114013,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fce6606a-6c25-40fd-ba4f-d53e585a4f0f",
      "title": "",
      "fullFile": "cypress\\e2e\\usePrevSubject.cy.js",
      "file": "cypress\\e2e\\usePrevSubject.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "67242d47-2184-482e-95af-dee35b098c62",
          "title": "usePrevSubject",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login using Fillinput",
              "fullTitle": "usePrevSubject Login using Fillinput",
              "timedOut": null,
              "duration": 8406,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Use previous subject\ncy.get('#username').fillinput('practice');\ncy.get('#password').fillinput('SuperSecretPassword!');\ncy.get('#login > .btn').click();\ncy.get('b').should('have.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "3e957e26-1fb8-4531-ab4f-d33f52bfa286",
              "parentUUID": "67242d47-2184-482e-95af-dee35b098c62",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e957e26-1fb8-4531-ab4f-d33f52bfa286"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8406,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8fa49d05-94f7-4c96-8ee8-fa408fd6497a",
      "title": "",
      "fullFile": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "file": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b2f0dbd5-dda5-4e31-9e49-fbfcbfd52888",
          "title": "Validate Chrome CPU usage matches the label",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "fullTitle": "Validate Chrome CPU usage matches the label Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "timedOut": null,
              "duration": 2713,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\n// Wait until Chrome row appears\ncy.get(\"table.table-striped tbody tr\").each($tr => {\n  const $td = $tr.find('td');\n  const browserName = $td.eq(0).text().trim();\n  if (browserName == 'Chrome') {\n    var _find;\n    const cpuUsageFromTable = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText.trim();\n    cy.get('#chrome-cpu').invoke('text').then(fullText => {\n      const match = fullText.match(/(\\d+(\\.\\d+)?%)/);\n      const cpuUsageFromCard = match ? match[0] : null;\n      expect(cpuUsageFromCard).to.eq(cpuUsageFromTable);\n    });\n  }\n});",
              "err": {},
              "uuid": "72b8b791-05fe-4483-8f7f-942d529e7ee6",
              "parentUUID": "b2f0dbd5-dda5-4e31-9e49-fbfcbfd52888",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "72b8b791-05fe-4483-8f7f-942d529e7ee6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2713,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1e3a8ae8-6b8a-4043-b32c-6f3bdd3d827c",
      "title": "",
      "fullFile": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "file": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b1687753-2f7f-41b3-b3d1-8d86b540b981",
          "title": "Log Each Browsername and its cpu usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "use .each() to log each browser name and its CPU usage.",
              "fullTitle": "Log Each Browsername and its cpu usage use .each() to log each browser name and its CPU usage.",
              "timedOut": null,
              "duration": 3458,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsage = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText;\n  cy.log('Browser Name is ', browsername, 'cpu usage', cpuUsage);\n});",
              "err": {},
              "uuid": "a046bb90-be0c-49c6-a262-08dd3b2d6c88",
              "parentUUID": "b1687753-2f7f-41b3-b3d1-8d86b540b981",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Count how many browsers have CPU usage over 20%.",
              "fullTitle": "Log Each Browsername and its cpu usage Count how many browsers have CPU usage over 20%.",
              "timedOut": null,
              "duration": 5027,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let count = 0;\ncy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find2;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsageText = (_find2 = [...$td].find(td => td.innerText.includes('%'))) === null || _find2 === void 0 ? void 0 : _find2.innerText;\n  if (cpuUsageText) {\n    const cpuValue = parseFloat(cpuUsageText.replace('%', ''));\n    if (cpuValue > 20) {\n      count++;\n    }\n  }\n}).then(() => {\n  cy.log('Total browser count with>20 % is', count);\n});",
              "err": {},
              "uuid": "3253ef1d-f931-43c5-bf7e-d3e24b5e8658",
              "parentUUID": "b1687753-2f7f-41b3-b3d1-8d86b540b981",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a046bb90-be0c-49c6-a262-08dd3b2d6c88",
            "3253ef1d-f931-43c5-bf7e-d3e24b5e8658"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8485,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a2200a3d-2250-4fd3-b980-f21fff7100f4",
      "title": "",
      "fullFile": "cypress\\e2e\\LoopNumbers.cy.js",
      "file": "cypress\\e2e\\LoopNumbers.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "80e1aaf4-6cf2-4282-93b5-1fbf91d44eb7",
          "title": "loop Numbers",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "loop",
              "fullTitle": "loop Numbers loop",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "for (let i = 1; i <= 10; i++) {\n  if (i % 2 === 0) {\n    cy.log(i);\n  }\n}",
              "err": {},
              "uuid": "e800bab7-b1b2-47fd-ae08-118b140aa456",
              "parentUUID": "80e1aaf4-6cf2-4282-93b5-1fbf91d44eb7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "e800bab7-b1b2-47fd-ae08-118b140aa456"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4272331d-821a-4a05-8ec6-96686162b3db",
      "title": "",
      "fullFile": "cypress\\e2e\\arrowFunction.cy.js",
      "file": "cypress\\e2e\\arrowFunction.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c777279b-5848-43fa-9def-c24a990816cd",
          "title": "Multiply three Numbers Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Multiplies three numbers",
              "fullTitle": "Multiply three Numbers Example Multiplies three numbers",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const multiplyThreeNumbers = (a, b, c) => a * b * c;\nconst result = multiplyThreeNumbers(4, 6, 8);\ncy.log(`The multiplication of three numbers: ${result}`);",
              "err": {},
              "uuid": "b7008d99-8c48-4018-9e2f-1b931f4f8798",
              "parentUUID": "c777279b-5848-43fa-9def-c24a990816cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7008d99-8c48-4018-9e2f-1b931f4f8798"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dfd3cd4b-8c1c-4f2b-80e7-537486535c4f",
      "title": "",
      "fullFile": "cypress\\e2e\\assertionsExamples.cy.js",
      "file": "cypress\\e2e\\assertionsExamples.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5a853d6f-b414-4329-b260-25db42459830",
          "title": "Assertions Page - Cypress Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should assert element existence, visibility, and text content",
              "fullTitle": "Assertions Page - Cypress Tests should assert element existence, visibility, and text content",
              "timedOut": null,
              "duration": 10428,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/#assertions');\n//Assert: Element exists\ncy.get('.btn-warning').should('exist');\n//cy.get('#exist-element') .should('exist');\n// Assert: Element has specific text\ncy.get('.btn-primary').should('have.text', 'Test Cases');\n// Assert: Element is visible\ncy.get('.btn-success').should('be.visible');",
              "err": {},
              "uuid": "11876149-1b17-43c4-bcd8-cfa8c5a53388",
              "parentUUID": "5a853d6f-b414-4329-b260-25db42459830",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11876149-1b17-43c4-bcd8-cfa8c5a53388"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10428,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a07e1be8-e71c-4bf8-bd27-f1d8b0e5817c",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "file": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "196fc358-abca-48de-b5da-98510c44e40d",
          "title": "Checkboxes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check and uncheck each checkbox",
              "fullTitle": "Checkboxes check and uncheck each checkbox",
              "timedOut": null,
              "duration": 4405,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/checkboxes');\n// Step 2: Locate all checkboxes (assume input[type=\"checkbox\"] is used)\ncy.get('input[type=\"checkbox\"]').each($checkbox => {\n  // Step 3: Check the checkbox\n  cy.wrap($checkbox).check().should('be.checked');\n  // Step 4: Uncheck the checkbox\n  cy.wrap($checkbox).uncheck().should('not.be.checked');\n});",
              "err": {},
              "uuid": "0b8add92-0c81-41bd-82fc-fb72dc1510c5",
              "parentUUID": "196fc358-abca-48de-b5da-98510c44e40d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b8add92-0c81-41bd-82fc-fb72dc1510c5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4405,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ddcb8239-17a0-46e9-ba4a-8b912fc9f6e2",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxPOM.cy.js",
      "file": "cypress\\e2e\\checkboxPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "55594c3f-3d92-4234-abcc-0126d212bc6d",
          "title": "Checkboxes Test with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should check the first checkbox and uncheck the second",
              "fullTitle": "Checkboxes Test with POM Should check the first checkbox and uncheck the second",
              "timedOut": null,
              "duration": 3550,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "checkboxPage.checkFirstBox();\ncheckboxPage.uncheckSecondBox();\ncheckboxPage.validateCheckboxState([true, false]); // Validate both checkboxes",
              "err": {},
              "uuid": "d3b7f4d1-d562-40cc-81ae-a1d1ce14575a",
              "parentUUID": "55594c3f-3d92-4234-abcc-0126d212bc6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3b7f4d1-d562-40cc-81ae-a1d1ce14575a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3550,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "da75eb00-ef73-46bd-b0ce-840755c479fd",
      "title": "",
      "fullFile": "cypress\\e2e\\contextmenuPOM.cy.js",
      "file": "cypress\\e2e\\contextmenuPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "63534943-aca2-45f3-b1a9-4874dc7354de",
          "title": "Context Menu Interaction Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should right click the box and validate the alert message",
              "fullTitle": "Context Menu Interaction Test Should right click the box and validate the alert message",
              "timedOut": null,
              "duration": 3507,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contextMenuPage.rightClickBox();\n//cy.get('a[target=\"_blank\"]').invoke('removeAttr', 'target').click();\ncontextMenuPage.handleAlert('You selected a context menu');",
              "err": {},
              "uuid": "1c8523f0-6ac8-4f6c-b91f-9587d108254d",
              "parentUUID": "63534943-aca2-45f3-b1a9-4874dc7354de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c8523f0-6ac8-4f6c-b91f-9587d108254d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3507,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8c8d7505-dc18-4faf-92ea-8d6799aa93f1",
      "title": "",
      "fullFile": "cypress\\e2e\\dataTypes.cy.js",
      "file": "cypress\\e2e\\dataTypes.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "14736a4a-be85-41a7-92f4-dc637d769d09",
          "title": "datatypes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "arraydatatype",
              "fullTitle": "datatypes arraydatatype",
              "timedOut": null,
              "duration": 52,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let numbers = [1, 2, 3, 4, 5];\nlet sum = 0;\nfor (let i = 0; i < numbers.length; i++) {\n  sum += numbers[i];\n  cy.log(\"Sum of the numbers is:\", sum);\n}",
              "err": {},
              "uuid": "a88af84a-ded9-433d-b8cb-1a188d03ddf2",
              "parentUUID": "14736a4a-be85-41a7-92f4-dc637d769d09",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a88af84a-ded9-433d-b8cb-1a188d03ddf2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 52,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "51992b79-3f31-4e8e-912d-62a890a55afe",
      "title": "",
      "fullFile": "cypress\\e2e\\declareVariables.cy.js",
      "file": "cypress\\e2e\\declareVariables.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c3a5b75f-244f-475a-90d8-f39908bb3b2e",
          "title": "variabledeclaration",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "variablelet",
              "fullTitle": "variabledeclaration variablelet",
              "timedOut": null,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let b = 2;\nb = 3;\ncy.log(b);",
              "err": {},
              "uuid": "48a7e507-35e0-4873-988d-a81fef635ec6",
              "parentUUID": "c3a5b75f-244f-475a-90d8-f39908bb3b2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "variableconst",
              "fullTitle": "variabledeclaration variableconst",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const c = 3;\nc = 4; //throws Error",
              "err": {},
              "uuid": "eb0bf334-0ca0-4d66-85f9-2df5ce094c31",
              "parentUUID": "c3a5b75f-244f-475a-90d8-f39908bb3b2e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "48a7e507-35e0-4873-988d-a81fef635ec6"
          ],
          "failures": [],
          "pending": [
            "eb0bf334-0ca0-4d66-85f9-2df5ce094c31"
          ],
          "skipped": [],
          "duration": 25,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dacc694f-193d-4bec-bbb4-a70f1dd8bab3",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "file": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "19631dbc-667b-4a94-aad6-5fd615615378",
          "title": "Delete a test note and validate cleanup",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deletes a note and confirms deletion",
              "fullTitle": "Delete a test note and validate cleanup Deletes a note and confirms deletion",
              "timedOut": null,
              "duration": 1651,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1: DELETE /notes/{id}\ncy.request({\n  method: 'DELETE',\n  url: `${baseUrl}/${noteId}`,\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Step 2: Confirm status 204\n  expect(response.status).to.eq(200);\n});\n// Step 3: GET /notes and confirm note is gone\ncy.request({\n  method: 'GET',\n  url: baseUrl,\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  //  //Validate the noteId no longer exists in the list\n  // const notes = response.body\n  // const found = notes.find(note => note.id === noteId)\n  // expect(found).to.be.undefined\n});",
              "err": {},
              "uuid": "fa39ab68-6e71-41d4-b9a1-8618412ac34c",
              "parentUUID": "19631dbc-667b-4a94-aad6-5fd615615378",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fa39ab68-6e71-41d4-b9a1-8618412ac34c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1651,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "15144287-7e8e-4d43-a400-eba5219c921c",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "file": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Delete NotesAPI",
          "fullTitle": "Delete NotesAPI",
          "timedOut": null,
          "duration": 0,
          "state": "pending",
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": true,
          "context": null,
          "code": "cy.get('@token').then(token => {\n  cy.get('@noteId').then(noteId => {\n    cy.request({\n      method: 'DELETE',\n      url: `https://practice.expandtesting.com/notes/api/notes/${noteId}`,\n      headers: {\n        'x-auth-token': token\n      },\n      body: noteData\n    }).then(res => {\n      cy.log(res);\n      expect(res.status).to.eq(200);\n      expect(res.body.message).to.eq('Note successfully deleted');\n    });\n  });\n});",
          "err": {},
          "uuid": "0918c692-9e18-48ec-a434-80a7a364c246",
          "parentUUID": "15144287-7e8e-4d43-a400-eba5219c921c",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [],
      "pending": [
        "0918c692-9e18-48ec-a434-80a7a364c246"
      ],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "30e441c6-8519-45bd-aa68-fd102dea3f82",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdownPOM.cy.js",
      "file": "cypress\\e2e\\dropdownPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89bbbf3c-fb52-4e0e-81af-5e313473ec31",
          "title": "Dropdown Handling Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should select Option 1 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 1 and validate",
              "timedOut": null,
              "duration": 4389,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 1');\ndropdownPage.getSelectedOption().should('have.text', 'Option 1');",
              "err": {},
              "uuid": "02989b7d-d9c5-4242-b7dc-cb8014ff03f5",
              "parentUUID": "89bbbf3c-fb52-4e0e-81af-5e313473ec31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should select Option 2 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 2 and validate",
              "timedOut": null,
              "duration": 2264,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 2');\ndropdownPage.getSelectedOption().should('have.text', 'Option 2');",
              "err": {},
              "uuid": "412368df-31ca-47a5-9e53-c3e7f1f5b28b",
              "parentUUID": "89bbbf3c-fb52-4e0e-81af-5e313473ec31",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "02989b7d-d9c5-4242-b7dc-cb8014ff03f5",
            "412368df-31ca-47a5-9e53-c3e7f1f5b28b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6653,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "797b3474-5d59-40b3-9d98-0ecc0c0ae8c5",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdown_2b.cy.js",
      "file": "cypress\\e2e\\dropdown_2b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5c8d8ca4-dfa7-493a-90cd-5a6ffb71dcb1",
          "title": "Select \"India\" from the dropdown",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "select India from the country dropdown",
              "fullTitle": "Select \"India\" from the dropdown select India from the country dropdown",
              "timedOut": null,
              "duration": 3046,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit the dropdown page\ncy.visit('https://practice.expandtesting.com/dropdown');\n// Select \"India\" from the dropdown by visible text\ncy.get('#country').select('India').should('have.value', 'IN');",
              "err": {},
              "uuid": "dff3d849-78dc-42e2-9603-c04b5f0efca1",
              "parentUUID": "5c8d8ca4-dfa7-493a-90cd-5a6ffb71dcb1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dff3d849-78dc-42e2-9603-c04b5f0efca1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3046,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f842fc73-7da8-4d99-b64b-0d8db3a4fc56",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "file": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d7899dbf-555a-4fe3-abe8-944bfbcdda21",
          "title": "Log browser name and CPU usage on dynamic-table",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs browser and CPU usage",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Logs browser and CPU usage",
              "timedOut": null,
              "duration": 2308,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get('table.table-striped tbody tr').each(($row, index) => {\n  const browserName = $row.find('td').eq(0).text();\n  const cpuUsage = $row.find('td').eq(2).text();\n  cy.get('table.table-striped tbody tr').should('have.length.at.least', 1);\n  cy.log(`Row ${index + 1}: Browser = ${browserName}, CPU Usage = ${cpuUsage}`);\n  expect(browserName).to.not.be.empty;\n  expect(cpuUsage).to.not.be.empty;\n});",
              "err": {},
              "uuid": "16811254-d1b1-4af3-90cf-6a1a4f4dd022",
              "parentUUID": "d7899dbf-555a-4fe3-abe8-944bfbcdda21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "timedOut": null,
              "duration": 1531,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\nlet cpuAbove15Found = false;\ncy.get(\"table.table-striped tbody tr\").each(($row, rowIndex, $rows) => {\n  const $cells = $row.find('td');\n  const browserName = $cells.eq(0).text().trim(); // 1. Assert browser name is not empty\n  expect(browserName).to.not.be.empty;\n  $cells.each((i, td) => {\n    const cellText = td.innerText;\n    expect(cellText).to.not.be.empty; // 2. Assert no cell is empty\n  });\n  const cpuCell = [...$cells].find(td => td.innerText.includes('%')); // 3. Check if any CPU usage > 15%\n  if (cpuCell) {\n    const cpuValue = parseFloat(cpuCell.innerText.replace('%', ''));\n    if (cpuValue > 15) {\n      cpuAbove15Found = true;\n    }\n  }\n}).then(() => {\n  expect(cpuAbove15Found, \"CPU Usage above 15 not found\").to.be.false; // Final assertion after looping all rows\n});",
              "err": {},
              "uuid": "ee4bfc2f-45b8-4ccd-8a61-ece6753ca828",
              "parentUUID": "d7899dbf-555a-4fe3-abe8-944bfbcdda21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16811254-d1b1-4af3-90cf-6a1a4f4dd022",
            "ee4bfc2f-45b8-4ccd-8a61-ece6753ca828"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3839,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e141f9a6-229a-48a2-9da8-9bf3fba5729a",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "file": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "12e6e512-cc38-4861-b774-936eb12196d9",
          "title": "Dynamic Content Validation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should detect dynamic content change after refresh",
              "fullTitle": "Dynamic Content Validation should detect dynamic content change after refresh",
              "timedOut": null,
              "duration": 4463,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dynamic-content');\n// Step 1: Get initial content\nlet firstLoadContent = [];\n_dynamicpage.default.getTextBlocks().then($blocks => {\n  $blocks.each((index, el) => {\n    firstLoadContent.push(el.innerText.trim());\n  });\n  // Step 2: Refresh the page\n  cy.reload();\n  // Step 3: Get new content\n  let secondLoadContent = [];\n  _dynamicpage.default.getTextBlocks().then($newBlocks => {\n    $newBlocks.each((index, el) => {\n      secondLoadContent.push(el.innerText.trim());\n    });\n    // Step 4: Compare the content\n    _dynamicpage.default.compareContent(firstLoadContent, secondLoadContent);\n  });\n});",
              "err": {},
              "uuid": "16b4f7ba-0499-4fc9-9dcc-f6a66b8e2edc",
              "parentUUID": "12e6e512-cc38-4861-b774-936eb12196d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16b4f7ba-0499-4fc9-9dcc-f6a66b8e2edc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4463,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "858f29a5-25c7-40bb-a03c-9f519b46d2c2",
      "title": "",
      "fullFile": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "file": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "646d07b4-00dc-4800-b943-341a1248047d",
          "title": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Find the column index for \"Memory\"",
              "fullTitle": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage Find the column index for \"Memory\"",
              "timedOut": null,
              "duration": 2720,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table.table-striped thead tr th\").then($tr => {\n  let memoryColumnIndex = -1;\n  $tr.each((index, th) => {\n    const tr = th.innerText;\n    if (tr == 'Memory') {\n      memoryColumnIndex = index;\n    }\n  });\n  cy.log('Memory column index: ', memoryColumnIndex);\n  cy.get(\"table.table-striped tbody tr\").each($trow => {\n    const $cells = $trow.find('td');\n    const browserName = $cells.eq(0).text().trim();\n    const memory = $cells.eq(memoryColumnIndex).text();\n    cy.log(browserName, ' Memory:', memory);\n  });\n});",
              "err": {},
              "uuid": "4e9ac7fc-5d72-408b-90e7-6ed093bd0bfb",
              "parentUUID": "646d07b4-00dc-4800-b943-341a1248047d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e9ac7fc-5d72-408b-90e7-6ed093bd0bfb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2720,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e343ffdf-138b-4b1e-b227-0faefc149b55",
      "title": "",
      "fullFile": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "file": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "29a46579-ebad-4fb0-ac64-a6a09f7ce589",
          "title": "Fetch All Notes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new note",
              "fullTitle": "Fetch All Notes create a new note",
              "timedOut": null,
              "duration": 1218,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 2: Create a note\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: noteTitle,\n    description: noteDescription,\n    category: 'Personal'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  createdNoteId = response.body.data.id;\n  expect(createdNoteId).to.exist;\n});",
              "err": {},
              "uuid": "9ce355b1-daa3-471b-b8ce-2d70aa1652ce",
              "parentUUID": "29a46579-ebad-4fb0-ac64-a6a09f7ce589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch all notes and contain the newly created note",
              "fullTitle": "Fetch All Notes should fetch all notes and contain the newly created note",
              "timedOut": null,
              "duration": 1066,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 3: Fetch all notes\ncy.request({\n  method: 'GET',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.be.an('array');\n  // Step 4: Assert the created note exists in the array\n  const found = response.body.data.find(note =>\n  //note.id === createdNoteId && note.title === noteTitle\n  note.title === noteTitle && note.description === noteDescription);\n  expect(found, 'Newly created note should be in the list').to.exist;\n});",
              "err": {},
              "uuid": "12706b9b-bf89-4c35-a6e9-1d67e7cf7d68",
              "parentUUID": "29a46579-ebad-4fb0-ac64-a6a09f7ce589",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9ce355b1-daa3-471b-b8ce-2d70aa1652ce",
            "12706b9b-bf89-4c35-a6e9-1d67e7cf7d68"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2284,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8b1ba3b1-64bf-4ec0-a735-380653ad01f5",
      "title": "",
      "fullFile": "cypress\\e2e\\functionDeclaration.cy.js",
      "file": "cypress\\e2e\\functionDeclaration.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "16a9f515-c71f-4d9c-ac80-eeaac9849c32",
          "title": "Logging Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs the welcome message",
              "fullTitle": "Logging Example Logs the welcome message",
              "timedOut": null,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "logWelcome();",
              "err": {},
              "uuid": "fb1f0c89-0515-4383-bdca-5df03c5cb424",
              "parentUUID": "16a9f515-c71f-4d9c-ac80-eeaac9849c32",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb1f0c89-0515-4383-bdca-5df03c5cb424"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ddadc5c5-d10e-4494-aa75-b566ef5499d9",
      "title": "",
      "fullFile": "cypress\\e2e\\functionExpression.cy.js",
      "file": "cypress\\e2e\\functionExpression.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a5d533be-a820-49fe-8ad6-4dc3e59c3354",
          "title": "function expression",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs user email",
              "fullTitle": "function expression Logs user email",
              "timedOut": null,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const printUserEmail = function (email) {\n  cy.log(` User email: ${email}`);\n};\nprintUserEmail('cypresstesting@com');",
              "err": {},
              "uuid": "6f16a535-aea9-4926-b98d-895561daed75",
              "parentUUID": "a5d533be-a820-49fe-8ad6-4dc3e59c3354",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f16a535-aea9-4926-b98d-895561daed75"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5bf71c76-aaf7-40fd-a7ae-af51bfdf44e0",
      "title": "",
      "fullFile": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "file": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b8569878-85b4-4e4f-b125-90e3b8812ce5",
          "title": "OddorEven",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "OddorEven",
              "fullTitle": "OddorEven OddorEven",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "function evenorodd(number) {\n  if (number % 2 === 0) {\n    cy.log(\"Even\");\n  } else {\n    cy.log(\"Odd\");\n  }\n}\nlet s = evenorodd(6);\ncy.log(s);",
              "err": {},
              "uuid": "fd89789c-122f-427c-89e7-462309e4a4b6",
              "parentUUID": "b8569878-85b4-4e4f-b125-90e3b8812ce5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd89789c-122f-427c-89e7-462309e4a4b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "67ac356c-eb23-4ffd-b2f6-ac80bbd6b2db",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "42c7f538-aaea-4977-be70-11b02f7b99ae",
          "title": "Login Functinality with Negative scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "invalid username",
              "fullTitle": "Login Functinality with Negative scenarios invalid username",
              "timedOut": null,
              "duration": 9638,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('testAbcd');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid username\ncy.get('#flash').should('be.visible').and('contain.text', 'Your username is invalid!');",
              "err": {},
              "uuid": "848cb45f-7f20-4ef2-90e5-32c9c5dee188",
              "parentUUID": "42c7f538-aaea-4977-be70-11b02f7b99ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "invalid password",
              "fullTitle": "Login Functinality with Negative scenarios invalid password",
              "timedOut": null,
              "duration": 5660,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('practice');\ncy.get('#password').type('cdeef!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid password\ncy.get('#flash').should('be.visible').and('contain.text', 'Your password is invalid!');",
              "err": {},
              "uuid": "359aff4b-5718-47b3-9fc5-d045c966702b",
              "parentUUID": "42c7f538-aaea-4977-be70-11b02f7b99ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "848cb45f-7f20-4ef2-90e5-32c9c5dee188",
            "359aff4b-5718-47b3-9fc5-d045c966702b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15298,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e8de7809-58c5-4828-addc-c5b13552abdd",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c4f2d54e-4568-4f7d-ae15-85642df9a4d5",
          "title": "Login Functionality Positive scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login in to application with valid credentials",
              "fullTitle": "Login Functionality Positive scenarios Login in to application with valid credentials",
              "timedOut": null,
              "duration": 9572,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n//Assert URL\ncy.url().should('include', '/secure');\n//Assert Success Message\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n//Assert Logout Button\ncy.get('a.button.secondary.radius').should('be.visible').and('contain.text', 'Logout');",
              "err": {},
              "uuid": "e17d1a88-49b3-46b6-b6fc-36769812a2d9",
              "parentUUID": "c4f2d54e-4568-4f7d-ae15-85642df9a4d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e17d1a88-49b3-46b6-b6fc-36769812a2d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9572,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4b27eaf7-375f-4a01-a4c7-52636e98ee7b",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandExtractToken.cy.js",
      "file": "cypress\\e2e\\loginandExtractToken.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e342284e-5b64-45e3-a6a1-35d4ba569258",
          "title": "User Login API and Extract Token",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "log in and extract the token",
              "fullTitle": "User Login API and Extract Token log in and extract the token",
              "timedOut": null,
              "duration": 662,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/login',\n  body: apidata,\n  failOnStatusCode: false\n}).then(res => {\n  cy.log(res);\n  // Step 3: Assert response status\n  expect(res.status).to.eq(200);\n  // Step 2: Extract and validate token\n  //expect(response.body).to.have.property('token');\n  cy.log(res.body.message);\n  expect(res.body.message).to.eq(\"Login successful\");\n  const token = res.body.data.token;\n  expect(res.body.data.token).to.not.be.null;\n  //cy.log(authToken)\n  // Save token to alias for reuse\n  cy.wrap(token).as('authToken');\n});",
              "err": {},
              "uuid": "898d34ba-cbec-43d0-8927-5230fd77e317",
              "parentUUID": "e342284e-5b64-45e3-a6a1-35d4ba569258",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "898d34ba-cbec-43d0-8927-5230fd77e317"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 662,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "daae86cb-67c0-471c-96f7-86394d83b4fe",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "file": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b62db2c1-e316-4c64-a6b9-f5f82ba59d11",
          "title": "loginApp",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login to an application with valid credentials",
              "fullTitle": "loginApp login to an application with valid credentials",
              "timedOut": null,
              "duration": 8827,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\n//cy.get('Username: ').contains('practice')\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();",
              "err": {},
              "uuid": "9c8fcef1-48ff-42c5-a686-9b6496d76057",
              "parentUUID": "b62db2c1-e316-4c64-a6b9-f5f82ba59d11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "logout to an application",
              "fullTitle": "loginApp logout to an application",
              "timedOut": null,
              "duration": 8405,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\ncy.get('i[class=\"icon-2x icon-signout\"]').click();",
              "err": {},
              "uuid": "164f19e4-5253-424f-907d-cdfe42b4ff8d",
              "parentUUID": "b62db2c1-e316-4c64-a6b9-f5f82ba59d11",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c8fcef1-48ff-42c5-a686-9b6496d76057",
            "164f19e4-5253-424f-907d-cdfe42b4ff8d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17232,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "92b731b7-aeb5-406e-b04b-7b1dd5fb7267",
      "title": "",
      "fullFile": "cypress\\e2e\\loginpagePOM.cy.js",
      "file": "cypress\\e2e\\loginpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "00e22de5-9a00-493f-98c9-0add6f53ec43",
          "title": "Login Page Testcase with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user should login and redirect to secure area",
              "fullTitle": "Login Page Testcase with POM user should login and redirect to secure area",
              "timedOut": null,
              "duration": 6983,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_loginpage.default.enterUsername('practice');\n_loginpage.default.enterPassword('SuperSecretPassword!');\n_loginpage.default.clickLogin();\ncy.url().should('include', '/secure');\n//cy.url().should('include', '/login');\ncy.contains('You logged into a secure area!').should('be.visible');",
              "err": {},
              "uuid": "c8b4ec37-3ea4-4a52-bd71-68b4dcfe6964",
              "parentUUID": "00e22de5-9a00-493f-98c9-0add6f53ec43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid user login should show error message",
              "fullTitle": "Login Page Testcase with POM Invalid user login should show error message",
              "timedOut": null,
              "duration": 5327,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_loginpage.default.enterUsername('abdcdef');\n_loginpage.default.enterPassword('dfdfdfd');\n_loginpage.default.clickLogin();\ncy.contains('Your username is invalid!').should('be.visible');\ncy.url().should('include', '/login');",
              "err": {},
              "uuid": "4633656c-40ce-4955-afa7-53183997e75a",
              "parentUUID": "00e22de5-9a00-493f-98c9-0add6f53ec43",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c8b4ec37-3ea4-4a52-bd71-68b4dcfe6964",
            "4633656c-40ce-4955-afa7-53183997e75a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12310,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8f9dd0aa-4752-48cd-9068-6381a2b34e23",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "file": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f854f984-5006-498c-944d-bff3913d056a",
          "title": "Login Application",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Log in with valid credentials",
              "fullTitle": "Login Application Log in with valid credentials",
              "timedOut": null,
              "duration": 6789,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login('practice', 'SuperSecretPassword!');\ncy.url().should('include', '/secure');",
              "err": {},
              "uuid": "c8d4c7c0-4777-435b-80ba-0c55243a9a84",
              "parentUUID": "f854f984-5006-498c-944d-bff3913d056a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c8d4c7c0-4777-435b-80ba-0c55243a9a84"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6789,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e7107f31-255d-4d80-9be7-56b17e39f023",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "file": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "14bf349a-ad55-46bd-9a74-3380ab826e51",
          "title": "Login with fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs in using data from user.json",
              "fullTitle": "Login with fixture data Logs in using data from user.json",
              "timedOut": null,
              "duration": 8903,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\n// Use fixture data to fill in login form\ncy.get('#username').type(this.userData.username);\ncy.get('#password').type(this.userData.password);\ncy.get('button[type=\"submit\"]').click();\n// Assertion \ncy.url().should('include', '/secure');\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "61f591fd-2530-4bb8-bb8f-ee4cbfd2ad45",
              "parentUUID": "14bf349a-ad55-46bd-9a74-3380ab826e51",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "61f591fd-2530-4bb8-bb8f-ee4cbfd2ad45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8903,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ec55e982-dbb8-4103-b74e-e3b7d81f9567",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "file": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4cbda242-193b-423a-86fa-69f0d676cc39",
          "title": "Login using fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login with form data from JSON file",
              "fullTitle": "Login using fixture data Login with form data from JSON file",
              "timedOut": null,
              "duration": 7275,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Load fixture\ncy.fixture('formData').then(data => {\n  cy.visit('https://practice.expandtesting.com/login');\n  // Fill in the form\n  cy.get('#username').type(data.username);\n  cy.get('#password').type(data.password);\n  cy.get('button[type=\"submit\"]').click();\n  // Validate login success\n  cy.url().should('include', '/secure');\n  cy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n});",
              "err": {},
              "uuid": "d3e8e67b-9ecd-46ca-8793-5d51bc584e60",
              "parentUUID": "4cbda242-193b-423a-86fa-69f0d676cc39",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3e8e67b-9ecd-46ca-8793-5d51bc584e60"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7275,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bb2e91e5-4fd7-4738-8933-7b2a9ec76c31",
      "title": "",
      "fullFile": "cypress\\e2e\\radiobutton_2c.cy.js",
      "file": "cypress\\e2e\\radiobutton_2c.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aeb0c657-ea60-47ef-a11d-91874708ee4e",
          "title": "Select Blue radio button",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select the Blue radio button",
              "fullTitle": "Select Blue radio button Select the Blue radio button",
              "timedOut": null,
              "duration": 4376,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/radio-buttons');\n//blue radio button\ncy.get('input#blue').check().should('be.checked');",
              "err": {},
              "uuid": "4154ad05-1d23-41f7-8bad-6373f03c1088",
              "parentUUID": "aeb0c657-ea60-47ef-a11d-91874708ee4e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4154ad05-1d23-41f7-8bad-6373f03c1088"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4376,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dfd2161b-43bd-438a-9df7-fb58c2b6abdd",
      "title": "",
      "fullFile": "cypress\\e2e\\registernewuserAPI.cy.js",
      "file": "cypress\\e2e\\registernewuserAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "edc524cb-7bbc-4074-b43c-d9f8be3d45f3",
          "title": "Register New User using API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new user",
              "fullTitle": "Register New User using API create a new user",
              "timedOut": null,
              "duration": 743,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//const timestamp = Date.now()\nconst apidata = {\n  name: \"QAtester28\",\n  email: \"sssf28@abcd.com\",\n  password: \"QAPassword28\"\n};\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/register',\n  body: apidata,\n  failOnStatusCode: false // allows manual status check\n}).then(res => {\n  cy.log(res);\n  // Step 2: Assert response status\n  expect(res.status).to.eq(201);\n  // Step 3: Validate success message\n  expect(res.body.message).to.eq('User account created successfully');\n});",
              "err": {},
              "uuid": "caa85626-bfb5-49e1-b351-7dc7afeab5ee",
              "parentUUID": "edc524cb-7bbc-4074-b43c-d9f8be3d45f3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "caa85626-bfb5-49e1-b351-7dc7afeab5ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 743,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3bbfa357-598c-47b3-b796-f566f278264f",
      "title": "",
      "fullFile": "cypress\\e2e\\registrationForm.cy.js",
      "file": "cypress\\e2e\\registrationForm.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ad68aa35-ecc8-4016-a6a3-eec1a7dc8172",
          "title": "Registration Form Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": " Registration Page",
              "fullTitle": "Registration Form Tests  Registration Page",
              "timedOut": null,
              "duration": 6777,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('QATest25');\ncy.get('#password').type('QATest24');\n//cy.get('input#confirmPassword', { timeout: 10000 }).should('be.visible').type('test1234');\ncy.get('#confirmPassword', {\n  timeout: 10000\n}).should('be.visible').type('QATest24');\ncy.get('button[type=submit]').click();\n// Redirect to login and show success message\ncy.url().should('include', '/login');\ncy.get('#flash').should('be.visible').and('contain.text', 'Successfully registered, you can log in now.');",
              "err": {},
              "uuid": "104520b1-648e-4a6e-8117-709c8f1ddb99",
              "parentUUID": "ad68aa35-ecc8-4016-a6a3-eec1a7dc8172",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "username validation",
              "fullTitle": "Registration Form Tests username validation",
              "timedOut": null,
              "duration": 4740,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#password').type('ValidPass');\ncy.get('#confirmPassword').type('ValidPass');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "1ca7da1b-3e81-4212-8580-3cfb3ccd66a1",
              "parentUUID": "ad68aa35-ecc8-4016-a6a3-eec1a7dc8172",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Password validation",
              "fullTitle": "Registration Form Tests Missing Password validation",
              "timedOut": null,
              "duration": 4361,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#confirmPassword').type('test123');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "dd3fb868-add2-4488-849d-41bf05d75c4b",
              "parentUUID": "ad68aa35-ecc8-4016-a6a3-eec1a7dc8172",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Non-matching passwords",
              "fullTitle": "Registration Form Tests Non-matching passwords",
              "timedOut": null,
              "duration": 7271,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#password').type('test123');\ncy.get('#confirmPassword').type('Mismatch123!');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'Passwords do not match.');",
              "err": {},
              "uuid": "1cc230c6-1896-4cf2-aeb9-57fdfc3eb061",
              "parentUUID": "ad68aa35-ecc8-4016-a6a3-eec1a7dc8172",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "104520b1-648e-4a6e-8117-709c8f1ddb99",
            "1ca7da1b-3e81-4212-8580-3cfb3ccd66a1",
            "dd3fb868-add2-4488-849d-41bf05d75c4b",
            "1cc230c6-1896-4cf2-aeb9-57fdfc3eb061"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23149,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5ff94a16-a40e-4256-a6e6-ceb512ce7de9",
      "title": "",
      "fullFile": "cypress\\e2e\\screateNoteAPI.cy.js",
      "file": "cypress\\e2e\\screateNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2fbfd4f1-1286-46af-8f0b-88fd24c85cb4",
          "title": "Create a Note",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a note and return an ID",
              "fullTitle": "Create a Note create a note and return an ID",
              "timedOut": null,
              "duration": 1265,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: 'Test Note',\n    description: 'This is a test note created through API testing.',\n    category: 'Work'\n  }\n}).then(response => {\n  console.log('Response Body:', response.body);\n  cy.log(JSON.stringify(response.body));\n  // Basic response check\n  expect(response.status).to.eq(200);\n  // Adjust according to the actual structure\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.have.property('id');\n  expect(response.body.data.title).to.eq('Test Note');\n});",
              "err": {},
              "uuid": "1f1af9be-4937-4e7a-90aa-7bc8ab9701c2",
              "parentUUID": "2fbfd4f1-1286-46af-8f0b-88fd24c85cb4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f1af9be-4937-4e7a-90aa-7bc8ab9701c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1265,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "99846924-d231-4680-bfb1-a5f518069c2c",
      "title": "",
      "fullFile": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "file": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "scroll in an element",
          "fullTitle": "scroll in an element",
          "timedOut": null,
          "duration": 5577,
          "state": "passed",
          "speed": "medium",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/scrollbars\");\n//scroll in to an element\n//cy.get(\"[id='search-input']\").type(\"scrollbars\")  \ncy.get('[style=\"height:150px;overflow-y: scroll;width:300px;overflow-x:scroll\"]').click();\ncy.get('#hidingButton').scrollIntoView().click();",
          "err": {},
          "uuid": "cd7747c5-e975-42bb-a794-136a23fa4419",
          "parentUUID": "99846924-d231-4680-bfb1-a5f518069c2c",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Drag and drop",
          "fullTitle": "Drag and drop",
          "timedOut": null,
          "duration": 3272,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/drag-and-drop\");\n// Drag Box A and drop it on Box B\ncy.get('#column-a').drag('#column-b');\n// Optional: assert that they’ve swapped\ncy.get('#column-a header').should('have.text', 'B');\ncy.get('#column-b header').should('have.text', 'A');",
          "err": {},
          "uuid": "295b24a0-bf97-4d00-8bc5-5788df8bcc63",
          "parentUUID": "99846924-d231-4680-bfb1-a5f518069c2c",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "cd7747c5-e975-42bb-a794-136a23fa4419",
        "295b24a0-bf97-4d00-8bc5-5788df8bcc63"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 8849,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "dfd1581a-bd5f-4caf-bc10-5cf4fd7904a0",
      "title": "",
      "fullFile": "cypress\\e2e\\securePageTestPom.cy.js",
      "file": "cypress\\e2e\\securePageTestPom.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "An uncaught error was detected outside of a test",
          "fullTitle": "An uncaught error was detected outside of a test",
          "timedOut": null,
          "duration": 237,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\securePageTestPom.cy.js\\\\An uncaught error was detected outside of a test (failed).png\"\n    ]\n  ]\n}",
          "code": "throw err;",
          "err": {
            "message": "TypeError: The following error originated from your test code, not from Cypress.\n\n  > _loginpage.default is not a constructor\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nCypress could not associate this error to any specific test.\n\nWe dynamically generated a new test to display this failure.",
            "estack": "TypeError: The following error originated from your test code, not from Cypress.\n\n  > _loginpage.default is not a constructor\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nCypress could not associate this error to any specific test.\n\nWe dynamically generated a new test to display this failure.\n    at eval (webpack://cypress/./cypress/e2e/securePageTestPom.cy.js:5:18)\n    at eval (https://practice.expandtesting.com/__cypress/tests?p=cypress\\e2e\\securePageTestPom.cy.js:145:3)\n    at eval (https://practice.expandtesting.com/__cypress/tests?p=cypress\\e2e\\securePageTestPom.cy.js:147:12)\n    at eval (<anonymous>)\n    at <unknown> (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:113267:23)\n    at tryCatcher (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Object.gotValue (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:6446:18)\n    at Object.gotAccum (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:6435:25)\n    at Object.tryCatcher (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://practice.expandtesting.com/__cypress/runner/cypress_runner.js:1489:31)",
            "diff": null
          },
          "uuid": "501b1a5c-594d-474b-a2b2-52e01f61c6a2",
          "parentUUID": "dfd1581a-bd5f-4caf-bc10-5cf4fd7904a0",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [
        "501b1a5c-594d-474b-a2b2-52e01f61c6a2"
      ],
      "pending": [],
      "skipped": [],
      "duration": 237,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "cdaea33d-df30-4067-a216-ddf48746bd46",
      "title": "",
      "fullFile": "cypress\\e2e\\usePrevSubject.cy.js",
      "file": "cypress\\e2e\\usePrevSubject.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "950d97ce-9e11-4bdc-8498-418f02928f1a",
          "title": "usePrevSubject",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login using Fillinput",
              "fullTitle": "usePrevSubject Login using Fillinput",
              "timedOut": null,
              "duration": 6841,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Use previous subject\ncy.get('#username').fillinput('practice');\ncy.get('#password').fillinput('SuperSecretPassword!');\ncy.get('#login > .btn').click();\ncy.get('b').should('have.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "2f274bab-c710-4cd0-8703-b2d18a5528bb",
              "parentUUID": "950d97ce-9e11-4bdc-8498-418f02928f1a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f274bab-c710-4cd0-8703-b2d18a5528bb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6841,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fca9cd38-6d25-4fc3-b6b4-95f733f40591",
      "title": "",
      "fullFile": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "file": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eccf2331-de1c-40e6-a401-e42de3d4cdec",
          "title": "Validate Chrome CPU usage matches the label",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "fullTitle": "Validate Chrome CPU usage matches the label Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "timedOut": null,
              "duration": 2759,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\n// Wait until Chrome row appears\ncy.get(\"table.table-striped tbody tr\").each($tr => {\n  const $td = $tr.find('td');\n  const browserName = $td.eq(0).text().trim();\n  if (browserName == 'Chrome') {\n    var _find;\n    const cpuUsageFromTable = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText.trim();\n    cy.get('#chrome-cpu').invoke('text').then(fullText => {\n      const match = fullText.match(/(\\d+(\\.\\d+)?%)/);\n      const cpuUsageFromCard = match ? match[0] : null;\n      expect(cpuUsageFromCard).to.eq(cpuUsageFromTable);\n    });\n  }\n});",
              "err": {},
              "uuid": "94e91316-3608-4a01-b379-74bd7a030b62",
              "parentUUID": "eccf2331-de1c-40e6-a401-e42de3d4cdec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "94e91316-3608-4a01-b379-74bd7a030b62"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2759,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "84f64293-a2a5-4a18-9827-186aeaf5da60",
      "title": "",
      "fullFile": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "file": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "594acdaf-4218-453b-ae83-ed36d3842bb5",
          "title": "Log Each Browsername and its cpu usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "use .each() to log each browser name and its CPU usage.",
              "fullTitle": "Log Each Browsername and its cpu usage use .each() to log each browser name and its CPU usage.",
              "timedOut": null,
              "duration": 2550,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsage = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText;\n  cy.log('Browser Name is ', browsername, 'cpu usage', cpuUsage);\n});",
              "err": {},
              "uuid": "42b5e18c-3656-4f40-88c8-f5bc2262eaf2",
              "parentUUID": "594acdaf-4218-453b-ae83-ed36d3842bb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Count how many browsers have CPU usage over 20%.",
              "fullTitle": "Log Each Browsername and its cpu usage Count how many browsers have CPU usage over 20%.",
              "timedOut": null,
              "duration": 2252,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let count = 0;\ncy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find2;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsageText = (_find2 = [...$td].find(td => td.innerText.includes('%'))) === null || _find2 === void 0 ? void 0 : _find2.innerText;\n  if (cpuUsageText) {\n    const cpuValue = parseFloat(cpuUsageText.replace('%', ''));\n    if (cpuValue > 20) {\n      count++;\n    }\n  }\n}).then(() => {\n  cy.log('Total browser count with>20 % is', count);\n});",
              "err": {},
              "uuid": "bb63e163-ce14-4cd3-91e5-d3c75257c921",
              "parentUUID": "594acdaf-4218-453b-ae83-ed36d3842bb5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42b5e18c-3656-4f40-88c8-f5bc2262eaf2",
            "bb63e163-ce14-4cd3-91e5-d3c75257c921"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4802,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "90d08b87-f5d3-4c02-9b01-f927e6358208",
      "title": "",
      "fullFile": "cypress\\e2e\\LoopNumbers.cy.js",
      "file": "cypress\\e2e\\LoopNumbers.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e9aa8fc3-e3e4-4bc9-96f5-d5ded46b93ed",
          "title": "loop Numbers",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "loop",
              "fullTitle": "loop Numbers loop",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "for (let i = 1; i <= 10; i++) {\n  if (i % 2 === 0) {\n    cy.log(i);\n  }\n}",
              "err": {},
              "uuid": "a0384c4d-3f6b-4474-9a61-6d2e117d4a59",
              "parentUUID": "e9aa8fc3-e3e4-4bc9-96f5-d5ded46b93ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "a0384c4d-3f6b-4474-9a61-6d2e117d4a59"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "328e2193-8f5f-4a0e-97d0-bce150f7a190",
      "title": "",
      "fullFile": "cypress\\e2e\\arrowFunction.cy.js",
      "file": "cypress\\e2e\\arrowFunction.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0f3cad04-ad0a-421f-8184-02cea214e7d5",
          "title": "Multiply three Numbers Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Multiplies three numbers",
              "fullTitle": "Multiply three Numbers Example Multiplies three numbers",
              "timedOut": null,
              "duration": 46,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const multiplyThreeNumbers = (a, b, c) => a * b * c;\nconst result = multiplyThreeNumbers(4, 6, 8);\ncy.log(`The multiplication of three numbers: ${result}`);",
              "err": {},
              "uuid": "d03d922a-f2a7-4984-ba22-8a90a9bdcefb",
              "parentUUID": "0f3cad04-ad0a-421f-8184-02cea214e7d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d03d922a-f2a7-4984-ba22-8a90a9bdcefb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 46,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4de49660-6bd3-4f68-9aac-14b32a292fe6",
      "title": "",
      "fullFile": "cypress\\e2e\\assertionsExamples.cy.js",
      "file": "cypress\\e2e\\assertionsExamples.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "48d4324c-130b-4d77-8606-fce9dfd4a8fa",
          "title": "Assertions Page - Cypress Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should assert element existence, visibility, and text content",
              "fullTitle": "Assertions Page - Cypress Tests should assert element existence, visibility, and text content",
              "timedOut": null,
              "duration": 12775,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/#assertions');\n//Assert: Element exists\ncy.get('.btn-warning').should('exist');\n//cy.get('#exist-element') .should('exist');\n// Assert: Element has specific text\ncy.get('.btn-primary').should('have.text', 'Test Cases');\n// Assert: Element is visible\ncy.get('.btn-success').should('be.visible');",
              "err": {},
              "uuid": "82ebec0b-bf02-445b-8d51-304840182806",
              "parentUUID": "48d4324c-130b-4d77-8606-fce9dfd4a8fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82ebec0b-bf02-445b-8d51-304840182806"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12775,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c716ad56-bb5c-47ca-9b14-cfee79d4f12b",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "file": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e8650227-753f-49c0-8c37-f244dc45db1f",
          "title": "Checkboxes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check and uncheck each checkbox",
              "fullTitle": "Checkboxes check and uncheck each checkbox",
              "timedOut": null,
              "duration": 7520,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/checkboxes');\n// Step 2: Locate all checkboxes (assume input[type=\"checkbox\"] is used)\ncy.get('input[type=\"checkbox\"]').each($checkbox => {\n  // Step 3: Check the checkbox\n  cy.wrap($checkbox).check().should('be.checked');\n  // Step 4: Uncheck the checkbox\n  cy.wrap($checkbox).uncheck().should('not.be.checked');\n});",
              "err": {},
              "uuid": "56412f3c-04ea-4781-9b8c-f20d3e9ebb40",
              "parentUUID": "e8650227-753f-49c0-8c37-f244dc45db1f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "56412f3c-04ea-4781-9b8c-f20d3e9ebb40"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7520,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c0ae7b6a-c472-4182-9e8b-964b55dfc1a3",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxPOM.cy.js",
      "file": "cypress\\e2e\\checkboxPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "88df7504-2cdb-4063-9f11-d7ad190a0bf2",
          "title": "Checkboxes Test with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should check the first checkbox and uncheck the second",
              "fullTitle": "Checkboxes Test with POM Should check the first checkbox and uncheck the second",
              "timedOut": null,
              "duration": 9778,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "checkboxPage.checkFirstBox();\ncheckboxPage.uncheckSecondBox();\ncheckboxPage.validateCheckboxState([true, false]); // Validate both checkboxes",
              "err": {},
              "uuid": "e43e141d-d7e5-4ad0-8119-5fbf19091758",
              "parentUUID": "88df7504-2cdb-4063-9f11-d7ad190a0bf2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e43e141d-d7e5-4ad0-8119-5fbf19091758"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9778,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a6961e0d-4f61-46da-8930-76880c5a115b",
      "title": "",
      "fullFile": "cypress\\e2e\\contextmenuPOM.cy.js",
      "file": "cypress\\e2e\\contextmenuPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a0475152-e20c-4d83-a18c-c049b57de694",
          "title": "Context Menu Interaction Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should right click the box and validate the alert message",
              "fullTitle": "Context Menu Interaction Test Should right click the box and validate the alert message",
              "timedOut": null,
              "duration": 4279,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contextMenuPage.rightClickBox();\n//cy.get('a[target=\"_blank\"]').invoke('removeAttr', 'target').click();\ncontextMenuPage.handleAlert('You selected a context menu');",
              "err": {},
              "uuid": "62dfcb1a-a759-43c1-b82e-ecb98e56f568",
              "parentUUID": "a0475152-e20c-4d83-a18c-c049b57de694",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62dfcb1a-a759-43c1-b82e-ecb98e56f568"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4279,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bf8abef4-cf6f-4b5c-8cef-a41d4b0c624b",
      "title": "",
      "fullFile": "cypress\\e2e\\dataTypes.cy.js",
      "file": "cypress\\e2e\\dataTypes.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5d9a6f86-3e80-4f5f-aaf6-ac0279c0c2b2",
          "title": "datatypes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "arraydatatype",
              "fullTitle": "datatypes arraydatatype",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let numbers = [1, 2, 3, 4, 5];\nlet sum = 0;\nfor (let i = 0; i < numbers.length; i++) {\n  sum += numbers[i];\n  cy.log(\"Sum of the numbers is:\", sum);\n}",
              "err": {},
              "uuid": "ee7b21b8-cdf4-4cca-af0c-e62c4574dd05",
              "parentUUID": "5d9a6f86-3e80-4f5f-aaf6-ac0279c0c2b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ee7b21b8-cdf4-4cca-af0c-e62c4574dd05"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 128,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "be57c9f5-9fef-4362-b701-4d8c2ee3eeba",
      "title": "",
      "fullFile": "cypress\\e2e\\declareVariables.cy.js",
      "file": "cypress\\e2e\\declareVariables.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "285d0a4a-7179-4d01-9dee-5470fe33f1d7",
          "title": "variabledeclaration",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "variablelet",
              "fullTitle": "variabledeclaration variablelet",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let b = 2;\nb = 3;\ncy.log(b);",
              "err": {},
              "uuid": "960b75d4-7566-4e75-bfb1-6e66b446bff5",
              "parentUUID": "285d0a4a-7179-4d01-9dee-5470fe33f1d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "variableconst",
              "fullTitle": "variabledeclaration variableconst",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const c = 3;\nc = 4; //throws Error",
              "err": {},
              "uuid": "c7fa0ffa-90b7-410f-b7f0-b3dd91259778",
              "parentUUID": "285d0a4a-7179-4d01-9dee-5470fe33f1d7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "960b75d4-7566-4e75-bfb1-6e66b446bff5"
          ],
          "failures": [],
          "pending": [
            "c7fa0ffa-90b7-410f-b7f0-b3dd91259778"
          ],
          "skipped": [],
          "duration": 32,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e39e1d91-84dd-42cb-bb35-7bd58687a7f2",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "file": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "830eb341-f6c0-4e8b-9935-d7b1149b3e96",
          "title": "Delete a test note and validate cleanup",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deletes a note and confirms deletion",
              "fullTitle": "Delete a test note and validate cleanup Deletes a note and confirms deletion",
              "timedOut": null,
              "duration": 2690,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1: DELETE /notes/{id}\ncy.request({\n  method: 'DELETE',\n  url: `${baseUrl}/${noteId}`,\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Step 2: Confirm status 204\n  expect(response.status).to.eq(200);\n});\n// Step 3: GET /notes and confirm note is gone\ncy.request({\n  method: 'GET',\n  url: baseUrl,\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  //  //Validate the noteId no longer exists in the list\n  // const notes = response.body\n  // const found = notes.find(note => note.id === noteId)\n  // expect(found).to.be.undefined\n});",
              "err": {},
              "uuid": "e1029aa4-d8c1-4f7b-9067-02ffd9035b52",
              "parentUUID": "830eb341-f6c0-4e8b-9935-d7b1149b3e96",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1029aa4-d8c1-4f7b-9067-02ffd9035b52"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2690,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "368b6764-65b1-41ae-9f3f-af02fd6392f8",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "file": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Delete NotesAPI",
          "fullTitle": "Delete NotesAPI",
          "timedOut": null,
          "duration": 0,
          "state": "pending",
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": true,
          "context": null,
          "code": "cy.get('@token').then(token => {\n  cy.get('@noteId').then(noteId => {\n    cy.request({\n      method: 'DELETE',\n      url: `https://practice.expandtesting.com/notes/api/notes/${noteId}`,\n      headers: {\n        'x-auth-token': token\n      },\n      body: noteData\n    }).then(res => {\n      cy.log(res);\n      expect(res.status).to.eq(200);\n      expect(res.body.message).to.eq('Note successfully deleted');\n    });\n  });\n});",
          "err": {},
          "uuid": "ad465446-bbdc-431d-85e8-02d158006000",
          "parentUUID": "368b6764-65b1-41ae-9f3f-af02fd6392f8",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [],
      "pending": [
        "ad465446-bbdc-431d-85e8-02d158006000"
      ],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "84914fa7-e2e7-4455-9c17-083c929ac2e5",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdownPOM.cy.js",
      "file": "cypress\\e2e\\dropdownPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "13c1276d-fbb6-43f0-b684-9493b6d08708",
          "title": "Dropdown Handling Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should select Option 1 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 1 and validate",
              "timedOut": null,
              "duration": 6869,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 1');\ndropdownPage.getSelectedOption().should('have.text', 'Option 1');",
              "err": {},
              "uuid": "ce9ba263-0210-41de-82fd-41028a4fc528",
              "parentUUID": "13c1276d-fbb6-43f0-b684-9493b6d08708",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should select Option 2 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 2 and validate",
              "timedOut": null,
              "duration": 5086,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 2');\ndropdownPage.getSelectedOption().should('have.text', 'Option 2');",
              "err": {},
              "uuid": "3cb47ef9-f77e-41bf-976a-e15b0f8ca63c",
              "parentUUID": "13c1276d-fbb6-43f0-b684-9493b6d08708",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce9ba263-0210-41de-82fd-41028a4fc528",
            "3cb47ef9-f77e-41bf-976a-e15b0f8ca63c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11955,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "246cf8c3-3c6e-4f63-9aca-3de87e39385a",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdown_2b.cy.js",
      "file": "cypress\\e2e\\dropdown_2b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7e528cfe-6ff5-408c-b517-aec30e920b2e",
          "title": "Select \"India\" from the dropdown",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "select India from the country dropdown",
              "fullTitle": "Select \"India\" from the dropdown select India from the country dropdown",
              "timedOut": null,
              "duration": 5333,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit the dropdown page\ncy.visit('https://practice.expandtesting.com/dropdown');\n// Select \"India\" from the dropdown by visible text\ncy.get('#country').select('India').should('have.value', 'IN');",
              "err": {},
              "uuid": "2d1ef7cb-2292-4a26-af5e-2e135a1dedc8",
              "parentUUID": "7e528cfe-6ff5-408c-b517-aec30e920b2e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2d1ef7cb-2292-4a26-af5e-2e135a1dedc8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5333,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6f325709-15a5-4699-86f5-79a6b430fc4d",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "file": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c5731d5c-87fd-4ab3-92cd-3a2a29fd9f0b",
          "title": "Log browser name and CPU usage on dynamic-table",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs browser and CPU usage",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Logs browser and CPU usage",
              "timedOut": null,
              "duration": 6496,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get('table.table-striped tbody tr').each(($row, index) => {\n  const browserName = $row.find('td').eq(0).text();\n  const cpuUsage = $row.find('td').eq(2).text();\n  cy.get('table.table-striped tbody tr').should('have.length.at.least', 1);\n  cy.log(`Row ${index + 1}: Browser = ${browserName}, CPU Usage = ${cpuUsage}`);\n  expect(browserName).to.not.be.empty;\n  expect(cpuUsage).to.not.be.empty;\n});",
              "err": {},
              "uuid": "cc584efb-2175-4f98-b393-3e9da7980bdc",
              "parentUUID": "c5731d5c-87fd-4ab3-92cd-3a2a29fd9f0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "timedOut": null,
              "duration": 2637,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\nlet cpuAbove15Found = false;\ncy.get(\"table.table-striped tbody tr\").each(($row, rowIndex, $rows) => {\n  const $cells = $row.find('td');\n  const browserName = $cells.eq(0).text().trim(); // 1. Assert browser name is not empty\n  expect(browserName).to.not.be.empty;\n  $cells.each((i, td) => {\n    const cellText = td.innerText;\n    expect(cellText).to.not.be.empty; // 2. Assert no cell is empty\n  });\n  const cpuCell = [...$cells].find(td => td.innerText.includes('%')); // 3. Check if any CPU usage > 15%\n  if (cpuCell) {\n    const cpuValue = parseFloat(cpuCell.innerText.replace('%', ''));\n    if (cpuValue > 15) {\n      cpuAbove15Found = true;\n    }\n  }\n}).then(() => {\n  expect(cpuAbove15Found, \"CPU Usage above 15 not found\").to.be.false; // Final assertion after looping all rows\n});",
              "err": {},
              "uuid": "43f10044-0237-4be3-9e0a-04da528ebd2e",
              "parentUUID": "c5731d5c-87fd-4ab3-92cd-3a2a29fd9f0b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc584efb-2175-4f98-b393-3e9da7980bdc",
            "43f10044-0237-4be3-9e0a-04da528ebd2e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9133,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cdc102f8-4502-45f7-ac78-b2bfd4de3ff5",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "file": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "431e968b-726a-43a6-b19b-6113ec8e40a1",
          "title": "Dynamic Content Validation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should detect dynamic content change after refresh",
              "fullTitle": "Dynamic Content Validation should detect dynamic content change after refresh",
              "timedOut": null,
              "duration": 9035,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dynamic-content');\n// Step 1: Get initial content\nlet firstLoadContent = [];\n_dynamicpage.default.getTextBlocks().then($blocks => {\n  $blocks.each((index, el) => {\n    firstLoadContent.push(el.innerText.trim());\n  });\n  // Step 2: Refresh the page\n  cy.reload();\n  // Step 3: Get new content\n  let secondLoadContent = [];\n  _dynamicpage.default.getTextBlocks().then($newBlocks => {\n    $newBlocks.each((index, el) => {\n      secondLoadContent.push(el.innerText.trim());\n    });\n    // Step 4: Compare the content\n    _dynamicpage.default.compareContent(firstLoadContent, secondLoadContent);\n  });\n});",
              "err": {},
              "uuid": "50f65d61-b57a-47c4-a9ab-8779072aede7",
              "parentUUID": "431e968b-726a-43a6-b19b-6113ec8e40a1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50f65d61-b57a-47c4-a9ab-8779072aede7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9035,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "850fb29e-6f00-4917-9d72-b61e30cfba77",
      "title": "",
      "fullFile": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "file": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "abb0286e-cd0d-4c01-be4d-71d9430fc208",
          "title": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Find the column index for \"Memory\"",
              "fullTitle": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage Find the column index for \"Memory\"",
              "timedOut": null,
              "duration": 7247,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table.table-striped thead tr th\").then($tr => {\n  let memoryColumnIndex = -1;\n  $tr.each((index, th) => {\n    const tr = th.innerText;\n    if (tr == 'Memory') {\n      memoryColumnIndex = index;\n    }\n  });\n  cy.log('Memory column index: ', memoryColumnIndex);\n  cy.get(\"table.table-striped tbody tr\").each($trow => {\n    const $cells = $trow.find('td');\n    const browserName = $cells.eq(0).text().trim();\n    const memory = $cells.eq(memoryColumnIndex).text();\n    cy.log(browserName, ' Memory:', memory);\n  });\n});",
              "err": {},
              "uuid": "d58fb3dd-6ec1-4109-afd2-f4da202f8765",
              "parentUUID": "abb0286e-cd0d-4c01-be4d-71d9430fc208",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d58fb3dd-6ec1-4109-afd2-f4da202f8765"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7247,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a878dc59-c334-4422-854b-cebb07d8d894",
      "title": "",
      "fullFile": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "file": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dbdf11d8-8a04-4307-9056-b2d9523aa854",
          "title": "Fetch All Notes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new note",
              "fullTitle": "Fetch All Notes create a new note",
              "timedOut": null,
              "duration": 2554,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 2: Create a note\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: noteTitle,\n    description: noteDescription,\n    category: 'Personal'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  createdNoteId = response.body.data.id;\n  expect(createdNoteId).to.exist;\n});",
              "err": {},
              "uuid": "0adfda5c-b952-4f3c-a521-a47065b95835",
              "parentUUID": "dbdf11d8-8a04-4307-9056-b2d9523aa854",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch all notes and contain the newly created note",
              "fullTitle": "Fetch All Notes should fetch all notes and contain the newly created note",
              "timedOut": null,
              "duration": 706,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 3: Fetch all notes\ncy.request({\n  method: 'GET',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.be.an('array');\n  // Step 4: Assert the created note exists in the array\n  const found = response.body.data.find(note =>\n  //note.id === createdNoteId && note.title === noteTitle\n  note.title === noteTitle && note.description === noteDescription);\n  expect(found, 'Newly created note should be in the list').to.exist;\n});",
              "err": {},
              "uuid": "7aaa06af-17ca-4beb-83c5-9588924ddd2c",
              "parentUUID": "dbdf11d8-8a04-4307-9056-b2d9523aa854",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0adfda5c-b952-4f3c-a521-a47065b95835",
            "7aaa06af-17ca-4beb-83c5-9588924ddd2c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3260,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d3a9dfd8-701f-4455-9a51-6985f544bcd5",
      "title": "",
      "fullFile": "cypress\\e2e\\functionDeclaration.cy.js",
      "file": "cypress\\e2e\\functionDeclaration.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5594636a-165d-4b1c-90c4-c01a0f5892a6",
          "title": "Logging Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs the welcome message",
              "fullTitle": "Logging Example Logs the welcome message",
              "timedOut": null,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "logWelcome();",
              "err": {},
              "uuid": "8fbf367c-3c9d-49b9-917d-a712051b8a04",
              "parentUUID": "5594636a-165d-4b1c-90c4-c01a0f5892a6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8fbf367c-3c9d-49b9-917d-a712051b8a04"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 31,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a7085548-0c1e-4387-8d5d-a5f0bb3de82c",
      "title": "",
      "fullFile": "cypress\\e2e\\functionExpression.cy.js",
      "file": "cypress\\e2e\\functionExpression.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2d8983a5-fc81-4a53-bffa-c697ed7af210",
          "title": "function expression",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs user email",
              "fullTitle": "function expression Logs user email",
              "timedOut": null,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const printUserEmail = function (email) {\n  cy.log(` User email: ${email}`);\n};\nprintUserEmail('cypresstesting@com');",
              "err": {},
              "uuid": "e45642fd-04ff-4972-8a32-ead4e96e5047",
              "parentUUID": "2d8983a5-fc81-4a53-bffa-c697ed7af210",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e45642fd-04ff-4972-8a32-ead4e96e5047"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "803733fc-3df5-40fb-b7ac-1511e20753d5",
      "title": "",
      "fullFile": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "file": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "45775050-dc71-4b25-84ea-3f3793d3bfd8",
          "title": "OddorEven",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "OddorEven",
              "fullTitle": "OddorEven OddorEven",
              "timedOut": null,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "function evenorodd(number) {\n  if (number % 2 === 0) {\n    cy.log(\"Even\");\n  } else {\n    cy.log(\"Odd\");\n  }\n}\nlet s = evenorodd(6);\ncy.log(s);",
              "err": {},
              "uuid": "bc55a9b3-c7df-46cf-aacc-d56d3e9b079c",
              "parentUUID": "45775050-dc71-4b25-84ea-3f3793d3bfd8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bc55a9b3-c7df-46cf-aacc-d56d3e9b079c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 30,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e3e0ff7c-bbf2-436d-b984-6d0e909aa135",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "62d815f7-07a5-46e1-88ae-c6d5d537ed2f",
          "title": "Login Functinality with Negative scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "invalid username",
              "fullTitle": "Login Functinality with Negative scenarios invalid username",
              "timedOut": null,
              "duration": 10740,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('testAbcd');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid username\ncy.get('#flash').should('be.visible').and('contain.text', 'Your username is invalid!');",
              "err": {},
              "uuid": "0e5cc3f8-79a9-4ddc-8d30-d5918510c923",
              "parentUUID": "62d815f7-07a5-46e1-88ae-c6d5d537ed2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "invalid password",
              "fullTitle": "Login Functinality with Negative scenarios invalid password",
              "timedOut": null,
              "duration": 7927,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('practice');\ncy.get('#password').type('cdeef!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid password\ncy.get('#flash').should('be.visible').and('contain.text', 'Your password is invalid!');",
              "err": {},
              "uuid": "796ef4b1-2a94-43d0-bb98-49a001695f11",
              "parentUUID": "62d815f7-07a5-46e1-88ae-c6d5d537ed2f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0e5cc3f8-79a9-4ddc-8d30-d5918510c923",
            "796ef4b1-2a94-43d0-bb98-49a001695f11"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18667,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c6a71d6d-1683-408d-afc1-8e9e75b4161d",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a64ef622-5223-4551-8b58-7f6b5674fe56",
          "title": "Login Functionality Positive scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login in to application with valid credentials",
              "fullTitle": "Login Functionality Positive scenarios Login in to application with valid credentials",
              "timedOut": null,
              "duration": 9395,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n//Assert URL\ncy.url().should('include', '/secure');\n//Assert Success Message\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n//Assert Logout Button\ncy.get('a.button.secondary.radius').should('be.visible').and('contain.text', 'Logout');",
              "err": {},
              "uuid": "5f7686d5-dad5-42de-92bd-37e8baa9fc26",
              "parentUUID": "a64ef622-5223-4551-8b58-7f6b5674fe56",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5f7686d5-dad5-42de-92bd-37e8baa9fc26"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9395,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3fa5a88b-9311-4cf7-8809-743522ba5787",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandExtractToken.cy.js",
      "file": "cypress\\e2e\\loginandExtractToken.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "95a7faf1-86c9-4a19-833f-6d131e560c9d",
          "title": "User Login API and Extract Token",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "log in and extract the token",
              "fullTitle": "User Login API and Extract Token log in and extract the token",
              "timedOut": null,
              "duration": 1097,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/login',\n  body: apidata,\n  failOnStatusCode: false\n}).then(res => {\n  cy.log(res);\n  // Step 3: Assert response status\n  expect(res.status).to.eq(200);\n  // Step 2: Extract and validate token\n  //expect(response.body).to.have.property('token');\n  cy.log(res.body.message);\n  expect(res.body.message).to.eq(\"Login successful\");\n  const token = res.body.data.token;\n  expect(res.body.data.token).to.not.be.null;\n  //cy.log(authToken)\n  // Save token to alias for reuse\n  cy.wrap(token).as('authToken');\n});",
              "err": {},
              "uuid": "13c2a7d2-ec4e-40dc-b612-a3e378b376b8",
              "parentUUID": "95a7faf1-86c9-4a19-833f-6d131e560c9d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "13c2a7d2-ec4e-40dc-b612-a3e378b376b8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1097,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8f8a5514-437a-4dee-826c-ae75cbd3892f",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "file": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "183470db-af0f-43df-b5da-1f6ef2ef1f36",
          "title": "loginApp",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login to an application with valid credentials",
              "fullTitle": "loginApp login to an application with valid credentials",
              "timedOut": null,
              "duration": 11179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\n//cy.get('Username: ').contains('practice')\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();",
              "err": {},
              "uuid": "251c8e75-f003-435e-945a-fb3cf401fc46",
              "parentUUID": "183470db-af0f-43df-b5da-1f6ef2ef1f36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "logout to an application",
              "fullTitle": "loginApp logout to an application",
              "timedOut": null,
              "duration": 12955,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\ncy.get('i[class=\"icon-2x icon-signout\"]').click();",
              "err": {},
              "uuid": "b1e9fcc5-65f0-4cf5-8ba4-1afea6e6c163",
              "parentUUID": "183470db-af0f-43df-b5da-1f6ef2ef1f36",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "251c8e75-f003-435e-945a-fb3cf401fc46",
            "b1e9fcc5-65f0-4cf5-8ba4-1afea6e6c163"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24134,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ec289934-54b3-40ba-8e0d-31491ed90448",
      "title": "",
      "fullFile": "cypress\\e2e\\loginpagePOM.cy.js",
      "file": "cypress\\e2e\\loginpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f355a558-9920-45d2-b777-2073f7c5464c",
          "title": "Login Page Testcase with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user should login and redirect to secure area",
              "fullTitle": "Login Page Testcase with POM user should login and redirect to secure area",
              "timedOut": null,
              "duration": 9907,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('practice');\nloginPage.enterPassword('SuperSecretPassword!');\nloginPage.clickLogin();\ncy.url().should('include', '/secure');\ncy.contains('You logged into a secure area!').should('be.visible');",
              "err": {},
              "uuid": "d9e1d183-f0a7-46f3-acf9-59bb10f82c6d",
              "parentUUID": "f355a558-9920-45d2-b777-2073f7c5464c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid user login should show error message",
              "fullTitle": "Login Page Testcase with POM Invalid user login should show error message",
              "timedOut": null,
              "duration": 11915,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('abdcdef');\nloginPage.enterPassword('dfdfdfd');\nloginPage.clickLogin();\ncy.contains('Your username is invalid!').should('be.visible');\ncy.url().should('include', '/login');",
              "err": {},
              "uuid": "016a8be7-2f8b-479d-95c2-080227f56cf3",
              "parentUUID": "f355a558-9920-45d2-b777-2073f7c5464c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d9e1d183-f0a7-46f3-acf9-59bb10f82c6d",
            "016a8be7-2f8b-479d-95c2-080227f56cf3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21822,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7fbcad62-3775-4029-8a9b-3069fb147b74",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "file": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2146442c-072f-4394-80a3-4836be1c2b33",
          "title": "Login Application",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Log in with valid credentials",
              "fullTitle": "Login Application Log in with valid credentials",
              "timedOut": null,
              "duration": 8850,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login('practice', 'SuperSecretPassword!');\ncy.url().should('include', '/secure');",
              "err": {},
              "uuid": "da75e8c5-549c-45a4-b8a1-79763cae416c",
              "parentUUID": "2146442c-072f-4394-80a3-4836be1c2b33",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "da75e8c5-549c-45a4-b8a1-79763cae416c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8850,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5eb8be4d-0a70-47eb-860e-0addda03ee77",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "file": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "05ee6e03-9334-4fb8-bb7b-224c64263672",
          "title": "Login with fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs in using data from user.json",
              "fullTitle": "Login with fixture data Logs in using data from user.json",
              "timedOut": null,
              "duration": 8958,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\n// Use fixture data to fill in login form\ncy.get('#username').type(this.userData.username);\ncy.get('#password').type(this.userData.password);\ncy.get('button[type=\"submit\"]').click();\n// Assertion \ncy.url().should('include', '/secure');\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "df1a85bd-07d0-427c-9418-253ab39f1ed8",
              "parentUUID": "05ee6e03-9334-4fb8-bb7b-224c64263672",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "df1a85bd-07d0-427c-9418-253ab39f1ed8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8958,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8d527e9e-825f-474f-8fc0-ead7b4b84e16",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "file": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8a469b7c-b7d6-4a37-b3ed-97cc0634a5c0",
          "title": "Login using fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login with form data from JSON file",
              "fullTitle": "Login using fixture data Login with form data from JSON file",
              "timedOut": null,
              "duration": 10329,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Load fixture\ncy.fixture('formData').then(data => {\n  cy.visit('https://practice.expandtesting.com/login');\n  // Fill in the form\n  cy.get('#username').type(data.username);\n  cy.get('#password').type(data.password);\n  cy.get('button[type=\"submit\"]').click();\n  // Validate login success\n  cy.url().should('include', '/secure');\n  cy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n});",
              "err": {},
              "uuid": "6d5216a5-1383-4104-8d8b-554f56e831f6",
              "parentUUID": "8a469b7c-b7d6-4a37-b3ed-97cc0634a5c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d5216a5-1383-4104-8d8b-554f56e831f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10329,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "30a0f6ac-d155-4730-a4eb-87c06b284ce9",
      "title": "",
      "fullFile": "cypress\\e2e\\radiobutton_2c.cy.js",
      "file": "cypress\\e2e\\radiobutton_2c.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "24f6b0cb-5ae4-4bc9-8239-27ba302319e0",
          "title": "Select Blue radio button",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select the Blue radio button",
              "fullTitle": "Select Blue radio button Select the Blue radio button",
              "timedOut": null,
              "duration": 7363,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/radio-buttons');\n//blue radio button\ncy.get('input#blue').check().should('be.checked');",
              "err": {},
              "uuid": "dc61d27f-292c-412c-8771-82b905bdff3e",
              "parentUUID": "24f6b0cb-5ae4-4bc9-8239-27ba302319e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc61d27f-292c-412c-8771-82b905bdff3e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7363,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0bd11730-958d-4fa7-a02e-f9059caf0d23",
      "title": "",
      "fullFile": "cypress\\e2e\\registernewuserAPI.cy.js",
      "file": "cypress\\e2e\\registernewuserAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "31730949-762e-40df-9053-8d3525bb8097",
          "title": "Register New User using API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new user",
              "fullTitle": "Register New User using API create a new user",
              "timedOut": null,
              "duration": 1609,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//const timestamp = Date.now()\nconst apidata = {\n  name: \"QAtester30\",\n  email: \"sssf29@abcd.com\",\n  password: \"QAPassword29\"\n};\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/register',\n  body: apidata,\n  failOnStatusCode: false // allows manual status check\n}).then(res => {\n  cy.log(res);\n  // Step 2: Assert response status\n  expect(res.status).to.eq(201);\n  // Step 3: Validate success message\n  expect(res.body.message).to.eq('User account created successfully');\n});",
              "err": {},
              "uuid": "a513eb7c-a503-4540-b757-6f541d7c747e",
              "parentUUID": "31730949-762e-40df-9053-8d3525bb8097",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a513eb7c-a503-4540-b757-6f541d7c747e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1609,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b87875e4-c86d-44fd-beb2-324d944027be",
      "title": "",
      "fullFile": "cypress\\e2e\\registrationForm.cy.js",
      "file": "cypress\\e2e\\registrationForm.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "38620334-d80a-4dc7-bd31-0af5a9540136",
          "title": "Registration Form Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": " Registration Page",
              "fullTitle": "Registration Form Tests  Registration Page",
              "timedOut": null,
              "duration": 12870,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('QATest27');\ncy.get('#password').type('QATest26');\n//cy.get('input#confirmPassword', { timeout: 10000 }).should('be.visible').type('test1234');\ncy.get('#confirmPassword', {\n  timeout: 10000\n}).should('be.visible').type('QATest26');\ncy.get('button[type=submit]').click();\n// Redirect to login and show success message\ncy.url().should('include', '/login');\ncy.get('#flash').should('be.visible').and('contain.text', 'Successfully registered, you can log in now.');",
              "err": {},
              "uuid": "138483e3-59b3-4598-8749-e4cc9d0d7935",
              "parentUUID": "38620334-d80a-4dc7-bd31-0af5a9540136",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "username validation",
              "fullTitle": "Registration Form Tests username validation",
              "timedOut": null,
              "duration": 8406,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#password').type('ValidPass');\ncy.get('#confirmPassword').type('ValidPass');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "9a80c5f4-5ec2-40ac-a3a1-d9c83bda421d",
              "parentUUID": "38620334-d80a-4dc7-bd31-0af5a9540136",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Password validation",
              "fullTitle": "Registration Form Tests Missing Password validation",
              "timedOut": null,
              "duration": 5715,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#confirmPassword').type('test123');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "24f66ed6-93f7-4aa1-8a4b-19561d5a65f2",
              "parentUUID": "38620334-d80a-4dc7-bd31-0af5a9540136",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Non-matching passwords",
              "fullTitle": "Registration Form Tests Non-matching passwords",
              "timedOut": null,
              "duration": 5076,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#password').type('test123');\ncy.get('#confirmPassword').type('Mismatch123!');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'Passwords do not match.');",
              "err": {},
              "uuid": "a5fbddef-9d3a-4778-bd38-b9eae8228702",
              "parentUUID": "38620334-d80a-4dc7-bd31-0af5a9540136",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "138483e3-59b3-4598-8749-e4cc9d0d7935",
            "9a80c5f4-5ec2-40ac-a3a1-d9c83bda421d",
            "24f66ed6-93f7-4aa1-8a4b-19561d5a65f2",
            "a5fbddef-9d3a-4778-bd38-b9eae8228702"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32067,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b9ca5686-e28a-4a00-82ae-2ce4d5a87131",
      "title": "",
      "fullFile": "cypress\\e2e\\screateNoteAPI.cy.js",
      "file": "cypress\\e2e\\screateNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1ea9afb9-3c76-4fa6-a189-8ca2ffd2b602",
          "title": "Create a Note",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a note and return an ID",
              "fullTitle": "Create a Note create a note and return an ID",
              "timedOut": null,
              "duration": 1322,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: 'Test Note',\n    description: 'This is a test note created through API testing.',\n    category: 'Work'\n  }\n}).then(response => {\n  console.log('Response Body:', response.body);\n  cy.log(JSON.stringify(response.body));\n  // Basic response check\n  expect(response.status).to.eq(200);\n  // Adjust according to the actual structure\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.have.property('id');\n  expect(response.body.data.title).to.eq('Test Note');\n});",
              "err": {},
              "uuid": "539a0018-dbc3-4e3a-8dfd-616788d52f9a",
              "parentUUID": "1ea9afb9-3c76-4fa6-a189-8ca2ffd2b602",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "539a0018-dbc3-4e3a-8dfd-616788d52f9a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1322,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1795a74b-8d33-4c56-855e-7a52ec37935a",
      "title": "",
      "fullFile": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "file": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "scroll in an element",
          "fullTitle": "scroll in an element",
          "timedOut": null,
          "duration": 4055,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/scrollbars\");\n//scroll in to an element\n//cy.get(\"[id='search-input']\").type(\"scrollbars\")  \ncy.get('[style=\"height:150px;overflow-y: scroll;width:300px;overflow-x:scroll\"]').click();\ncy.get('#hidingButton').scrollIntoView().click();",
          "err": {},
          "uuid": "6678e8a0-9be9-43e8-8fbd-a4ea47a3594d",
          "parentUUID": "1795a74b-8d33-4c56-855e-7a52ec37935a",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Drag and drop",
          "fullTitle": "Drag and drop",
          "timedOut": null,
          "duration": 3053,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/drag-and-drop\");\n// Drag Box A and drop it on Box B\ncy.get('#column-a').drag('#column-b');\n// Optional: assert that they’ve swapped\ncy.get('#column-a header').should('have.text', 'B');\ncy.get('#column-b header').should('have.text', 'A');",
          "err": {},
          "uuid": "50d89e88-7466-44eb-9f00-56fb2a8ddaa6",
          "parentUUID": "1795a74b-8d33-4c56-855e-7a52ec37935a",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "6678e8a0-9be9-43e8-8fbd-a4ea47a3594d",
        "50d89e88-7466-44eb-9f00-56fb2a8ddaa6"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 7108,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "3e73452c-f72c-4c4b-b4a5-2a0a7cd6c3ea",
      "title": "",
      "fullFile": "cypress\\e2e\\securePageTestPom.cy.js",
      "file": "cypress\\e2e\\securePageTestPom.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ec95e713-889b-4fcd-9eff-21f29687e9b1",
          "title": "secure Page Testcase with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user should login and redirect to secure area",
              "fullTitle": "secure Page Testcase with POM user should login and redirect to secure area",
              "timedOut": null,
              "duration": 7492,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('practice');\nloginPage.enterPassword('SuperSecretPassword!');\nloginPage.clickLogin();\nsecurePage.isAtSecurePage();\nsecurePage.getSuccessAlert().should('contain.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "5d8a6b9a-25a3-4110-9eae-3276c75cccac",
              "parentUUID": "ec95e713-889b-4fcd-9eff-21f29687e9b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User should be able to logout successfully",
              "fullTitle": "secure Page Testcase with POM User should be able to logout successfully",
              "timedOut": null,
              "duration": 10170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('practice');\nloginPage.enterPassword('SuperSecretPassword!');\nloginPage.clickLogin();\nsecurePage.logout();\ncy.url().should('include', '/login');\ncy.get('#flash, .flash.info').should('contain.text', 'You logged out of the secure area!'); // Adjust based on actual message",
              "err": {},
              "uuid": "425abdd1-5d82-41f1-88c1-47df7dcadd75",
              "parentUUID": "ec95e713-889b-4fcd-9eff-21f29687e9b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d8a6b9a-25a3-4110-9eae-3276c75cccac",
            "425abdd1-5d82-41f1-88c1-47df7dcadd75"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17662,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f33c0599-2a9c-4b70-bff5-2359d6c923d2",
      "title": "",
      "fullFile": "cypress\\e2e\\usePrevSubject.cy.js",
      "file": "cypress\\e2e\\usePrevSubject.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0811e1ad-dbef-4333-b612-b299b7187225",
          "title": "usePrevSubject",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login using Fillinput",
              "fullTitle": "usePrevSubject Login using Fillinput",
              "timedOut": null,
              "duration": 8123,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Use previous subject\ncy.get('#username').fillinput('practice');\ncy.get('#password').fillinput('SuperSecretPassword!');\ncy.get('#login > .btn').click();\ncy.get('b').should('have.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "b82daa14-f98e-4d9a-84f8-9b95440ee876",
              "parentUUID": "0811e1ad-dbef-4333-b612-b299b7187225",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b82daa14-f98e-4d9a-84f8-9b95440ee876"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8123,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9724e06b-4347-46ea-83bd-5476a88b268e",
      "title": "",
      "fullFile": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "file": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7d580421-5800-4479-a6fb-b1c0e199eac2",
          "title": "Validate Chrome CPU usage matches the label",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "fullTitle": "Validate Chrome CPU usage matches the label Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "timedOut": null,
              "duration": 3459,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\n// Wait until Chrome row appears\ncy.get(\"table.table-striped tbody tr\").each($tr => {\n  const $td = $tr.find('td');\n  const browserName = $td.eq(0).text().trim();\n  if (browserName == 'Chrome') {\n    var _find;\n    const cpuUsageFromTable = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText.trim();\n    cy.get('#chrome-cpu').invoke('text').then(fullText => {\n      const match = fullText.match(/(\\d+(\\.\\d+)?%)/);\n      const cpuUsageFromCard = match ? match[0] : null;\n      expect(cpuUsageFromCard).to.eq(cpuUsageFromTable);\n    });\n  }\n});",
              "err": {},
              "uuid": "f053c49e-88fc-4db4-b717-42fe919f1caa",
              "parentUUID": "7d580421-5800-4479-a6fb-b1c0e199eac2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f053c49e-88fc-4db4-b717-42fe919f1caa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3459,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f9408aa1-6418-4517-a8b3-c4d682080242",
      "title": "",
      "fullFile": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "file": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8434baf7-ea96-4b02-8b6d-147f944fc9a4",
          "title": "Log Each Browsername and its cpu usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "use .each() to log each browser name and its CPU usage.",
              "fullTitle": "Log Each Browsername and its cpu usage use .each() to log each browser name and its CPU usage.",
              "timedOut": null,
              "duration": 3719,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsage = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText;\n  cy.log('Browser Name is ', browsername, 'cpu usage', cpuUsage);\n});",
              "err": {},
              "uuid": "c59ed82b-9ded-406d-9131-8d15a78f3017",
              "parentUUID": "8434baf7-ea96-4b02-8b6d-147f944fc9a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Count how many browsers have CPU usage over 20%.",
              "fullTitle": "Log Each Browsername and its cpu usage Count how many browsers have CPU usage over 20%.",
              "timedOut": null,
              "duration": 3025,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let count = 0;\ncy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find2;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsageText = (_find2 = [...$td].find(td => td.innerText.includes('%'))) === null || _find2 === void 0 ? void 0 : _find2.innerText;\n  if (cpuUsageText) {\n    const cpuValue = parseFloat(cpuUsageText.replace('%', ''));\n    if (cpuValue > 20) {\n      count++;\n    }\n  }\n}).then(() => {\n  cy.log('Total browser count with>20 % is', count);\n});",
              "err": {},
              "uuid": "a1f628f5-5fc5-41bd-b875-f003be698e0f",
              "parentUUID": "8434baf7-ea96-4b02-8b6d-147f944fc9a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c59ed82b-9ded-406d-9131-8d15a78f3017",
            "a1f628f5-5fc5-41bd-b875-f003be698e0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6744,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a1deab7f-06b1-4601-935e-cc1f22e9b5b9",
      "title": "",
      "fullFile": "cypress\\e2e\\LoopNumbers.cy.js",
      "file": "cypress\\e2e\\LoopNumbers.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b3971182-12ef-4556-abcf-230dbec042b1",
          "title": "loop Numbers",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "loop",
              "fullTitle": "loop Numbers loop",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "for (let i = 1; i <= 10; i++) {\n  if (i % 2 === 0) {\n    cy.log(i);\n  }\n}",
              "err": {},
              "uuid": "c51ab8e8-e024-4c5c-b0a1-e63b6126d13b",
              "parentUUID": "b3971182-12ef-4556-abcf-230dbec042b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "c51ab8e8-e024-4c5c-b0a1-e63b6126d13b"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}