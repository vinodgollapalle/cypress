{
  "stats": {
    "suites": 36,
    "tests": 49,
    "passes": 46,
    "pending": 3,
    "failures": 0,
    "testsRegistered": 49,
    "passPercent": 93.87755102040816,
    "pendingPercent": 6.122448979591836,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-08-14T16:04:45.154Z",
    "end": "2025-08-14T16:11:51.922Z",
    "duration": 426768
  },
  "results": [
    {
      "uuid": "3c6d5dc4-0b6b-4027-8df1-6b147bfa7375",
      "title": "",
      "fullFile": "cypress\\e2e\\arrowFunction.cy.js",
      "file": "cypress\\e2e\\arrowFunction.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f91e0d1f-4e05-44b5-a336-f3e9b6057b6a",
          "title": "Multiply three Numbers Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Multiplies three numbers",
              "fullTitle": "Multiply three Numbers Example Multiplies three numbers",
              "timedOut": null,
              "duration": 55,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const multiplyThreeNumbers = (a, b, c) => a * b * c;\nconst result = multiplyThreeNumbers(4, 6, 8);\ncy.log(`The multiplication of three numbers: ${result}`);",
              "err": {},
              "uuid": "187805ba-55c6-4731-9743-40563f659b10",
              "parentUUID": "f91e0d1f-4e05-44b5-a336-f3e9b6057b6a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "187805ba-55c6-4731-9743-40563f659b10"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 55,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "aa7b6de4-254d-4046-8c55-4448312d70a7",
      "title": "",
      "fullFile": "cypress\\e2e\\assertionsExamples.cy.js",
      "file": "cypress\\e2e\\assertionsExamples.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8392c2bf-0910-4398-b1f4-6052efe54e8b",
          "title": "Assertions Page - Cypress Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should assert element existence, visibility, and text content",
              "fullTitle": "Assertions Page - Cypress Tests should assert element existence, visibility, and text content",
              "timedOut": null,
              "duration": 10989,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/#assertions');\n//Assert: Element exists\ncy.get('.btn-warning').should('exist');\n//cy.get('#exist-element') .should('exist');\n// Assert: Element has specific text\ncy.get('.btn-primary').should('have.text', 'Test Cases');\n// Assert: Element is visible\ncy.get('.btn-success').should('be.visible');",
              "err": {},
              "uuid": "32306a7a-3303-4352-bb4c-a5e9e6c4189d",
              "parentUUID": "8392c2bf-0910-4398-b1f4-6052efe54e8b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "32306a7a-3303-4352-bb4c-a5e9e6c4189d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10989,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e485578f-4373-40bd-9d7a-7e6683201bdc",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "file": "cypress\\e2e\\checkboxInteractions_2a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c5e0ee00-77ec-4049-99fb-c1292eaf480c",
          "title": "Checkboxes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check and uncheck each checkbox",
              "fullTitle": "Checkboxes check and uncheck each checkbox",
              "timedOut": null,
              "duration": 8341,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/checkboxes');\n// Step 2: Locate all checkboxes (assume input[type=\"checkbox\"] is used)\ncy.get('input[type=\"checkbox\"]').each($checkbox => {\n  // Step 3: Check the checkbox\n  cy.wrap($checkbox).check().should('be.checked');\n  // Step 4: Uncheck the checkbox\n  cy.wrap($checkbox).uncheck().should('not.be.checked');\n});",
              "err": {},
              "uuid": "73433910-b602-4862-83fe-fa9b680fc26a",
              "parentUUID": "c5e0ee00-77ec-4049-99fb-c1292eaf480c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73433910-b602-4862-83fe-fa9b680fc26a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8341,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "12ef2086-c5e8-40f7-a690-85de96e6ba1a",
      "title": "",
      "fullFile": "cypress\\e2e\\checkboxPOM.cy.js",
      "file": "cypress\\e2e\\checkboxPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6722a03b-7026-4b75-b7a7-c85fea291ec3",
          "title": "Checkboxes Test with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should check the first checkbox and uncheck the second",
              "fullTitle": "Checkboxes Test with POM Should check the first checkbox and uncheck the second",
              "timedOut": null,
              "duration": 8559,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "checkboxPage.checkFirstBox();\ncheckboxPage.uncheckSecondBox();\ncheckboxPage.validateCheckboxState([true, false]); // Validate both checkboxes",
              "err": {},
              "uuid": "9f84d9be-19dc-4996-b1bf-861c8059b0ad",
              "parentUUID": "6722a03b-7026-4b75-b7a7-c85fea291ec3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9f84d9be-19dc-4996-b1bf-861c8059b0ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8559,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3c8acc3b-79cb-482e-a850-cf541da28222",
      "title": "",
      "fullFile": "cypress\\e2e\\contextmenuPOM.cy.js",
      "file": "cypress\\e2e\\contextmenuPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c64b8c37-d9a7-4e00-b810-e6ff35cd5557",
          "title": "Context Menu Interaction Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should right click the box and validate the alert message",
              "fullTitle": "Context Menu Interaction Test Should right click the box and validate the alert message",
              "timedOut": null,
              "duration": 4631,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contextMenuPage.rightClickBox();\n//cy.get('a[target=\"_blank\"]').invoke('removeAttr', 'target').click();\ncontextMenuPage.handleAlert('You selected a context menu');",
              "err": {},
              "uuid": "964e0ee9-26e8-4544-a560-ece619059202",
              "parentUUID": "c64b8c37-d9a7-4e00-b810-e6ff35cd5557",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "964e0ee9-26e8-4544-a560-ece619059202"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4631,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1a6d7586-9ec1-47f1-9994-e74d836ffd88",
      "title": "",
      "fullFile": "cypress\\e2e\\dataTypes.cy.js",
      "file": "cypress\\e2e\\dataTypes.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c4b02eb2-97f4-4423-b99f-75c7b38c2a75",
          "title": "datatypes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "arraydatatype",
              "fullTitle": "datatypes arraydatatype",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let numbers = [1, 2, 3, 4, 5];\nlet sum = 0;\nfor (let i = 0; i < numbers.length; i++) {\n  sum += numbers[i];\n  cy.log(\"Sum of the numbers is:\", sum);\n}",
              "err": {},
              "uuid": "06b8864c-8800-44ee-aab6-0ef64e0286e5",
              "parentUUID": "c4b02eb2-97f4-4423-b99f-75c7b38c2a75",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06b8864c-8800-44ee-aab6-0ef64e0286e5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 102,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7dc64280-c6ec-49d6-8454-0dc7b8205af4",
      "title": "",
      "fullFile": "cypress\\e2e\\declareVariables.cy.js",
      "file": "cypress\\e2e\\declareVariables.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8cf9e903-3adb-4ad9-82f2-99806d8c7d66",
          "title": "variabledeclaration",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "variablelet",
              "fullTitle": "variabledeclaration variablelet",
              "timedOut": null,
              "duration": 58,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let b = 2;\nb = 3;\ncy.log(b);",
              "err": {},
              "uuid": "63ea808f-a74f-483a-a1fa-28fb85fc180f",
              "parentUUID": "8cf9e903-3adb-4ad9-82f2-99806d8c7d66",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "variableconst",
              "fullTitle": "variabledeclaration variableconst",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const c = 3;\nc = 4; //throws Error",
              "err": {},
              "uuid": "8dd1a159-5dd2-4f4f-9a9a-55de82f7cce7",
              "parentUUID": "8cf9e903-3adb-4ad9-82f2-99806d8c7d66",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "63ea808f-a74f-483a-a1fa-28fb85fc180f"
          ],
          "failures": [],
          "pending": [
            "8dd1a159-5dd2-4f4f-9a9a-55de82f7cce7"
          ],
          "skipped": [],
          "duration": 58,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5798be49-28bf-4b43-b881-95217860495d",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "file": "cypress\\e2e\\deleteNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ced4e65f-8708-4ba4-9e54-5728c1b64d8b",
          "title": "Delete a test note and validate cleanup",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deletes a note and confirms deletion",
              "fullTitle": "Delete a test note and validate cleanup Deletes a note and confirms deletion",
              "timedOut": null,
              "duration": 2393,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1: DELETE /notes/{id}\ncy.request({\n  method: 'DELETE',\n  url: `${baseUrl}/${noteId}`,\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Step 2: Confirm status 204\n  expect(response.status).to.eq(200);\n});\n// Step 3: GET /notes and confirm note is gone\ncy.request({\n  method: 'GET',\n  url: baseUrl,\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  //  //Validate the noteId no longer exists in the list\n  // const notes = response.body\n  // const found = notes.find(note => note.id === noteId)\n  // expect(found).to.be.undefined\n});",
              "err": {},
              "uuid": "7f1f8606-0b91-403d-8d43-8d9d3c3f1b52",
              "parentUUID": "ced4e65f-8708-4ba4-9e54-5728c1b64d8b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f1f8606-0b91-403d-8d43-8d9d3c3f1b52"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2393,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a159e6d6-6982-453c-b7f6-7f452ac93c1f",
      "title": "",
      "fullFile": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "file": "cypress\\e2e\\deleteNotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Delete NotesAPI",
          "fullTitle": "Delete NotesAPI",
          "timedOut": null,
          "duration": 0,
          "state": "pending",
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": true,
          "context": null,
          "code": "cy.get('@token').then(token => {\n  cy.get('@noteId').then(noteId => {\n    cy.request({\n      method: 'DELETE',\n      url: `https://practice.expandtesting.com/notes/api/notes/${noteId}`,\n      headers: {\n        'x-auth-token': token\n      },\n      body: noteData\n    }).then(res => {\n      cy.log(res);\n      expect(res.status).to.eq(200);\n      expect(res.body.message).to.eq('Note successfully deleted');\n    });\n  });\n});",
          "err": {},
          "uuid": "9f64a585-4019-4973-a052-b5f011e2d04f",
          "parentUUID": "a159e6d6-6982-453c-b7f6-7f452ac93c1f",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [],
      "pending": [
        "9f64a585-4019-4973-a052-b5f011e2d04f"
      ],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "79a29cf0-c788-4dbe-97b7-96a9303ee05b",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdownPOM.cy.js",
      "file": "cypress\\e2e\\dropdownPOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "186a3b8d-ff6a-4d4a-a74c-17aaff35a465",
          "title": "Dropdown Handling Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should select Option 1 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 1 and validate",
              "timedOut": null,
              "duration": 7720,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 1');\ndropdownPage.getSelectedOption().should('have.text', 'Option 1');",
              "err": {},
              "uuid": "5a84f709-9fc1-4c1a-bfcb-2ed3a9f66ab4",
              "parentUUID": "186a3b8d-ff6a-4d4a-a74c-17aaff35a465",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should select Option 2 and validate",
              "fullTitle": "Dropdown Handling Tests Should select Option 2 and validate",
              "timedOut": null,
              "duration": 3878,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dropdownPage.selectOption('Option 2');\ndropdownPage.getSelectedOption().should('have.text', 'Option 2');",
              "err": {},
              "uuid": "510f33fb-4eb6-4932-a9c4-7565e2272e7c",
              "parentUUID": "186a3b8d-ff6a-4d4a-a74c-17aaff35a465",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5a84f709-9fc1-4c1a-bfcb-2ed3a9f66ab4",
            "510f33fb-4eb6-4932-a9c4-7565e2272e7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11598,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8cc0c550-ebd2-48b8-8a92-81e5bd0cf418",
      "title": "",
      "fullFile": "cypress\\e2e\\dropdown_2b.cy.js",
      "file": "cypress\\e2e\\dropdown_2b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "207a2d80-2236-42db-91ea-3e03ed343115",
          "title": "Select \"India\" from the dropdown",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "select India from the country dropdown",
              "fullTitle": "Select \"India\" from the dropdown select India from the country dropdown",
              "timedOut": null,
              "duration": 5833,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit the dropdown page\ncy.visit('https://practice.expandtesting.com/dropdown');\n// Select \"India\" from the dropdown by visible text\ncy.get('#country').select('India').should('have.value', 'IN');",
              "err": {},
              "uuid": "39285b61-596e-41fd-8e72-591952ad4164",
              "parentUUID": "207a2d80-2236-42db-91ea-3e03ed343115",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "39285b61-596e-41fd-8e72-591952ad4164"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5833,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6d4f067c-7399-4f67-974d-9261c88a0a3b",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "file": "cypress\\e2e\\dynamicHTMLTable_7.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "57644e9d-b99f-4f1e-bbad-1075f903b661",
          "title": "Log browser name and CPU usage on dynamic-table",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs browser and CPU usage",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Logs browser and CPU usage",
              "timedOut": null,
              "duration": 4202,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get('table.table-striped tbody tr').each(($row, index) => {\n  const browserName = $row.find('td').eq(0).text();\n  const cpuUsage = $row.find('td').eq(2).text();\n  cy.get('table.table-striped tbody tr').should('have.length.at.least', 1);\n  cy.log(`Row ${index + 1}: Browser = ${browserName}, CPU Usage = ${cpuUsage}`);\n  expect(browserName).to.not.be.empty;\n  expect(cpuUsage).to.not.be.empty;\n});",
              "err": {},
              "uuid": "e4a0be29-4c72-4cd9-838f-f3dd76c99718",
              "parentUUID": "57644e9d-b99f-4f1e-bbad-1075f903b661",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "fullTitle": "Log browser name and CPU usage on dynamic-table Assert No cell is empty and Verify at least one browser has CPU usage above 15%",
              "timedOut": null,
              "duration": 7663,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\nlet cpuAbove15Found = false;\ncy.get(\"table.table-striped tbody tr\").each(($row, rowIndex, $rows) => {\n  const $cells = $row.find('td');\n  const browserName = $cells.eq(0).text().trim(); // 1. Assert browser name is not empty\n  expect(browserName).to.not.be.empty;\n  $cells.each((i, td) => {\n    const cellText = td.innerText;\n    expect(cellText).to.not.be.empty; // 2. Assert no cell is empty\n  });\n  const cpuCell = [...$cells].find(td => td.innerText.includes('%')); // 3. Check if any CPU usage > 15%\n  if (cpuCell) {\n    const cpuValue = parseFloat(cpuCell.innerText.replace('%', ''));\n    if (cpuValue > 15) {\n      cpuAbove15Found = true;\n    }\n  }\n}).then(() => {\n  expect(cpuAbove15Found, \"CPU Usage above 15 not found\").to.be.false; // Final assertion after looping all rows\n});",
              "err": {},
              "uuid": "a05684ae-555b-44d9-afa0-f90671d81af7",
              "parentUUID": "57644e9d-b99f-4f1e-bbad-1075f903b661",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e4a0be29-4c72-4cd9-838f-f3dd76c99718",
            "a05684ae-555b-44d9-afa0-f90671d81af7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11865,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c8b49c87-12b5-4dad-b628-d9bd5c6871db",
      "title": "",
      "fullFile": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "file": "cypress\\e2e\\dynamicpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0987cd5f-2a3a-4cb7-975e-0f2c8e39ad07",
          "title": "Dynamic Content Validation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should detect dynamic content change after refresh",
              "fullTitle": "Dynamic Content Validation should detect dynamic content change after refresh",
              "timedOut": null,
              "duration": 9552,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/dynamic-content');\n// Step 1: Get initial content\nlet firstLoadContent = [];\n_dynamicpage.default.getTextBlocks().then($blocks => {\n  $blocks.each((index, el) => {\n    firstLoadContent.push(el.innerText.trim());\n  });\n  // Step 2: Refresh the page\n  cy.reload();\n  // Step 3: Get new content\n  let secondLoadContent = [];\n  _dynamicpage.default.getTextBlocks().then($newBlocks => {\n    $newBlocks.each((index, el) => {\n      secondLoadContent.push(el.innerText.trim());\n    });\n    // Step 4: Compare the content\n    _dynamicpage.default.compareContent(firstLoadContent, secondLoadContent);\n  });\n});",
              "err": {},
              "uuid": "90813074-1d78-46d6-b250-77e872bdf1c9",
              "parentUUID": "0987cd5f-2a3a-4cb7-975e-0f2c8e39ad07",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "90813074-1d78-46d6-b250-77e872bdf1c9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9552,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1c50d87d-4c7f-43a2-9c60-4d88dc886ba8",
      "title": "",
      "fullFile": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "file": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2079c953-8151-44bc-a402-9d8e35276d71",
          "title": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Find the column index for \"Memory\"",
              "fullTitle": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage Find the column index for \"Memory\"",
              "timedOut": null,
              "duration": 5784,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table.table-striped thead tr th\").then($tr => {\n  let memoryColumnIndex = -1;\n  $tr.each((index, th) => {\n    const tr = th.innerText;\n    if (tr == 'Memory') {\n      memoryColumnIndex = index;\n    }\n  });\n  cy.log('Memory column index: ', memoryColumnIndex);\n  cy.get(\"table.table-striped tbody tr\").each($trow => {\n    const $cells = $trow.find('td');\n    const browserName = $cells.eq(0).text().trim();\n    const memory = $cells.eq(memoryColumnIndex).text();\n    cy.log(browserName, ' Memory:', memory);\n  });\n});",
              "err": {},
              "uuid": "18e81049-e10b-490d-8967-8b1479a97316",
              "parentUUID": "2079c953-8151-44bc-a402-9d8e35276d71",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "18e81049-e10b-490d-8967-8b1479a97316"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5784,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2b7afce7-f11e-44c9-8aeb-651b8661c910",
      "title": "",
      "fullFile": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "file": "cypress\\e2e\\fetchAllnotesAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "66e7fba1-664a-4142-a949-c286b1ab0ec9",
          "title": "Fetch All Notes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new note",
              "fullTitle": "Fetch All Notes create a new note",
              "timedOut": null,
              "duration": 3746,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 2: Create a note\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: noteTitle,\n    description: noteDescription,\n    category: 'Personal'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  createdNoteId = response.body.data.id;\n  expect(createdNoteId).to.exist;\n});",
              "err": {},
              "uuid": "8dca6dcb-79b9-4b57-93b5-b9c31ef02bd9",
              "parentUUID": "66e7fba1-664a-4142-a949-c286b1ab0ec9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch all notes and contain the newly created note",
              "fullTitle": "Fetch All Notes should fetch all notes and contain the newly created note",
              "timedOut": null,
              "duration": 993,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 3: Fetch all notes\ncy.request({\n  method: 'GET',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.be.an('array');\n  // Step 4: Assert the created note exists in the array\n  const found = response.body.data.find(note =>\n  //note.id === createdNoteId && note.title === noteTitle\n  note.title === noteTitle && note.description === noteDescription);\n  expect(found, 'Newly created note should be in the list').to.exist;\n});",
              "err": {},
              "uuid": "aeaed3be-8413-4246-a65e-0d1f28754a69",
              "parentUUID": "66e7fba1-664a-4142-a949-c286b1ab0ec9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8dca6dcb-79b9-4b57-93b5-b9c31ef02bd9",
            "aeaed3be-8413-4246-a65e-0d1f28754a69"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4739,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "eaaca156-b174-4ed2-b211-7d8c8f7966af",
      "title": "",
      "fullFile": "cypress\\e2e\\functionDeclaration.cy.js",
      "file": "cypress\\e2e\\functionDeclaration.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "096c86be-869e-42cb-92a4-2227af66e0bd",
          "title": "Logging Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs the welcome message",
              "fullTitle": "Logging Example Logs the welcome message",
              "timedOut": null,
              "duration": 41,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "logWelcome();",
              "err": {},
              "uuid": "114aa492-7954-4d9c-8e20-84a2c5a84bfb",
              "parentUUID": "096c86be-869e-42cb-92a4-2227af66e0bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "114aa492-7954-4d9c-8e20-84a2c5a84bfb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 41,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "18d19828-54af-4f4d-b372-e95e11a7528f",
      "title": "",
      "fullFile": "cypress\\e2e\\functionExpression.cy.js",
      "file": "cypress\\e2e\\functionExpression.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "46078289-7541-4f48-a9e4-807aa89596cf",
          "title": "function expression",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs user email",
              "fullTitle": "function expression Logs user email",
              "timedOut": null,
              "duration": 50,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const printUserEmail = function (email) {\n  cy.log(` User email: ${email}`);\n};\nprintUserEmail('cypresstesting@com');",
              "err": {},
              "uuid": "29fbd8a7-26bb-44ca-91e5-c29e164d8b8d",
              "parentUUID": "46078289-7541-4f48-a9e4-807aa89596cf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "29fbd8a7-26bb-44ca-91e5-c29e164d8b8d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 50,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "87796946-b9d0-4e63-8624-1715431ef5f7",
      "title": "",
      "fullFile": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "file": "cypress\\e2e\\functionswithevenorodd.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "db77e87a-8b8a-48e8-b9c0-7e1d4701ea0e",
          "title": "OddorEven",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "OddorEven",
              "fullTitle": "OddorEven OddorEven",
              "timedOut": null,
              "duration": 51,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "function evenorodd(number) {\n  if (number % 2 === 0) {\n    cy.log(\"Even\");\n  } else {\n    cy.log(\"Odd\");\n  }\n}\nlet s = evenorodd(6);\ncy.log(s);",
              "err": {},
              "uuid": "265622b9-dafd-43ef-90ad-4b150ba94d58",
              "parentUUID": "db77e87a-8b8a-48e8-b9c0-7e1d4701ea0e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "265622b9-dafd-43ef-90ad-4b150ba94d58"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 51,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f2b56321-dd9e-4371-9d69-db756d6e4bff",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityNegative.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "633b8169-f449-4ce4-ae7e-3e42b21d3dbc",
          "title": "Login Functinality with Negative scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "invalid username",
              "fullTitle": "Login Functinality with Negative scenarios invalid username",
              "timedOut": null,
              "duration": 13110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('testAbcd');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid username\ncy.get('#flash').should('be.visible').and('contain.text', 'Your username is invalid!');",
              "err": {},
              "uuid": "47b68ca8-ed31-4d84-b630-7e89414f3a19",
              "parentUUID": "633b8169-f449-4ce4-ae7e-3e42b21d3dbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "invalid password",
              "fullTitle": "Login Functinality with Negative scenarios invalid password",
              "timedOut": null,
              "duration": 9214,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('practice');\ncy.get('#password').type('cdeef!');\ncy.get('button[type=\"submit\"]').click();\n// Assert error message for invalid password\ncy.get('#flash').should('be.visible').and('contain.text', 'Your password is invalid!');",
              "err": {},
              "uuid": "4114e187-a72a-419e-83ea-e38e04c13040",
              "parentUUID": "633b8169-f449-4ce4-ae7e-3e42b21d3dbc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "47b68ca8-ed31-4d84-b630-7e89414f3a19",
            "4114e187-a72a-419e-83ea-e38e04c13040"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22324,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "32f8ad7d-8afd-4548-8b0a-d51b056036aa",
      "title": "",
      "fullFile": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "file": "cypress\\e2e\\loginFunctionalityPositive.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7b5ca339-0a9a-4b0c-bfca-f50b9ab13633",
          "title": "Login Functionality Positive scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login in to application with valid credentials",
              "fullTitle": "Login Functionality Positive scenarios Login in to application with valid credentials",
              "timedOut": null,
              "duration": 11663,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\n//Assert URL\ncy.url().should('include', '/secure');\n//Assert Success Message\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n//Assert Logout Button\ncy.get('a.button.secondary.radius').should('be.visible').and('contain.text', 'Logout');",
              "err": {},
              "uuid": "0b6fc371-6c0d-43ff-8e4e-feaba7a55381",
              "parentUUID": "7b5ca339-0a9a-4b0c-bfca-f50b9ab13633",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b6fc371-6c0d-43ff-8e4e-feaba7a55381"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11663,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "89fcf089-7061-4079-bf52-bc510bd77391",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandExtractToken.cy.js",
      "file": "cypress\\e2e\\loginandExtractToken.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6b3123d4-4a90-4b61-aac5-1bbaea802d68",
          "title": "User Login API and Extract Token",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "log in and extract the token",
              "fullTitle": "User Login API and Extract Token log in and extract the token",
              "timedOut": null,
              "duration": 1828,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/login',\n  body: apidata,\n  failOnStatusCode: false\n}).then(res => {\n  cy.log(res);\n  // Step 3: Assert response status\n  expect(res.status).to.eq(200);\n  // Step 2: Extract and validate token\n  //expect(response.body).to.have.property('token');\n  cy.log(res.body.message);\n  expect(res.body.message).to.eq(\"Login successful\");\n  const token = res.body.data.token;\n  expect(res.body.data.token).to.not.be.null;\n  //cy.log(authToken)\n  // Save token to alias for reuse\n  cy.wrap(token).as('authToken');\n});",
              "err": {},
              "uuid": "1ae23dc2-1c9a-4f53-93a6-a8b7257e500d",
              "parentUUID": "6b3123d4-4a90-4b61-aac5-1bbaea802d68",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ae23dc2-1c9a-4f53-93a6-a8b7257e500d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1828,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e89b475c-899a-414e-9848-4780c769c0d7",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "file": "cypress\\e2e\\loginandlogoutApplication.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8b44ed98-3686-4331-bf1e-8447c916cef3",
          "title": "loginApp",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login to an application with valid credentials",
              "fullTitle": "loginApp login to an application with valid credentials",
              "timedOut": null,
              "duration": 13606,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\n//cy.get('Username: ').contains('practice')\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();",
              "err": {},
              "uuid": "c1254ee3-7ef5-4d37-98be-f5b9f171a076",
              "parentUUID": "8b44ed98-3686-4331-bf1e-8447c916cef3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "logout to an application",
              "fullTitle": "loginApp logout to an application",
              "timedOut": null,
              "duration": 10940,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://practice.expandtesting.com/login\");\ncy.get('#username').type('practice');\ncy.get('#password').type('SuperSecretPassword!');\ncy.get('button[type=\"submit\"]').click();\ncy.get('i[class=\"icon-2x icon-signout\"]').click();",
              "err": {},
              "uuid": "e9cb5298-d595-4e65-a229-697c2740aa0c",
              "parentUUID": "8b44ed98-3686-4331-bf1e-8447c916cef3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c1254ee3-7ef5-4d37-98be-f5b9f171a076",
            "e9cb5298-d595-4e65-a229-697c2740aa0c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24546,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "860c8dba-59d1-452a-ac12-ea8f91988a3e",
      "title": "",
      "fullFile": "cypress\\e2e\\loginpagePOM.cy.js",
      "file": "cypress\\e2e\\loginpagePOM.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "be178442-800c-4ce0-83d2-7bf485e52faf",
          "title": "Login Page Testcase with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user should login and redirect to secure area",
              "fullTitle": "Login Page Testcase with POM user should login and redirect to secure area",
              "timedOut": null,
              "duration": 12284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('practice');\nloginPage.enterPassword('SuperSecretPassword!');\nloginPage.clickLogin();\ncy.url().should('include', '/secure');\ncy.contains('You logged into a secure area!').should('be.visible');",
              "err": {},
              "uuid": "e3da8dd5-4075-48d6-8cac-c398c5fc0a87",
              "parentUUID": "be178442-800c-4ce0-83d2-7bf485e52faf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid user login should show error message",
              "fullTitle": "Login Page Testcase with POM Invalid user login should show error message",
              "timedOut": null,
              "duration": 8665,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('abdcdef');\nloginPage.enterPassword('dfdfdfd');\nloginPage.clickLogin();\ncy.contains('Your username is invalid!').should('be.visible');\ncy.url().should('include', '/login');",
              "err": {},
              "uuid": "efda1b8b-6eca-47a6-a5f5-1a6a06e1f476",
              "parentUUID": "be178442-800c-4ce0-83d2-7bf485e52faf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e3da8dd5-4075-48d6-8cac-c398c5fc0a87",
            "efda1b8b-6eca-47a6-a5f5-1a6a06e1f476"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20949,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e5d26e53-e4be-4ed4-981a-c01e45616266",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "file": "cypress\\e2e\\loginwithCustomcommands.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a54d8c24-de61-480a-b595-e9b7871494c8",
          "title": "Login Application",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Log in with valid credentials",
              "fullTitle": "Login Application Log in with valid credentials",
              "timedOut": null,
              "duration": 12886,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login('practice', 'SuperSecretPassword!');\ncy.url().should('include', '/secure');",
              "err": {},
              "uuid": "63a5f39e-e17b-44bc-ba7b-a94b43faa511",
              "parentUUID": "a54d8c24-de61-480a-b595-e9b7871494c8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "63a5f39e-e17b-44bc-ba7b-a94b43faa511"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12886,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4243eaa6-3b42-4026-8dfd-a69543f8b0a9",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "file": "cypress\\e2e\\loginwithfixture_1a.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "65e6199e-a421-474e-89ef-29d61fd5906c",
          "title": "Login with fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logs in using data from user.json",
              "fullTitle": "Login with fixture data Logs in using data from user.json",
              "timedOut": null,
              "duration": 17090,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/login');\n// Use fixture data to fill in login form\ncy.get('#username').type(this.userData.username);\ncy.get('#password').type(this.userData.password);\ncy.get('button[type=\"submit\"]').click();\n// Assertion \ncy.url().should('include', '/secure');\ncy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "1e66e0ee-2921-4ce8-8625-173e41f0093d",
              "parentUUID": "65e6199e-a421-474e-89ef-29d61fd5906c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e66e0ee-2921-4ce8-8625-173e41f0093d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17090,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9d58fae2-544d-4496-8a56-7562be3b323b",
      "title": "",
      "fullFile": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "file": "cypress\\e2e\\loginwithfixtureformdata_1b.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2b191123-703e-4933-b957-569647655796",
          "title": "Login using fixture data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login with form data from JSON file",
              "fullTitle": "Login using fixture data Login with form data from JSON file",
              "timedOut": null,
              "duration": 12875,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Load fixture\ncy.fixture('formData').then(data => {\n  cy.visit('https://practice.expandtesting.com/login');\n  // Fill in the form\n  cy.get('#username').type(data.username);\n  cy.get('#password').type(data.password);\n  cy.get('button[type=\"submit\"]').click();\n  // Validate login success\n  cy.url().should('include', '/secure');\n  cy.get('#flash').should('be.visible').and('contain.text', 'You logged into a secure area!');\n});",
              "err": {},
              "uuid": "fdee5ae2-f8ee-4ec4-a67c-559701431b94",
              "parentUUID": "2b191123-703e-4933-b957-569647655796",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fdee5ae2-f8ee-4ec4-a67c-559701431b94"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12875,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c632ffd9-c964-44ff-a567-eff26a444154",
      "title": "",
      "fullFile": "cypress\\e2e\\radiobutton_2c.cy.js",
      "file": "cypress\\e2e\\radiobutton_2c.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "62d1c132-15a8-42dd-b525-c8e131681b8d",
          "title": "Select Blue radio button",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select the Blue radio button",
              "fullTitle": "Select Blue radio button Select the Blue radio button",
              "timedOut": null,
              "duration": 7324,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/radio-buttons');\n//blue radio button\ncy.get('input#blue').check().should('be.checked');",
              "err": {},
              "uuid": "e542e80e-a519-4b5c-a87e-ba97b0856c71",
              "parentUUID": "62d1c132-15a8-42dd-b525-c8e131681b8d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e542e80e-a519-4b5c-a87e-ba97b0856c71"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7324,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7c8f6204-0b35-4bcb-b20c-9653c2610bb7",
      "title": "",
      "fullFile": "cypress\\e2e\\registernewuserAPI.cy.js",
      "file": "cypress\\e2e\\registernewuserAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5b8c78c9-889d-4f25-8fc4-32e910bd1e93",
          "title": "Register New User using API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new user",
              "fullTitle": "Register New User using API create a new user",
              "timedOut": null,
              "duration": 1912,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//const timestamp = Date.now()\nconst apidata = {\n  name: \"QAtester31\",\n  email: \"sssf30@abcd.com\",\n  password: \"QAPassword30\"\n};\ncy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/register',\n  body: apidata,\n  failOnStatusCode: false // allows manual status check\n}).then(res => {\n  cy.log(res);\n  // Step 2: Assert response status\n  expect(res.status).to.eq(201);\n  // Step 3: Validate success message\n  expect(res.body.message).to.eq('User account created successfully');\n});",
              "err": {},
              "uuid": "be14d5f1-0a02-4a9d-a3a1-c791a95599b6",
              "parentUUID": "5b8c78c9-889d-4f25-8fc4-32e910bd1e93",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be14d5f1-0a02-4a9d-a3a1-c791a95599b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1912,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4533bd22-fd4a-47e5-a431-57265df819e6",
      "title": "",
      "fullFile": "cypress\\e2e\\registrationForm.cy.js",
      "file": "cypress\\e2e\\registrationForm.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "49437fa8-050b-4491-890b-3e07ed8f92b4",
          "title": "Registration Form Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": " Registration Page",
              "fullTitle": "Registration Form Tests  Registration Page",
              "timedOut": null,
              "duration": 15278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('QATest28');\ncy.get('#password').type('QATest27');\n//cy.get('input#confirmPassword', { timeout: 10000 }).should('be.visible').type('test1234');\ncy.get('#confirmPassword', {\n  timeout: 10000\n}).should('be.visible').type('QATest27');\ncy.get('button[type=submit]').click();\n// Redirect to login and show success message\ncy.url().should('include', '/login');\ncy.get('#flash').should('be.visible').and('contain.text', 'Successfully registered, you can log in now.');",
              "err": {},
              "uuid": "b89f9e93-7cac-47c4-b3f7-cdee747d8e14",
              "parentUUID": "49437fa8-050b-4491-890b-3e07ed8f92b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "username validation",
              "fullTitle": "Registration Form Tests username validation",
              "timedOut": null,
              "duration": 12629,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#password').type('ValidPass');\ncy.get('#confirmPassword').type('ValidPass');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "91c75786-1f3c-4e9c-aded-9e8379d8046f",
              "parentUUID": "49437fa8-050b-4491-890b-3e07ed8f92b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing Password validation",
              "fullTitle": "Registration Form Tests Missing Password validation",
              "timedOut": null,
              "duration": 7846,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#confirmPassword').type('test123');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'All fields are required.');",
              "err": {},
              "uuid": "5097b5b1-d874-474f-b153-74fa50114218",
              "parentUUID": "49437fa8-050b-4491-890b-3e07ed8f92b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Non-matching passwords",
              "fullTitle": "Registration Form Tests Non-matching passwords",
              "timedOut": null,
              "duration": 9279,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#username').type('test');\ncy.get('#password').type('test123');\ncy.get('#confirmPassword').type('Mismatch123!');\ncy.get('button[type=submit]').click();\ncy.get('#flash').should('be.visible').and('contain.text', 'Passwords do not match.');",
              "err": {},
              "uuid": "8be1cea7-6a50-4810-9849-c53779ea0d44",
              "parentUUID": "49437fa8-050b-4491-890b-3e07ed8f92b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b89f9e93-7cac-47c4-b3f7-cdee747d8e14",
            "91c75786-1f3c-4e9c-aded-9e8379d8046f",
            "5097b5b1-d874-474f-b153-74fa50114218",
            "8be1cea7-6a50-4810-9849-c53779ea0d44"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 45032,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "913e2574-973e-4ecc-abc2-53b9306900dd",
      "title": "",
      "fullFile": "cypress\\e2e\\screateNoteAPI.cy.js",
      "file": "cypress\\e2e\\screateNoteAPI.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "557dc342-b705-495f-9b90-14dcd718bdbd",
          "title": "Create a Note",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a note and return an ID",
              "fullTitle": "Create a Note create a note and return an ID",
              "timedOut": null,
              "duration": 2961,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/notes',\n  headers: {\n    'x-auth-token': token,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    title: 'Test Note',\n    description: 'This is a test note created through API testing.',\n    category: 'Work'\n  }\n}).then(response => {\n  console.log('Response Body:', response.body);\n  cy.log(JSON.stringify(response.body));\n  // Basic response check\n  expect(response.status).to.eq(200);\n  // Adjust according to the actual structure\n  expect(response.body).to.have.property('data');\n  expect(response.body.data).to.have.property('id');\n  expect(response.body.data.title).to.eq('Test Note');\n});",
              "err": {},
              "uuid": "4bc93eaa-a99a-4f9c-a0eb-29701bfa3e1c",
              "parentUUID": "557dc342-b705-495f-9b90-14dcd718bdbd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4bc93eaa-a99a-4f9c-a0eb-29701bfa3e1c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2961,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fdb249de-6aa3-4d68-963b-4e31538b6e72",
      "title": "",
      "fullFile": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "file": "cypress\\e2e\\scrolldragdrop_3.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "scroll in an element",
          "fullTitle": "scroll in an element",
          "timedOut": null,
          "duration": 4368,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/scrollbars\");\n//scroll in to an element\n//cy.get(\"[id='search-input']\").type(\"scrollbars\")  \ncy.get('[style=\"height:150px;overflow-y: scroll;width:300px;overflow-x:scroll\"]').click();\ncy.get('#hidingButton').scrollIntoView().click();",
          "err": {},
          "uuid": "e1ac1eaa-1f2f-4061-a77f-8ac16bcf4bf9",
          "parentUUID": "fdb249de-6aa3-4d68-963b-4e31538b6e72",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Drag and drop",
          "fullTitle": "Drag and drop",
          "timedOut": null,
          "duration": 3834,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://practice.expandtesting.com/drag-and-drop\");\n// Drag Box A and drop it on Box B\ncy.get('#column-a').drag('#column-b');\n// Optional: assert that they’ve swapped\ncy.get('#column-a header').should('have.text', 'B');\ncy.get('#column-b header').should('have.text', 'A');",
          "err": {},
          "uuid": "a249ed96-9dad-4a97-8745-dacc7abb348d",
          "parentUUID": "fdb249de-6aa3-4d68-963b-4e31538b6e72",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "e1ac1eaa-1f2f-4061-a77f-8ac16bcf4bf9",
        "a249ed96-9dad-4a97-8745-dacc7abb348d"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 8202,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "348f8f1e-6976-4663-b54b-35401d472f1f",
      "title": "",
      "fullFile": "cypress\\e2e\\securePageTestPom.cy.js",
      "file": "cypress\\e2e\\securePageTestPom.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4d09ddea-c9ac-4324-bb7f-17a8085ac62a",
          "title": "secure Page Testcase with POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user should login and redirect to secure area",
              "fullTitle": "secure Page Testcase with POM user should login and redirect to secure area",
              "timedOut": null,
              "duration": 9795,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('practice');\nloginPage.enterPassword('SuperSecretPassword!');\nloginPage.clickLogin();\nsecurePage.isAtSecurePage();\nsecurePage.getSuccessAlert().should('contain.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "4a8f531b-44cc-4f75-829a-eec62bad325c",
              "parentUUID": "4d09ddea-c9ac-4324-bb7f-17a8085ac62a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User should be able to logout successfully",
              "fullTitle": "secure Page Testcase with POM User should be able to logout successfully",
              "timedOut": null,
              "duration": 14091,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "loginPage.enterUsername('practice');\nloginPage.enterPassword('SuperSecretPassword!');\nloginPage.clickLogin();\nsecurePage.logout();\ncy.url().should('include', '/login');\ncy.get('#flash, .flash.info').should('contain.text', 'You logged out of the secure area!'); // Adjust based on actual message",
              "err": {},
              "uuid": "bbb24dc9-ec03-4eca-943c-2fec17984947",
              "parentUUID": "4d09ddea-c9ac-4324-bb7f-17a8085ac62a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4a8f531b-44cc-4f75-829a-eec62bad325c",
            "bbb24dc9-ec03-4eca-943c-2fec17984947"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23886,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "47334d75-656b-4335-8547-5d7b15bbe43c",
      "title": "",
      "fullFile": "cypress\\e2e\\usePrevSubject.cy.js",
      "file": "cypress\\e2e\\usePrevSubject.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "529e419c-2e9e-4ea4-9f8a-5e5776f923b4",
          "title": "usePrevSubject",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login using Fillinput",
              "fullTitle": "usePrevSubject Login using Fillinput",
              "timedOut": null,
              "duration": 11336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Use previous subject\ncy.get('#username').fillinput('practice');\ncy.get('#password').fillinput('SuperSecretPassword!');\ncy.get('#login > .btn').click();\ncy.get('b').should('have.text', 'You logged into a secure area!');",
              "err": {},
              "uuid": "dc4b2108-63c4-420a-bc5a-99c7a777b9b9",
              "parentUUID": "529e419c-2e9e-4ea4-9f8a-5e5776f923b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc4b2108-63c4-420a-bc5a-99c7a777b9b9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11336,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0110078a-bf1a-4fc9-989d-d2cb9c043bfa",
      "title": "",
      "fullFile": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "file": "cypress\\e2e\\validatedynamiccontentTable_5.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b824e6ba-8288-4578-a7df-1ce0628c0d53",
          "title": "Validate Chrome CPU usage matches the label",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "fullTitle": "Validate Chrome CPU usage matches the label Locate Chrome Row and Compare its CPU value in the table with the yellow label ",
              "timedOut": null,
              "duration": 6305,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\n// Wait until Chrome row appears\ncy.get(\"table.table-striped tbody tr\").each($tr => {\n  const $td = $tr.find('td');\n  const browserName = $td.eq(0).text().trim();\n  if (browserName == 'Chrome') {\n    var _find;\n    const cpuUsageFromTable = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText.trim();\n    cy.get('#chrome-cpu').invoke('text').then(fullText => {\n      const match = fullText.match(/(\\d+(\\.\\d+)?%)/);\n      const cpuUsageFromCard = match ? match[0] : null;\n      expect(cpuUsageFromCard).to.eq(cpuUsageFromTable);\n    });\n  }\n});",
              "err": {},
              "uuid": "cc000d54-2883-460e-82d1-bcb0f028e3d6",
              "parentUUID": "b824e6ba-8288-4578-a7df-1ce0628c0d53",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc000d54-2883-460e-82d1-bcb0f028e3d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6305,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ee045b09-3f84-4b25-8d4d-942caf0d3021",
      "title": "",
      "fullFile": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "file": "cypress\\e2e\\validateeachbrowsernameandcpu_4.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bab65e57-5fed-4922-9d41-feac849aee15",
          "title": "Log Each Browsername and its cpu usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "use .each() to log each browser name and its CPU usage.",
              "fullTitle": "Log Each Browsername and its cpu usage use .each() to log each browser name and its CPU usage.",
              "timedOut": null,
              "duration": 7798,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsage = (_find = [...$td].find(td => td.innerText.includes('%'))) === null || _find === void 0 ? void 0 : _find.innerText;\n  cy.log('Browser Name is ', browsername, 'cpu usage', cpuUsage);\n});",
              "err": {},
              "uuid": "664b72cf-e928-4261-b7fd-0c48e1d95929",
              "parentUUID": "bab65e57-5fed-4922-9d41-feac849aee15",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Count how many browsers have CPU usage over 20%.",
              "fullTitle": "Log Each Browsername and its cpu usage Count how many browsers have CPU usage over 20%.",
              "timedOut": null,
              "duration": 3292,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let count = 0;\ncy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table[class='table table-striped'] tbody tr \").each(($tr, i) => {\n  var _find2;\n  const $td = $tr.find('td');\n  const browsername = $td.eq(0).text();\n  const cpuUsageText = (_find2 = [...$td].find(td => td.innerText.includes('%'))) === null || _find2 === void 0 ? void 0 : _find2.innerText;\n  if (cpuUsageText) {\n    const cpuValue = parseFloat(cpuUsageText.replace('%', ''));\n    if (cpuValue > 20) {\n      count++;\n    }\n  }\n}).then(() => {\n  cy.log('Total browser count with>20 % is', count);\n});",
              "err": {},
              "uuid": "94d37873-0052-4587-8f24-c985a8761cd8",
              "parentUUID": "bab65e57-5fed-4922-9d41-feac849aee15",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "664b72cf-e928-4261-b7fd-0c48e1d95929",
            "94d37873-0052-4587-8f24-c985a8761cd8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11090,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "60d13c55-d540-419e-ad67-72af41b7a94c",
      "title": "",
      "fullFile": "cypress\\e2e\\LoopNumbers.cy.js",
      "file": "cypress\\e2e\\LoopNumbers.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4d00dfc7-7988-45f8-9e0b-de1db963889e",
          "title": "loop Numbers",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "loop",
              "fullTitle": "loop Numbers loop",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "for (let i = 1; i <= 10; i++) {\n  if (i % 2 === 0) {\n    cy.log(i);\n  }\n}",
              "err": {},
              "uuid": "f6f91524-3471-44a6-9aad-acbc72c77026",
              "parentUUID": "4d00dfc7-7988-45f8-9e0b-de1db963889e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "f6f91524-3471-44a6-9aad-acbc72c77026"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}