{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-14T05:02:55.328Z",
    "end": "2025-08-14T05:02:57.585Z",
    "duration": 2257,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3a982656-4d2d-4515-bfed-0aa21a9e7416",
      "title": "",
      "fullFile": "cypress\\e2e\\loginandExtractToken.cy.js",
      "file": "cypress\\e2e\\loginandExtractToken.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5e8b4231-0aab-4354-8fcb-63633f9a7a75",
          "title": "User Login API and Extract Token",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "log in and extract the token",
              "fullTitle": "User Login API and Extract Token log in and extract the token",
              "timedOut": null,
              "duration": 2190,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://practice.expandtesting.com/notes/api/users/login',\n  body: apidata,\n  failOnStatusCode: false\n}).then(res => {\n  cy.log(res);\n  // Step 3: Assert response status\n  expect(res.status).to.eq(200);\n  // Step 2: Extract and validate token\n  //expect(response.body).to.have.property('token');\n  cy.log(res.body.message);\n  expect(res.body.message).to.eq(\"Login successful\");\n  const token = res.body.data.token;\n  expect(res.body.data.token).to.not.be.null;\n  //cy.log(authToken)\n  // Save token to alias for reuse\n  cy.wrap(token).as('authToken');\n});",
              "err": {},
              "uuid": "a6a9970c-3f64-4c85-b1c0-559153f35410",
              "parentUUID": "5e8b4231-0aab-4354-8fcb-63633f9a7a75",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6a9970c-3f64-4c85-b1c0-559153f35410"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2190,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}