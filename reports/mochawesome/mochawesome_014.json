{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-14T09:04:11.765Z",
    "end": "2025-08-14T09:04:16.571Z",
    "duration": 4806,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7a765848-138e-4d8c-9d75-4b4d196c6ac4",
      "title": "",
      "fullFile": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "file": "cypress\\e2e\\extractandassertTabledata_6.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a5c8fbac-76aa-4f46-a04b-30e14b8c68ae",
          "title": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Find the column index for \"Memory\"",
              "fullTitle": "Find the column index for \"Memory\" and Print each row browser and corresponding memory usage Find the column index for \"Memory\"",
              "timedOut": null,
              "duration": 4667,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://practice.expandtesting.com/dynamic-table');\ncy.get(\"table.table-striped thead tr th\").then($tr => {\n  let memoryColumnIndex = -1;\n  $tr.each((index, th) => {\n    const tr = th.innerText;\n    if (tr == 'Memory') {\n      memoryColumnIndex = index;\n    }\n  });\n  cy.log('Memory column index: ', memoryColumnIndex);\n  cy.get(\"table.table-striped tbody tr\").each($trow => {\n    const $cells = $trow.find('td');\n    const browserName = $cells.eq(0).text().trim();\n    const memory = $cells.eq(memoryColumnIndex).text();\n    cy.log(browserName, ' Memory:', memory);\n  });\n});",
              "err": {},
              "uuid": "968317fe-a6c8-49b3-876b-da1332d99cbf",
              "parentUUID": "a5c8fbac-76aa-4f46-a04b-30e14b8c68ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "968317fe-a6c8-49b3-876b-da1332d99cbf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4667,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "reports/mochawesome"
      },
      "version": "6.2.0"
    }
  }
}