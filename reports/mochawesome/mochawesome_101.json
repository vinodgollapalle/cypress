{
  "stats": {
    "suites": 11,
    "tests": 10,
    "passes": 9,
    "pending": 0,
    "failures": 1,
    "start": "2025-08-12T09:38:31.577Z",
    "end": "2025-08-12T09:38:34.774Z",
    "duration": 3197,
    "testsRegistered": 10,
    "passPercent": 90,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c01ca7b8-ace3-4ba8-bf99-59f059107fdf",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cef294e3-a593-4188-9ffe-e2ec4472de3f",
          "title": "Cypress APIs",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9566522f-d922-4ab7-9f1b-5ee10f78288a",
              "title": "Cypress.Commands",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".add() - create a custom command",
                  "fullTitle": "Cypress APIs Cypress.Commands .add() - create a custom command",
                  "timedOut": null,
                  "duration": 239,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, (subject, method) => {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log';\n  // log the subject to the console\n  console[method]('The subject is', subject);\n  // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n});\ncy.get('button').console('info').then($button => {\n  // subject is still $button\n});",
                  "err": {},
                  "uuid": "4b5eb3bc-8183-4a23-aff1-6be8ea369e55",
                  "parentUUID": "9566522f-d922-4ab7-9f1b-5ee10f78288a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4b5eb3bc-8183-4a23-aff1-6be8ea369e55"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 239,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "34da3911-c282-4066-9159-36973220329d",
              "title": "Cypress.Cookies",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".debug() - enable or disable debugging",
                  "fullTitle": "Cypress APIs Cypress.Cookies .debug() - enable or disable debugging",
                  "timedOut": null,
                  "duration": 146,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Cookies.debug(true);\n// Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
                  "err": {},
                  "uuid": "5ad66626-744a-44a5-8b57-a251abe46143",
                  "parentUUID": "34da3911-c282-4066-9159-36973220329d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5ad66626-744a-44a5-8b57-a251abe46143"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 146,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "09323914-3c64-4734-a765-33c0ef325836",
              "title": "Cypress.arch",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get CPU architecture name of underlying OS",
                  "fullTitle": "Cypress APIs Cypress.arch Get CPU architecture name of underlying OS",
                  "timedOut": null,
                  "duration": 124,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
                  "err": {},
                  "uuid": "ebc2f037-1c1d-4743-a964-5e1adae7c6f2",
                  "parentUUID": "09323914-3c64-4734-a765-33c0ef325836",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ebc2f037-1c1d-4743-a964-5e1adae7c6f2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 124,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "35c081de-e871-4a68-9602-cdc9763121ce",
              "title": "Cypress.config()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get and set configuration options",
                  "fullTitle": "Cypress APIs Cypress.config() Get and set configuration options",
                  "timedOut": null,
                  "duration": 368,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"\\\\2-advanced-examples\\\\cypress_api.cy.js\\\\Cypress APIs -- Cypress.config() -- Get and set configuration options (failed).png\"\n    ]\n  ]\n}",
                  "code": "// https://on.cypress.io/config\nlet myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000);\n// this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
                  "err": {
                    "message": "AssertionError: expected { Object (baseUrl, setupNodeEvents, ...) } to have property 'baseUrl' of null, but got 'https://practice.expandtesting.com/'",
                    "estack": "AssertionError: expected { Object (baseUrl, setupNodeEvents, ...) } to have property 'baseUrl' of null, but got 'https://practice.expandtesting.com/'\n    at Context.eval (webpack://cypress/./cypress/e2e/2-advanced-examples/cypress_api.cy.js:76:31)",
                    "diff": null
                  },
                  "uuid": "dcd6bd2c-8db5-4d6c-b2c5-403971d3a2b1",
                  "parentUUID": "35c081de-e871-4a68-9602-cdc9763121ce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "dcd6bd2c-8db5-4d6c-b2c5-403971d3a2b1"
              ],
              "pending": [],
              "skipped": [],
              "duration": 368,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4aba48af-728d-4680-aa1a-1e2c15599acd",
              "title": "Cypress.dom",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".isHidden() - determine if a DOM element is hidden",
                  "fullTitle": "Cypress APIs Cypress.dom .isHidden() - determine if a DOM element is hidden",
                  "timedOut": null,
                  "duration": 129,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nlet visibleP = Cypress.$('.dom-p p.visible').get(0);\n// our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be.true;\nexpect(Cypress.dom.isHidden(visibleP)).to.be.false;",
                  "err": {},
                  "uuid": "0a10ed17-2c8a-4b65-9c33-1504c6533ba3",
                  "parentUUID": "4aba48af-728d-4680-aa1a-1e2c15599acd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0a10ed17-2c8a-4b65-9c33-1504c6533ba3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 129,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3028eb63-7a57-4683-b3d0-1b603e32e33a",
              "title": "Cypress.env()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get environment variables",
                  "fullTitle": "Cypress APIs Cypress.env() Get environment variables",
                  "timedOut": null,
                  "duration": 127,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n});\n// get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local');\n// set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/');\n// get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
                  "err": {},
                  "uuid": "d6e64624-0894-441b-84d2-654b0c3efd8a",
                  "parentUUID": "3028eb63-7a57-4683-b3d0-1b603e32e33a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d6e64624-0894-441b-84d2-654b0c3efd8a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 127,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "564736f1-b2f7-423d-ab24-6367ca462ccb",
              "title": "Cypress.log",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Control what is printed to the Command Log",
                  "fullTitle": "Cypress APIs Cypress.log Control what is printed to the Command Log",
                  "timedOut": null,
                  "duration": 103,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/cypress-log",
                  "err": {},
                  "uuid": "4c174d83-074d-4f73-a878-44be4620737e",
                  "parentUUID": "564736f1-b2f7-423d-ab24-6367ca462ccb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4c174d83-074d-4f73-a878-44be4620737e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 103,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f792e166-b50f-4f3d-b99e-0f2309004241",
              "title": "Cypress.platform",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get underlying OS name",
                  "fullTitle": "Cypress APIs Cypress.platform Get underlying OS name",
                  "timedOut": null,
                  "duration": 112,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
                  "err": {},
                  "uuid": "e63d82c3-88a9-46b1-b5af-b24d16c216c5",
                  "parentUUID": "f792e166-b50f-4f3d-b99e-0f2309004241",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e63d82c3-88a9-46b1-b5af-b24d16c216c5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 112,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "61bf73a6-fa57-4302-a1c9-cd8de071721d",
              "title": "Cypress.version",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get current version of Cypress being run",
                  "fullTitle": "Cypress APIs Cypress.version Get current version of Cypress being run",
                  "timedOut": null,
                  "duration": 111,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
                  "err": {},
                  "uuid": "a36ee6fb-3003-4f99-83ee-ec731be30e9c",
                  "parentUUID": "61bf73a6-fa57-4302-a1c9-cd8de071721d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a36ee6fb-3003-4f99-83ee-ec731be30e9c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 111,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c92deac7-c132-4374-8c96-3341ab62934e",
              "title": "Cypress.spec",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get current spec information",
                  "fullTitle": "Cypress APIs Cypress.spec Get current spec information",
                  "timedOut": null,
                  "duration": 122,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
                  "err": {},
                  "uuid": "b6b1bd42-3ff3-4ae0-b799-a4127583f50e",
                  "parentUUID": "c92deac7-c132-4374-8c96-3341ab62934e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b6b1bd42-3ff3-4ae0-b799-a4127583f50e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 122,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}